% Encoding: UTF-8

@Article{Acuna2015,
  author                  = {Acuña, S.T. and Gómez, M.N. and Hannay, J.E. and Juristo, N. and Pfahl, D.},
  title                   = {Are team personality and climate related to satisfaction and software quality? Aggregating results from a twice replicated experiment},
  journal                 = {Information and Software Technology},
  year                    = {2015},
  volume                  = {57},
  number                  = {1},
  pages                   = {141-156},
  issn                    = {09505849},
  note                    = {cited By 7},
  abbrev_source_title     = {Inf Software Technol},
  abstract                = {Context: Research into software engineering teams focuses on human and social team factors. Social psychology deals with the study of team formation and has found that personality factors and group processes such as team climate are related to team effectiveness. However, there are only a handful of empirical studies dealing with personality and team climate and their relationship to software development team effectiveness. Objective: We present aggregate results of a twice replicated quasi-experiment that evaluates the relationships between personality, team climate, product quality and satisfaction in software development teams. Method: Our experimental study measures the personalities of team members based on the Big Five personality traits (openness, conscientiousness, extraversion, agreeableness, neuroticism) and team climate factors (participative safety, support for innovation, team vision and task orientation) preferences and perceptions. We aggregate the results of the three studies through a meta-analysis of correlations. The study was conducted with students. Results: The aggregation of results from the baseline experiment and two replications corroborates the following findings. There is a positive relationship between all four climate factors and satisfaction in software development teams. Teams whose members score highest for the agreeableness personality factor have the highest satisfaction levels. The results unveil a significant positive correlation between the extraversion personality factor and software product quality. High participative safety and task orientation climate perceptions are significantly related to quality. Conclusions: First, more efficient software development teams can be formed heeding personality factors like agreeableness and extraversion. Second, the team climate generated in software development teams should be monitored for team member satisfaction. Finally, aspects like people feeling safe giving their opinions or encouraging team members to work hard at their job can have an impact on software quality. Software project managers can take advantage of these factors to promote developer satisfaction and improve the resulting product. © 2014 Elsevier B.V. All rights reserved.},
  affiliation             = {Escuela Politécnica Superior, Universidad Autónoma de Madrid, Calle Francisco Tomás y Valiente 11, Madrid, Spain; Escuela Politécnica Superior, Universidad CEU San Pablo, Campus de Montepríncipe, Madrid, Spain; Modeling and Simulation Research Program, Norwegian Defence Research Establishment (FFI), P.O. Box 25, Kjeller, Norway; Facultad de Informática, Universidad Politécnica de Madrid, Campus de Montegancedo, Madrid, Spain; Institute of Computer Science, University of Tartu, J. Liivi 2, Tartu, Estonia},
  author_keywords         = {Meta-analysis; Personality factors; Replication; Satisfaction; Software quality; Team climate},
  coden                   = {ISOTE},
  comment                 = {Results of a Twice Replicated Quasi-experiment We Aggregate the Results of the Three Studies Conducted with Students},
  correspondence_address1 = {Acuña, S.T.; Escuela Politécnica Superior, Universidad Autónoma de Madrid, Calle Francisco Tomás y Valiente 11, Spain},
  document_type           = {Conference Paper},
  doi                     = {10.1016/j.infsof.2014.09.002},
  keywords                = {Aggregates; Behavioral research; Computer software selection and evaluation; Quality control; Safety engineering; Software engineering, Meta analysis; Personality factors; Replication; Satisfaction; Software Quality; Team climate, Software design},
  language                = {English},
  publisher               = {Elsevier},
  references              = {Acuña, S.T., Juristo, N., Assigning people to roles in software projects (2004) Softw.: Pract. Exp., 34, pp. 675-696; Acuña, S.T., Gómez, M., Juristo, N., Towards understanding the relationship between team climate and software quality - A quasi-experimental study (2008) Empirical Softw. Eng., 13 (4), pp. 401-434; Acuña, S.T., Gómez, M., Juristo, N., How do personality, team processes and task characteristics relate to job satisfaction and software quality? (2009) Inf Softw. Technol., 51, pp. 627-639; Anderson, N., Burch, G.J., (2003) The Team Selection Inventory, , ASE, NFER-Nelson, Slough; Anderson, N., West, M., (1994) The Team Climate Inventory, , ASE, NFER-Nelson, Windsor; Anderson, N., West, M., Measuring climate for work group innovation: Development and validation of the team climate inventory (1998) J. Org. Behav., 19, pp. 235-258; Anderson, N., West, M., (1999) The Team Climate Inventory: User's Guide, , Second ed., ASE, NFER-Nelson, Windsor; Barrick, M.R., Mount, M.K., The Big Five personality dimensions and job performance: A meta-analysis (1991) Pers. Psychol., 44, pp. 1-26; Barrick, M.R., Stewart, G.L., Neubert, M.J., Mount, M.K., Relating member ability and personality to work-team processes and team effectiveness (1998) J. Appl. Psychol., 83, pp. 377-391; Barry, B., Stewart, G.L., Composition, process and performance in self-managed groups: The role of personality (1997) J. Appl. Psychol., 82, pp. 62-78; Beck, K., (1999) Extreme Programming Explained: Embrace Change, , Addison-Wesley, Reading, MA; Beck, K., Cunningham, W., A laboratory for teaching object-oriented thinking (1989) Proceedings of Object-Oriented Programming Systems, Languages and Applications (OOPSLA '89), 24 (10), pp. 1-6. , SIGPLAN Notices; Beck, K., Beedle, M., Cockburn, A., Cunnimgham, W., Fowler, M., (2001) Agile Manifesto, , http://agilemanifesto.org/; Beck, K., Fowler, M., (2001) Planning Extreme Programming, , Addison-Wesley, Boston MA; Boehm, B.W., Abts, C., Brown, W.A., Chulani, S., Clark, B.K., Horowitz, E., Madachy, R., Steece, B., (2000) Software Cost Estimation with COCOMO II, , Prentice Hall, Upper Saddle River, NJ; Borenstein, M., Hedges, L.V., Rothstein, H., Meta-analysis-fixed effects versus random effects (2007) Tech. Rep., , meta-analysis.com/downloads/Meta-analysis_fixed_effect_vs_random_effects.pdf, Biostat Inc; Burch, G.J., Anderson, N., Measuring person-team fit: Development and validation of the team selection inventory (2004) J. Manage. Psychol., 19 (4), pp. 406-426; Burch, G., Anderson, N., Personality as a predictor of work-related behavior and performance: Recent advances and directions for future research (2008) Int'l Review of Industrial and Organizational Psychology, pp. 261-305. , In: G.P. Hodgkinson, J.K. Ford (Eds.), John Wiley & Sons; Luiz Fernando Capretz Personality types in software engineering (2003) Int. J. Hum Comput Stud., 58 (2), pp. 207-214; Chan, D., Functional relations among constructs in the same content domain at different levels of analysis: A typology of composition models (1998) J. Appl. Psychol., 83 (2), pp. 234-246; Cook, T.D., Campbell, D.T., (1979) Quasi-Experimentation Design and Analysis Issues for the Field Settings, , Houghton Mifflin, Boston, MA; Costa, Jr.P.T., McCrae, R.R., NEO personality inventory (1992) Revised Psychological Assessment Resources, , Odessa, Florida, Spanish Version., 2002. TEA Ediciones, Madrid; Cruz, S.S.J.O., Da Silva, F.Q.B., Monteiro, C.V.F., Santos, P.C.F., Dos Santos, I.R.M., Personality in software engineering: Preliminary findings from a systematic literature review (2011) Proceedings of the 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), pp. 1-10; Curral, L.A., Forrester, R.H., Dawson, J.F., West, M.A., It's what you do and the way that you do it: Team task, team size, and innovation-related group (2001) Eur. J. Work Org. Psychol., 10 (2), pp. 187-204; Demarco, T., Lister, T., (1999) Peopleware: Productive Projects and Teams, , Second ed., Dorset House, New York; Dybå, T., Arisholm, E., Sjøberg, D.I.K., Hannay, J.E., Shull, F., Are two heads better than one? on the effectiveness of pair programming (2007) IEEE Softw., 24 (6), pp. 10-13; Dybå, T., Dingsøyr, T., Empirical studies of agile software development: A systematic review (2008) Inf. Softw. Technol., 50, pp. 833-859; English, A., Griffith, R.L., Steelman, L.A., Team performance: The effect of team conscientiousness and task type (2004) Small Group Res., 35 (6), pp. 643-665; Faraj, S., Sproull, L., Coordinating expertise in software development teams (2000) Manage. Sci., 46 (12), pp. 1554-1568; Feldt, R., Torkar, R., Angelis, L., Samuelsson, M., Towards individualized software engineering: Empirical studies should collect psychometrics (2008) Proceedings of the International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE '08), pp. 49-52. , ACM New York; Feldt, R., Links between the personalities, views and attitudes of software engineers (2010) Inf. Softw. Technol., 52 (6), pp. 611-624; Gladstein, D.L., Groups in context: A model of task group effectiveness (1984) Adm. Sci. Q., 29, pp. 499-517; Goparaju, P.S., Ayesha, F., Sanghamitra, P., Soft factors affecting the performance of software development teams (2011) Team Perform. Manage., 17 (3-4), pp. 187-205; Hackman, J.R., Oldham, G.R., (1987) Work Redesign, , Addison-Wesley, Reading MA; Hannay, J.E., Dybå, T., Arisholm, E., Sjøberg, D.I.K., The effectiveness of pair programming: A meta-analysis (2009) Inf. Softw. Technol., 51, pp. 1110-1122; Hedges, L.V., Vevea, J.L., Fixed- and random-effects models in meta-analysis (1998) Psychol. Methods, 3 (4), pp. 486-504; Higgins, J.P., Thompson, S.G., Deeks, J.J., Altman, D.G., Measuring inconsistency in meta-analyses (2003) Br. Med. J., 327 (4), pp. 557-560; Höst, M., Regnell, B., Wohlin, C., Using students as subjects - A comparative study of students and professionals in lead-time impact assessment (2000) Empirical Softw. Eng., 5 (3), pp. 201-214; Hunter, J.E., Schmidt, F.L., Fixed effects vs. Random effects meta-analysis models: Implications for cumulative research knowledge (2000) Int. J. Sel. Assess., 327 (8), pp. 272-292; (2004) IEEE, Guide to the Software Engineering Body of Knowledge-SWEBOK Version 2004, , IEEE Computer Society California; Jacobson, I., Booch, G., Rumbaugh, J., (1999) The Unified Software Process Development, , Addison Wesley, Reading, MA; Jarvenpaa, S.L., Leidner, D.E., Communication and trust in global virtual teams (1999) Organ. Sci., 10 (6), pp. 791-815; Jedlitschka, A., Ciolkowski, M., Pfahl, D., Reporting experiments in software engineering (2008) Guide to Advanced Empirical Software Engineering, pp. 201-228. , In: F. Shull, J. Singer, D.I.K. Sjøberg (Eds.), Springer, London; Jehn, K.A., A qualitative analysis of conflict types and dimensions in organizational groups (1997) Adm. Sci. Q., 42, pp. 530-557; Kellner, M.I., Madachy, R.J., Raffo, D.M., Software process simulation modelling: Why? What? How? (1999) J Syst. Softw., 46, pp. 91-105; Kenny, D.A., La Voie, L., Separating individual and group effects (1985) J. Pers. Soc. Psychol., 48 (2), pp. 339-348; Lipsey, M.W., Wilson, D.B., (2001) Practical Meta-Analysis, , Sage Thousand Oaks CA; Macias, F., Holcombe, M., Gheorghe, M., A formal experiment comparing extreme programming with traditional software construction (2003) Proceedings of the Fourth Mexican International Conference on Computer Science (ENC 2003), pp. 73-80; Mañas, M.A., González-Romá, V., Peiro, J.M., (1999) Determinants and Consequences Universidad de Almería, , Work-Group Climate, Instituto de Estudios Almerienses, Almeria Spain; Miller, J., Applying meta-analytical procedures to software engineering experiments (2000) J. Syst. Softw., 54 (1-2), pp. 29-39; McGrath, J.E., (1984) Groups: Interaction and Performance, , Prentice-Hall, Englewood Cliffs, New Jersey; Molleman, E., Nauta, A., Jehn, K.E., Matching tasks and workers in teams: A multi-level approach (2002) Proceedings of the 6th International Workshop on Teamworking, pp. 288-310. , School of Technology and Society. Malmö University, Malmö; Molleman, E., Nauta, A., Jehn, K.A., Person-job fit applied to teamwork: A multilevel approach (2004) Small Group Res., 35, pp. 515-539; Moore, E., Personality characteristics of information systems professionals (1991) Proceedings of the Conference on SIGCPR, pp. 140-155; Myers, I.B., McCaulley, H.M., Quenk, N.L., Hammer, A.L., (1998) MBTI Manual (A Guide to the Development and Use of the Myers Briggs Type Indicator), , Third ed. Consulting Psychologists Press; Peslak, A., The impact of personality on information technology team projects (2006) Proceedings of the SIGMIS-CPR'06, Claremont, pp. 273-279. , California, USA; Pfahl, D., Laitenberger, O., Ruhe, G., Dorsch, J., Krivobokova, T., Evaluating the learning effectiveness of using simulations in software project management education: Results from a twice replicated experiment (2004) Inf. Softw. Technol., 46, pp. 127-147; Salleh, N., Mendes, E., Grundy, J.C., Burch, G.St.J., An empirical study of the effects of conscientiousness in pair programming using the five-factor personality model (2010) Proceedings of the ACM/IEEE International Conference on Software Engineering, 1, pp. 577-586; Salleh, N., Mendes, E., Grundy, J.C., Burch, G.St.J., The effects of neuroticism on pair programming: An empirical study in the higher education context (2010) Proceedings of the ACM-IEEE International Symposium on Empirical Software Engineering and Measurement; Salleh, N., Mendes, E., Grundy, J., The effects of openness to experience on pair programming in a higher education context (2011) Proceedings of the 24th International Conference on Software Engineering Education and Training (CSEE & T 2011), pp. 149-158. , IEEE Computer Society; Sfetsos, P., Stamelos, I., Angelis, L., Deligiannis, I., An experimental investigation of personality types impact on pair effectiveness in pair programming (2009) Empirical Softw. Eng., 14, pp. 187-226; Seger, T., Hazzan, O., Bar-Nahor, R., (2007) How Does Readiness for Agile Development Relate to Team Climate and Individual Personality Attributes?, , Springer-Verlag, Berlin, Heidelberg; Thamhain, H.J., Wilemon, D.L., Building high performing engineering project teams (1987) IEEE Trans. Eng. Manage., 34 (3), pp. 130-137; Turley, R., Bieman, J., Competencies of exceptional and nonexceptional software engineers (1995) J. Syst. Softw., 28 (1), pp. 19-38; Walle, T., Hannay, J.E., Personality and the nature of collaboration in pair programming (2009) Proceedings of the 3rd. International Symposium on Empirical Software Engineering and Measurement (ESEM 2013), pp. 203-213. , IEEE Computer Society; Van Vianen, A.E.M., De Dreu, C.K.W., Personality in team: Its relationship to social cohesion, task cohesion, and team performance (2001) Eur. J. Work Org. Psychol., 10 (2), pp. 97-120; West, M.A., The social psychology of innovation in groups (1990) Innov. Innovation and Creativity at Work: Psychological and Organizational Strategies, , In: M.A. West, J.L. Farr (Eds.), Wiley, Chichester, UK; West, M.A., Anderson, N., Innovation in top management teams (1996) J. Appl. Psychol., 81, pp. 680-693; Wynekoop, J., Walz, D., Investigating traits of top performing software developers (2000) Inf. Technol. People, 13 (3), pp. 186-195; Zander, A., (1994) Making Groups Effective, , Second ed. Jossey-Bass, San Francisco, CA},
  review                  = {{QE C8 C11}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922565631&doi=10.1016%2fj.infsof.2014.09.002&partnerID=40&md5=c8ffa2b1f8c1e6573832657117e16567},
}

@Article{Albayrak2014241,
  author                  = {Albayrak, O. and Carver, J.C.},
  title                   = {Investigation of individual factors impacting the effectiveness of requirements inspections: A replicated experiment},
  journal                 = {Empirical Software Engineering},
  year                    = {2014},
  volume                  = {19},
  number                  = {1},
  pages                   = {241-266},
  issn                    = {13823256},
  note                    = {cited By 7},
  abbrev_source_title     = {Empir Software Eng},
  abstract                = {This paper presents a replication of an empirical study regarding the impact of individual factors on the effectiveness of requirements inspections. Experimental replications are important for verifying results and investigating the generality of empirical studies. We utilized the lab package and procedures from the original study, with some changes and additions, to conduct the replication with 69 professional developers in three different companies in Turkey. In general the results of the replication were consistent with those of the original study. The main result from the original study, which is supported in the replication, was that inspectors whose degree is in a field related to software engineering are less effective during a requirements inspection than inspectors whose degrees are in other fields. In addition, we found that Company, Experience, and English Proficiency impacted inspection effectiveness. © 2012 Springer Science+Business Media, LLC.},
  affiliation             = {Department of Computer Technology and Information Systems, Bilkent University, Ankara, Turkey; Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States},
  author_keywords         = {Empirical studies; Replication; Requirements; Software engineering; Software inspections},
  coden                   = {ESENF},
  correspondence_address1 = {Carver, J.C.; Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States; email: carver@cs.ua.edu},
  document_type           = {Article},
  doi                     = {10.1007/s10664-012-9221-0},
  keywords                = {Empirical studies; Experimental replications; Individual factors; Replicated experiment; Replication; Requirements; Software inspection, Computer software selection and evaluation; Industry; Software engineering, Inspection},
  language                = {English},
  references              = {Aceituna, D., Do, H., Walia, G.S., Lee, S.-W., Evaluating the use of model-based requirements verification method: A feasibility study (2011) Proc. 2011 First International Workshop on Empirical Requirements Engineering (EmpiRE), pp. 13-20; Andersson, C., A replicated empirical study of a selection method for software reliability growth models (2007) Empir Softw Eng, 12 (2), pp. 161-182. , 10.1007/s10664-006-9018-0; Aurum, A., Petersson, H., Wohlin, C., State-of-the-art: Software inspections after 25 years (2002) Soft Test Verif Rel, 12 (3), pp. 133-154. , 10.1002/stvr.243; Aurum, A., Wohlin, C., Petersson, H., Increasing the understanding of effectiveness in software inspections using published data sets (2005) J Res Pract Inf Technol, 37 (3), pp. 253-266; Basili, V.R., Green, S., Laitenberger, O., Lanubile, F., Shull, F., Sørumgård, S., Zelkowitz, M.V., The empirical investigation of perspective-based reading (1996) Empir Softw Eng, 1 (2), pp. 133-164. , 10.1007/BF00368702; Biffl, S., Analysis of the impact of reading technique and inspector capability on individual inspection performance (2000) Proc.7th Asia-Pacific Softw. Eng. Conf, pp. 136-145; Carver, J., (2003) The Impact of Background and Experience on Software Inspections, , PhD Thesis. Dept. of Comp. Sci., Univ. of MD; Carver, J., The impact of background and experience on software inspections (2004) Empir Softw Eng, 9 (3), pp. 259-262. , 10.1023/B:EMSE.0000027786.04555.97; Carver, J., Lemon, K., Architecture reading techniques: A feasibility study (2005) Proc.4th Int'l Symp. on Emp. Softw. Eng. (Late Breaking Research Track), pp. 17-20; Carver, J., Shull, F., Basili, V., Observational studies to accelerate process experience in classroom studies: An evaluation (2003) Proc.2nd Int'l Symp. on Emp. Softw. Eng., pp. 72-79; Carver, J., Shull, F., Basili, V.R., Can observational techniques help novices overcome the software inspection learning curve? An empirical investigation (2006) Empir Softw Eng, 11 (4), pp. 523-539. , 10.1007/s10664-006-9021-5; Carver, J.C., Nagappan, N., Page, A., The impact of educational background on the effectiveness of requirements inspections: An empirical study (2008) IEEE Trans Softw Eng, 34 (6), pp. 800-812. , 10.1109/TSE.2008.49; Ciolkowski, M., What do we know about perspective-based reading? An approach for quantitative aggregation in software engineering (2009) Proc.3rd International Symposium on Empirical Software Engineering and Measurement (ESEM 2009), pp. 133-144; Dillon, A., McKnight, C., Richardson, J., Reading from paper versus reading from screen (1988) Comput J, 31 (5), pp. 457-464. , 10.1093/comjnl/31.5.457; Fagan, M.E., Design and code inspections to reduce errors in program development (1976) IBM Syst J, 15 (3), pp. 182-211. , 10.1147/sj.153.0182; Fagan, M.E., Advances in software inspections (1986) IEEE Trans Softw Eng, 12 (7), pp. 744-751. , 10.1109/TSE.1986.6312976; Fraenkel, J.R., Wallen, N.E., (2006) How to Design and Evaluate Research in Education, , 6th edn. McGraw-Hill Publishing Company, New York; Fusaro, P., Lanubile, F., Visaggio, G., A replicated experiment to assess requirements inspection techniques (1997) Empir Softw Eng, 2 (1), pp. 39-57. , 10.1023/A:1009742216007; Garousi, V., Applying peer reviews in software engineering education: An experiment and lessons learned (2010) IEEE Trans Educ, 53 (2), pp. 182-193. , 2672770 10.1109/TE.2008.2010994; Hungerford, B.C., Hevner, A.R., Collins, R.W., Reviewing software diagrams: A cognitive study (2004) IEEE Trans Softw Eng, 30 (2), pp. 82-96. , 10.1109/TSE.2004.1265814; Johnson, P.M., Tjahjono, D., Assessing software review meetings: A controlled experimental study using CSRS (1997) Proc.9th Int'l Conf. on Softw. Eng, pp. 118-127; Juristo, N., Vegas, S., Using differences among replications of software engineering experiments to gain knowledge (2009) Proc.3rd Int'l Symp. on Emp. Softw. Eng. and Measurement, pp. 356-366; Kitchenham, B.A., The role of replications in empirical software engineering - A word of warning (2008) Empir Softw Eng, 13 (2), pp. 219-221. , 10.1007/s10664-008-9061-0; Kollanus, S., Experiences from using ICMM in inspection process assessment (2009) Softw Qual J, 17 (2), pp. 177-187. , 10.1007/s11219-008-9067-2; Kollanus, S., ICMM - A maturity model for software inspections (2011) J Softw Maint Evol Res Pract, 23 (5), pp. 327-341. , 10.1002/smr.456; Kollanus, S., Kosnimen, J., Survey of software inspection research (2009) The Open Software Engineering Journal, 3, pp. 15-34; Laitenberger, O., Debaud, J., Perspective-based reading of code documents at Robert Bosch GmbH (1997) Inf Softw Technol, 39 (11), pp. 781-791. , 10.1016/S0950-5849(97)00030-X; Laitenberger, O., Atkinson, C., Schlich, M., El Emam, K., An experimental comparison of reading techniques for defect detection in UML design documents (2000) J Syst Softw, 53 (2), pp. 183-204. , 10.1016/S0164-1212(00)00052-2; Laitenberger, O., Emam, K.E., Harbich, T.G., An internally replicated quasi-experimental comparison of checklist and perspective-based reading of code documents (2001) IEEE Trans Softw Eng, 27 (5), pp. 387-421. , 10.1109/32.922713; Lpw, L., Wong, B., Jeffery, R., An extension of the behavioral theory of group performance in software development technical reviews (2003) Proc.10th Asia-Pacific Softw. Eng. Conf., pp. 520-530; Lung, J., Aranda, J., Easterbrook, S.M., Wilson, G.V., On the difficulty of replicating human subjects studies in software engineering (2008) Proc.30th International Conference on Software Engineering (ICSE), pp. 191-200; Martin, J., Tsai, W., N-fold inspection: A requirements analysis technique (1990) Commun ACM, 33 (2), pp. 223-232. , 10.1145/75577.75587; McCarthy, P., Porter, A., Siy, H., Votta J, L.G., An experiment to assess cost-benefits of inspection meetings and their alternatives: A pilot study (1996) Proc. Metrics, p. 100; McMeekin, D.A., Von Konsky, B.R., Robey, M., Dja, C., The significance of participant experience when evaluating software inspection techniques (2009) Proc. Australian Software Engineering Conference (ASWEC'09), pp. 200-209; Noyes, J.M., Garland, K.J., Computer- vs. Paper-based tasks: Are they equivalent? (2008) Ergonomics, 51 (9), pp. 1352-1375. , 10.1080/00140130802170387; O'Hara, K., Sellen, A., A comparison of reading paper and on-line documents (1997) Proc. SIGCHI Conf. on Human Factors in Computing Systems, pp. 335-342; Olalekan, A.S., Adenike, O.O., Empirical study of factors affecting the effectiveness of software inspection: A preliminary report (2008) Eur J Sci Res, 19 (4), pp. 614-627; Parnas, D.L., Weiss, D., Active design reviews: Principles and practice (1985) Proc.8th Int'l Conf. on Softw. Eng., pp. 132-136; Porter, A., Votta, L., Basili, V.R., Comparing detection methods for software requirements inspections: A replication using professional subjects (1998) Empir Softw Eng, 3 (4), pp. 355-379. , 10.1023/A:1009776104355; Regnell, B., Runeson, P., Thelin, T., Are the perspectives really different? Further experimentation on scenario-based reading of requirements (2000) Empir Softw Eng, 5 (4), pp. 331-356. , 1010.68615 10.1023/A:1009848320066; Robbins, B., Carver, J., Cognitive factors in perspective-based reading (PBR): A protocol analysis study (2009) Proc.3rd International Symposium on Empirical Software Engineering and Metrics, pp. 145-155. , Oct. 15-16; Sandahl, K., Blomkvist, O., Karlsson, J., Krysander, C., Lindvall, M., Ohlsson, N., An extended replication of an experiment for assessing methods for software requirements inspections (1998) Empir Softw Eng, 3 (4), pp. 327-354. , 10.1023/A:1009724120285; Sauer, C., Jeffery, D.R., Land, L., Yetton, P., The effectiveness of software development technical reviews: A behaviorally motivated program of research (2000) IEEE Trans Softw Eng, 26 (1), pp. 1-14. , 10.1109/32.825763; Schneider, G.M., Martin, J., Tsai, W.T., An experimental study of fault detection in user requirements documents (1992) ACM Trans Softw Eng Methodol, 1 (2), pp. 188-204. , 10.1145/128894.128897; Shull, F., Carver, J., Travassos, G., An empirical methodology for introducing software processes (2001) Proc. Joint 8th Eur. Softw. Eng. Conf. and 9th ACM SIGSOFT Foundations of Softw. Eng., pp. 288-296. , Sept. 10-14, 2001; Shull, F., Basili, V., Carver, J., Maldonado, J., Travassos, G., Mendonca, M., Fabbri, S., Replicating software engineering experiments: Addressing the tacit knowledge problem (2002) Proc.1st Int'l Symp. on Emp. Softw. Eng., pp. 7-16. , Oct. 3-4, 2002; Shull, F., Mendonca, M., Basili, V., Carver, J., Maldonado, J., Fabbri, S., Travassos, G., Ferreira, M., Knowledge-sharing issues in experimental software engineering (2004) Empir Softw Eng, 9 (1), pp. 111-137. , 10.1023/B:EMSE.0000013516.80487.33; Shull, F., Carver, J., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empir Softw Eng, 13 (2), pp. 211-218. , 10.1007/s10664-008-9060-1; (2004) Curriculum Guidelines for Undergraduate Degree Programs in Software Engineering, , http://sites.computer.org/ccse/SE2004Volume.pdf, The Joint Task Force on Computing Curricula, IEEE Computer Society, Association for Computing Machinery, Software Engineering Retrieved July 19, 2012; Travassos, G., Shull, F., Fredericks, M., Basili, V., Detecting defects in object oriented designs: Using reading techniques to increase software quality (1999) Proc. OOPSLA '99; Travassos, G., Shull, F., Carver, J., Reading techniques for OO design inspections (1999) Proc. 24th NASA Softw. Eng. Wksp.; Votta, L., Does every inspection need a meeting? (1993) Proc. ACM SIGSOFT Symp. on the Foundations of Softw. Eng, pp. 107-114; Winkler, D., Thurnher, B., Biffl, S., Early software product improvement with sequential inspection sessions: An empirical investigation of inspector capability and learning effects (2007) Proc.33rd EUROMICRO Conference on Software Engineering and Advanced Applications, pp. 245-254; Winkler, D., Biffl, S., Faderl, K., Investigating the temporal behavior of defect detection in software inspection and inspection-based testing (2010) Proc. Product-Focused Software Process Improvement, pp. 17-31; Wong, Y.K., Do developers matter in system review? (2011) Behav Inform Technol, 30 (3), pp. 353-378. , 10.1080/0144929X.2010.492877; Zhang, Z., Basili, V., Shneiderman, B., Perspective-based usability inspection: An empirical validation of efficacy (1999) Empir Softw Eng, 4 (1), pp. 43-70. , 10.1023/A:1009803214692},
  review                  = {{E C11 C2}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893750302&doi=10.1007%2fs10664-012-9221-0&partnerID=40&md5=89e76df39b3e36a0ab19f6513878a9bc},
}

@Article{Ali20141189,
  author                  = {Ali, S. and Yue, T. and Briand, L.C.},
  title                   = {Does aspect-oriented modeling help improve the readability of UML state machines?},
  journal                 = {Software and Systems Modeling},
  year                    = {2014},
  volume                  = {13},
  number                  = {3},
  pages                   = {1189-1221},
  issn                    = {16191366},
  note                    = {cited By 4},
  abbrev_source_title     = {Softw. Syst. Model.},
  abstract                = {Aspect-oriented modeling (AOM) is a relatively recent and very active field of research, whose application has, however, been limited in practice. AOM is assumed to yield several potential benefits such as enhanced modularization, easier evolution, increased reusability, and improved readability of models, as well as reduced modeling effort. However, credible, solid empirical evidence of such benefits is lacking. We evaluate the "readability" of state machines when modeling crosscutting behavior using AOM and more specifically AspectSM, a recently published UML profile. This profile extends the UML state machine notation with mechanisms to define aspects using state machines. Readability is indirectly measured through defect identification and fixing rates in state machines, and the scores obtained when answering a comprehension questionnaire about the system behavior. With AspectSM, crosscutting behavior is modeled using so-called "aspect state machines". Their readability is compared with that of system state machines directly modeling crosscutting and standard behavior together. An initial controlled experiment and a much larger replication were conducted with trained graduate students, in two different institutions and countries, to achieve the above objective. We use two baselines of comparisons-standard UML state machines without hierarchical features (flat state machines) and standard state machines with hierarchical/concurrent features (hierarchical state machines). The results showed that defect identification and fixing rates are significantly better with AspectSM than with both flat and hierarchical state machines. However, in terms of comprehension scores and inspection effort, no significant difference was observed between any of the approaches. Results of the experiments suggest that one should use, when possible, aspect state machines along with hierarchical and/or concurrent features of UML state machines to model crosscutting behaviors. © 2012 Springer-Verlag Berlin Heidelberg.},
  affiliation             = {Certus Software VandV Center, Simula Research Laboratory, P.O. Box 134, 1325 Lysaker, Norway; SnT Centre, University of Luxembourg, Luxembourg, Luxembourg},
  author_keywords         = {Aspect-oriented modeling; Comprehension; Controlled experiment; Defect identification and fixing; UML state machines},
  correspondence_address1 = {Ali, S.; Certus Software VandV Center, Simula Research Laboratory, P.O. Box 134, 1325 Lysaker, Norway; email: shaukat@simula.no},
  document_type           = {Article},
  doi                     = {10.1007/s10270-012-0293-5},
  keywords                = {Defects; Modular construction; Reusability; Students, Aspect oriented modeling; Comprehension; Controlled experiment; Defect identification; UML state machine, Experiments},
  language                = {English},
  publisher               = {Springer Verlag},
  references              = {Ali, M.S., Babar, M.A., Chen, L., Stol, K.-J., A systematic review of comparative evidence of aspect-oriented programming (2010) Inf. Softw. Technol., 52, pp. 871-887; Chitchyan, R., Rashid, A., Sawyer, P., Bakker, J., Alarcon, M.P., Garcia, A., Tekinerdogan, B., Jackson, A., (2005) Survey of Aspect-Oriented Analysis and Design. Aspect-Oriented Software Engineering Special Interest Group, , Lancaster University, AOSD-Europe-ULANC-9; Filman, R.E., Elrad, T., Clarke, S., Aksit, M., (2004) Aspect-Oriented Software Development, , Reading, MA: Addison-Wesley Professional; Yedduladoddi, R., (2009) Aspect Oriented Software Development: An Approach to Composing UML Design Models, , Saarbrücken: VDM Verlag Dr, Müller; (2006) IEEE Std 982, pp. 1-34. , IEEE Standard Dictionary of Measures of the Software Aspects of Dependability. 1-2005 (Revision of IEEE Std 982. 1-1988); Standard for Software Quality Characteristics, International Organization for Standardization, ISO-9126-32003Software Assurance Standard, NASA Technical Standard, NASA-STD-8739. 82005Binder, R.V., (1999) Testing Object-Oriented Systems: Models, Patterns, and Tools., , Reading, MA: Addison-Wesley Longman Publishing Co., Inc; Drusinsky, D., (2006) Modeling and Verification using UML Statecharts: A Working Guide to Reactive System Design, Runtime Monitoring and Execution-based Model Checking, , 1st edn. Newnes; Ali, S., Briand, L.C., Hemmati, H., Modeling robustness behavior using aspect-oriented modeling to support robustness testing of industrial systems (2011) Syst. Softw. Model. (SOSYM) J., , (Accepted for publication); Gomaa, H., (2000) Designing Concurrent, Distributed, and Real-Time Applications with UML, , Reading, MA: Addison-Wesley Professional; Weigert, T., Reed, R., Specifying Telecommunications Systems with UML (2003) In: UML for real: Design of embedded real-time systems, pp. 301-322. , Kluwer Academic Publishers, Dordrecht; (2012), http://www.smartstatestudio.com/, SmartState. Available. Accessed AprilUtting, M., Legeard, B., (2007) Practical Model-Based Testing: A Tools Approach, , London: Morgan-Kaufmann; Cavarra, R., Crichton, C., Davies, J., Hartman, A., Mounier, L., (2002) Using UML for Automatic Test Generation Presented at the International Symposium on Software Testing and Analysis (ISSTA '02); Pender, T., (2003) UML Bible, , Hoboken: Wiley; Whittle, J., Moreira, A., Araú, J., Jayaraman, P., Elkhodary, A., Rabbi, R., An Expressive Aspect Composition Language for UML State Diagrams (2007) Model Driven Engineering Languages and Systems, , In: Engels, G., Opdyke, B., Schmidt, D. C., Weil, F. (eds.); Tessier, F., Badri, L., Badri, M., (2004) Towards a Formal Detection of Semantic Conflicts Between Aspects: A Model-Based Approach, , Presented at the 5th Aspect-Oriented Modeling Workshop In Conjunction with UML 2004; (2012), http://www-01.ibm.com/software/awdtools/library/standards/ocl-download.html, Ibm, OCL Parser. Available. Accessed AprilChiorean, D., Bortes, M., Corutiu, D., Botiza, C., Câu, A., (2012), http://lci.cs.ubbcluj.ro/ocle/, OCLE (V2. 0 ed.). Available. Accessed AprilEgea, M., (2012) EyeOCL Software, , http://maude.sip.ucm.es/eos/, Available. Accessed April; Zhang, G., (2006) Towards Aspect-Oriented State Machines, , Presented at the 2nd Asian Workshop on Aspect-Oriented Software Development (AOASIA'06), Tokyo; Zhang, G., Hö, M., (2009) HiLA: High-Level Aspects for UML-State Machines, Presented at the Proceedings of the 14th Workshop on Aspect-Oriented Modeling (AOM@MoDELS'09); Zhang, G., Hö, M.M., Knapp, A., Enhancing UML State Machines with Aspects (2007) In: Proceedings of the 10th International Conference on Model Driven Engineering Languages and Systems (MoDELS); Xu, D., Xu, W., Nygard, K., (2005) A State-Based Approach to Testing Aspect-Oriented Programs, , Presented at the 17th International Conference on Software Engineering and Knowledge Engineering, Taiwan; Laddad, R., (2003) AspectJ in Action: Practical Aspect-Oriented Programming, , Greenwich: Manning Publications; Wohlin, C., Runeson, P., Höst, M., (1999) Experimentation in Software Engineering: An Introduction, , Berlin: Springer; (2012), http://www.jmp.com/, JMP. Available. Accessed AprilShull, F., Singer, J., Sjø, D.I.K., (2008) Guide to Advanced Empirical Software Engineering, , Springer, Berlin; Sheskin, D.J., (2007) Handbook of Parametric and Nonparametric Statistical Procedures, , London: Chapman and Hall/CRC; (2012), http://www.fon.hum.uva.nl/Service/Statistics/McNemars_test.html, McNemar's Test. Available. Accessed AprilThomas, L., Retrospective power analysis (1997) Conserv. Biol., 11, pp. 276-280; Dybå, T., Kampenes, V.B., Hannay, J.E., Sjøberg, D.I.K., Systematic review: A systematic review of effect size in software engineering experiments (2007) Inf. Softw. Technol., 49, pp. 1073-1086; Höst, M., Regnell, B., Wohlin, C., Using students as subjects-A comparative study of students and professionals in lead-time impact assessment (2000) Empir. Softw. Eng., 5, pp. 201-214; Arisholm, E., Sjoberg, D.I.K., Evaluating the effect of a delegated versus centralized control style on the maintainability of object-oriented software (2004) IEEE Trans. Softw. Eng., 30, pp. 521-534; Holt, R.W., Boehm-Davis, D.A., Shultz, A.C., Mental representations of programs for student and professional programmers (1987) Empirical Studies of Programmers: Second Workshop, pp. 33-46. , M. O. Gary, S. Sylvia, and S. Elliot (Eds.), Norwood: Ablex Publishing Corp; Durr, P., Bergmans, L., Aksit, M., (2008) A Controlled Experiment for the Assessment of Aspects-Tracing in an Industrial Context, , University of Twente, CTIT, Enschede; Hanenberg, S., Kleinschmager, S., Josupeit-Walter, M., (2009) Does Aspect-Oriented Programming Increase the Development Speed for Crosscutting Code? An Empirical Study, , Presented at the 2009 3rd International Symposium on Empirical Software Engineering and Measurement; Walker, R.J., Baniassad, E.L.A., Murphy, G.C., (1999) An Initial Assessment of Aspect-Oriented Programming, , Presented at the 21st international Conference on Software Engineering. Los Angeles, California; Bartsch, M., Harrison, R., An exploratory study of the effect of aspect-oriented programming on maintainability (2008) Softw. Qual. Control, 16, pp. 23-44; Ferrari, F., Burrows, R., Lemos, V., Garcia, A., Figueiredo, E., Cacho, N., Lopes, F., Maldonado, J., (2010) An exploratory study of fault-proneness in evolving aspect-oriented programs, presented at the proceedings of the 32nd ACM/IEEE international conference on software engineering?, 1. , Cape Town; Farias, K., Garcia, A., Whittle, J., Assessing the impact of aspects on model composition effort, , presented at the proceedings of the 9th international conference on aspect-oriented software development, Rennes and Saint-Malo; Carton, A., Driver, C., Jackson, A., Clarke, S., Model-Driven Theme/UML (2009) Transactions on Aspect-Oriented Software Development VI, pp. 238-266. , K. Shmuel, O. Harold, F. Robert, J. Jean-Marc, and Z. Quel (Eds.), Berlin: Springer; Hovsepyan, A., Scandariato, R., Baelen, S.V., Berbers, Y., Joosen, W., From aspect-oriented models to aspect-oriented code?: The maintenance perspective, , presented at the proceedings of the 9th international conference on aspect-oriented software development, Rennes and Saint-Malo; Mouchawrab, S., Briand, L.C., Labiche, Y., Penta, M.D., Assessing, comparing, and combining state machine-based testing and structural testing: a series of experiments (2011) IEEE Trans. Softw. Eng., 37, pp. 161-187; Briand, L.C., Penta, M.D., Labiche, Y., Assessing and improving state-based class testing: a series of experiments (2004) IEEE Trans. Softw. Eng., 30, pp. 770-793; Zimmerman, M.K., Lundqvist, K., Leveson, N., (2002) Investigating the readability of state-based formal requirements specification languages, , presented at the proceedings of the 24th international conference on software engineering. Orlando, Florida; (2012), http://www.ibm.com/developerworks/rational/products/rsa/, IBM Rational Software Architect (RSA). Available. Accessed April},
  review                  = {{E C2 C10}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903463377&doi=10.1007%2fs10270-012-0293-5&partnerID=40&md5=449cb1fad7173d608bec64549226c0c6},
}

@Article{Apa2014378,
  author                  = {Apa, C. and Dieste, O. and Espinosa G., E.G. and Fonseca C., E.R.},
  title                   = {Effectiveness for detecting faults within and outside the scope of testing techniques: An independent replication},
  journal                 = {Empirical Software Engineering},
  year                    = {2014},
  volume                  = {19},
  number                  = {2},
  pages                   = {378-417},
  issn                    = {13823256},
  note                    = {cited By 0},
  abbrev_source_title     = {Empir Software Eng},
  abstract                = {The verification and validation activity plays a fundamental role in improving software quality. Determining which the most effective techniques for carrying out this activity are has been an aspiration of experimental software engineering researchers for years. This paper reports a controlled experiment evaluating the effectiveness of two unit testing techniques (the functional testing technique known as equivalence partitioning (EP) and the control-flow structural testing technique known as branch testing (BT)). This experiment is a literal replication of Juristo et al. (2013). Both experiments serve the purpose of determining whether the effectiveness of BT and EP varies depending on whether or not the faults are visible for the technique (InScope or OutScope, respectively). We have used the materials, design and procedures of the original experiment, but in order to adapt the experiment to the context we have: (1) reduced the number of studied techniques from 3 to 2; (2) assigned subjects to experimental groups by means of stratified randomization to balance the influence of programming experience; (3) localized the experimental materials and (4) adapted the training duration. We ran the replication at the Escuela Politécnica del Ejército Sede Latacunga (ESPEL) as part of a software verification & validation course. The experimental subjects were 23 master's degree students. EP is more effective than BT at detecting InScope faults. The session/program and group variables are found to have significant effects. BT is more effective than EP at detecting OutScope faults. The session/program and group variables have no effect in this case. The results of the replication and the original experiment are similar with respect to testing techniques. There are some inconsistencies with respect to the group factor. They can be explained by small sample effects. The results for the session/program factor are inconsistent for InScope faults. We believe that these differences are due to a combination of the fatigue effect and a technique x program interaction. Although we were able to reproduce the main effects, the changes to the design of the original experiment make it impossible to identify the causes of the discrepancies for sure. We believe that further replications closely resembling the original experiment should be conducted to improve our understanding of the phenomena under study. © 2013 Springer Science+Business Media New York.},
  affiliation             = {Universidad de la República Julio Herrera y Reissig, 565 Montevideo, Uruguay; Universidad Politécnica de Madrid Boadilla Del Monte, 28660 Madrid, Spain; Escuela Politécnica Del Ejército Sede Latacunga, Latacunga, Ecuador; Escuela Politécnica Del Ejército, Sangolquí, Ecuador},
  author_keywords         = {Experiment; Replication; Reporting guidelines; Unit testing},
  coden                   = {ESENF},
  correspondence_address1 = {Fonseca C., E.R.; Escuela Politécnica Del Ejército, Sangolquí, Ecuador; email: erfonseca@espe.edu.ec},
  document_type           = {Article},
  doi                     = {10.1007/s10664-013-9267-7},
  keywords                = {Computer software selection and evaluation; Design of experiments; Software testing; Testing; Verification, Experimental materials; Experimental software engineering; Experimental subjects; Programming experience; Replication; Reporting guidelines; Software verification; Unit testing, Experiments},
  language                = {English},
  publisher               = {Kluwer Academic Publishers},
  references              = {Basili, V.R., Software modeling and measurement: The goal/question/metric paradigm (1992) Tech. Rep. UMIACS TR-92-96, Departament of Computer Science, , University of Maryland, College Park Basili VR (1992) Software modeling and measurement: the goal/question/metric paradigm. Tech. Rep. UMIACS TR-92-96, Departament of Computer Science, University of Maryland, College Park; Basili, V.R., Selby, R.W., Comparing the effectiveness of software testing strategies (1985) Tech. Rep. TR-1501, Departament of Computer Science, , University of Maryland, College Park Basili VR, Selby RW (1985) Comparing the effectiveness of software testing strategies. Tech. Rep. TR-1501, Departament of Computer Science, University of Maryland, College Park; Basili, V.R., Selby, R.W., Comparing the effectiveness of software testing strategies (1987) IEEE Trans Softw Eng, 13, pp. 78-96. , 10.1109/TSE.1987.232881; Brown, B.W., The crossover experiment for clinical trials (1980) Biometrics, 36, pp. 69-70. , 10.2307/2530496 0426.62076; Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) Proceedings of the 1st International Workshop on Replication in Empirical Software Engineering Research (RESER), , Cape Town, South Africa, 4 May 2010 Carver JC (2010) Towards reporting guidelines for experimental replications: a proposal. In: Proceedings of the 1st international workshop on Replication in Empirical Software Engineering Research (RESER). Cape Town, South Africa, 4 May 2010; Gómez, O., (2012) Tipología de Replicaciones Para la Síntesis de Experimentos en Ingeniería Del Software, , PhD thesis, Universidad Politécnica de Madrid Gómez O (2012) Tipología de Replicaciones para la Síntesis de Experimentos en Ingeniería del Software. PhD thesis, Universidad Politécnica de Madrid; Gómez O, J., Replications types in experimental disciplines (2010) Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, 3, pp. 1-10. , Bolzano-Bozen, Italy Gómez O, Juristo N, Vegas S (2010) Replications types in experimental disciplines. In: Proceedings of the 2010 ACM-IEEE international symposium on empirical software engineering and measurement, no. 3. Bolzano-Bozen, Italy, pp 1-10; Graham, J.W., Schafer, J.L., On the performance of multiple imputation for multivariate data with small sample size (1999) Statistical Strategies for Small Sample Research, pp. 1-29. , Hoyle RH (ed) Sage Publications Graham JW, Schafer JL (1999) On the performance of multiple imputation for multivariate data with small sample size. In: Hoyle RH (ed) Statistical strategies for small sample research. Sage Publications, pp 1-29; Juristo, N., Vegas, S., Functional testing, structural testing and code reading: What fault do they each detect (2003) Empirical Methods and Studies in Software Engineering Experiences from ESERNET, 2785 (12), pp. 208-232. , Juristo N, Vegas S (2003) Functional testing, structural testing and code reading: what fault do they each detect? In: Empirical Methods and Studies in Software Engineering Experiences from ESERNET, vol 2785(12), pp 208-232; Juristo, N., Vegas, S., Apa, C., (2013) Effectiveness for Detecting Faults Within and Outside the Scope of Testing Techniques: A Controlled Experiment, , http://www.grise.upm.es/reports.php, Accessed 15 May 2013 Juristo N, Vegas S, Apa C (2013) Effectiveness for detecting faults within and outside the scope of testing techniques: a controlled experiment. Available at http://www.grise.upm.es/reports.php. Accessed 15 May 2013; Kamsties, E., Lott, C., An empirical evaluation of three defect-detection techniques (1995) Fifth European Software Engineering Conference (ESEC '95), 989, pp. 362-383. , Lecture Notes in Computer Science Kamsties E, Lott C (1995) An empirical evaluation of three defect-detection techniques. In: Fifth European Software Engineering Conference (ESEC '95). Lecture Notes in Computer Science, vol 989, pp 362-383; Kernan, W.N., Viscoli, C.M., Makuch, R.W., Brass, L.M., Horwitz, R.I., Stratified randomization for clinical trials (1999) J Clin Epidemiol, 52 (1), pp. 19-26. , 10.1016/S0895-4356(98)00138-3; Kitchenham, B., Fry, J., Linkman, S., The case against cross-over designs in software engineering (2003) Eleventh Annual International Workshop on Software Technology and Engineering Practice, pp. 65-67. , Kitchenham B, Fry J, Linkman S (2003) The case against cross-over designs in software engineering. In: Eleventh annual international workshop on software technology and engineering practice, pp 65-67; Meyers, L.S., Gamst, G., Guarino, A.J., (2006) Applied Multivariate Reseach: Design and Interpretation, , Sage Publication Meyers LS, Gamst G, Guarino AJ (2006) Applied multivariate reseach: design and interpretation. Sage Publication; Myers, G.J., A controlled experiment in program testing and code walkthroughs/ inspections (1978) Communications of the ACM, 21, pp. 760-768. , Myers GJ (1978) A controlled experiment in program testing and code walkthroughs/inspections. In: Communications of the ACM, vol 21, pp 760-768; Richy F, E., From sample size to effect-size: Small study effect investigation (ssei) (2004) The Internet Journal of Epidemiology, 1. , Richy F, Ethgen O, Bruyère O, Deceulaer F, Reginster J (2004) From sample size to effect-size: Small study effect investigation (ssei). In: The Internet Journal of Epidemiology, vol 1; Roper, M., Wood, M., Miller, J., An empirical evaluation of defect detection techniques (1997) Inform Softw Technol, 39 (11), pp. 763-775. , 10.1016/S0950-5849(97)00028-1; Senn, S., (2002) Cross-over Trials in Clinical Research, , 2nd edn. Wiley Senn S (2002) Cross-over trials in clinical research, 2nd edn. Wiley; Sjøberg, D.I., Han Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanovic, A., Liborg, N.-K., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE Trans Softw Eng, 31, pp. 733-753. , 10.1109/TSE.2005.97; Wood, M., Roper, M., Brooks, A., Miller, J., Comparing and combining software defect detection techniques: A replicated empirical study (1997) Proceedings of the 6th European Software Engineering Conference Held Jointly with the 5th ACM SIGSOFT International Symposium on Foundations of Software Engineering, pp. 262-277. , Zurich, Switzerland Wood M, Roper M, Brooks A, Miller J (1997) Comparing and combining software defect detection techniques: a replicated empirical study. In: Proceedings of the 6th European software engineering conference held jointly with the 5th ACM SIGSOFT international symposium on foundations of software engineering. Zurich, Switzerland, pp 262-277},
  review                  = {{E C5 C11}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896399014&doi=10.1007%2fs10664-013-9267-7&partnerID=40&md5=db96ea1baa1223e52bf0f00594f53088},
}

@Article{Aranda2016427,
  author              = {Aranda, A.M. and Dieste, O. and Juristo, N.},
  title               = {Effect of Domain Knowledge on Elicitation Effectiveness: An Internally Replicated Controlled Experiment},
  journal             = {IEEE Transactions on Software Engineering},
  year                = {2016},
  volume              = {42},
  number              = {5},
  pages               = {427-451},
  issn                = {00985589},
  note                = {cited By 1},
  abbrev_source_title = {IEEE Trans Software Eng},
  abstract            = {Context. Requirements elicitation is a highly communicative activity in which human interactions play a critical role. A number of analyst characteristics or skills may influence elicitation process effectiveness. Aim. Study the influence of analyst problem domain knowledge on elicitation effectiveness. Method. We executed a controlled experiment with post-graduate students. The experimental task was to elicit requirements using open interview and consolidate the elicited information immediately afterwards. We used four different problem domains about which students had different levels of knowledge. Two tasks were used in the experiment, whereas the other two were used in an internal replication of the experiment; that is, we repeated the experiment with the same subjects but with different domains. Results. Analyst problem domain knowledge has a small but statistically significant effect on the effectiveness of the requirements elicitation activity. The interviewee has a big positive and significant influence, as does general training in requirements activities and interview experience. Conclusion. During early contacts with the customer, a key factor is the interviewee; however, training in tasks related to requirements elicitation and knowledge of the problem domain helps requirements analysts to be more effective. © 2015 IEEE.},
  affiliation         = {Escuela Técnica Superior de Ingenieros Informáticos, Universidad Politécnica de Madrid, Campus de Montegancedo, Boadilla del Monte, Spain},
  art_number          = {7307191},
  author_keywords     = {Controlled experiment; domain knowledge; internal replication; requirements elicitation},
  coden               = {IESED},
  document_type       = {Article},
  doi                 = {10.1109/TSE.2015.2494588},
  keywords            = {Requirements engineering; Students, Controlled experiment; Domain knowledge; Graduate students; Human interactions; internal replication; Process effectiveness; Requirements analyst; Requirements elicitation, Knowledge management},
  language            = {English},
  publisher           = {Institute of Electrical and Electronics Engineers Inc.},
  references          = {Sommerville, I., (2009) Requirements Engineering: A Good Practice Guide, , New Delhi, India: Wiley; Aurum, A., Wohlin, C., (2006) Engineering and Managing Software Requirements, , New York, NY, USA: Springer; Anwar, F., Razali, R., Ahmad, K., Achieving effective communication during requirements elicitation - A conceptual framework (2011) Proc. 2nd Int. Conf. Softw. Eng. Comput. Syst., pp. 600-610; Niknafs, A., Berry, D.M., The impact of domain knowledge on the effectiveness of requirements idea generation during requirements elicitation (2012) Proc. IEEE 20th Int. Requirements Eng. Conf., pp. 181-190; Hadar, I., Soffer, P., Kenzi, K., The role of domain knowledge in requirements elicitation via interviews: An exploratory study (2014) Requirements Eng., 19, pp. 143-159; Zowghi, D., Coulin, C., Requirements elicitation: A survey of techniques, approaches, and tools (2005) Engineering and Managing Software Requirements, pp. 19-46. , A. Aurum and C. Wohlin, Eds. Berlin, Heidelberg: Springer; Kristensson, P., Gustafsson, A., Archer, T., Harnessing the creative potential among users∗ (2004) J. Prod. Innovation Manage., 21, pp. 4-14; Marakas, G.M., Elam, J.J., Semantic structuring in analyst and representation of facts in requirements analysis (1998) Inf. Syst. Res., 9, pp. 37-63; Agarwal, R., Tanniru, M.R., Knowledge acquisition using structured interviewing: An empirical investigation (1990) J. Manage. Inf. Syst., 7, pp. 123-141; Carrizo, D., Dieste, O., Juristo, N., Systematizing requirements elicitation technique selection (2014) Inf. Softw. Technol., 56, pp. 644-669. , Jun; Albayrak, E.A., Carver, J., Investigation of individual factors impacting the effectiveness of requirements inspections: A replicated experiment (2014) Empirical Softw. Eng., 19, pp. 241-266. , Feb. 01; Pitts, M.G., Browne, G.J., Stopping behavior of systems analysts during information requirements elicitation (2004) J. Manage. Inf. Syst., 21, pp. 203-226; Loucopoulos, P., Karakostas, V., (1995) Systems Requirements Engineering, , London, U.K.: McGraw-Hill; Christel, M.G., Kang, K.C., (1992) Issues in Requirements Elicitation, , Http://www.Sei.Cmu.edu/publications/documents/92.reports/92.Tr.012.Html, [Online]. CMU/SEI-92-TR-012; Young, R.R., Recommended requirements gathering practices (2002) Crosstalk, 15, pp. 9-12. , Apr; Niknafs, A., Berry, D.M., An industrial case study of the impact of domain ignorance on the effectiveness of requirements idea generation during requirements elicitation (2013) Proc. 21st IEEE Int. Requirements Eng. Conf., pp. 279-283; Dieste, O., Juristo, N., Systematic review and aggregation of empirical studies on elicitation techniques (2011) IEEE Trans. Softw. Eng., 37 (2), pp. 283-304. , Mar./Apr; Vitharana, P., Jain, H., Zahedi, F.M., A knowledge based component/service repository to enhance analysts' domain knowledge for requirements analysis (2012) Inf. Manage., 49 (1), pp. 24-35; McAllister, C.A., (2006) Requirements Determination of Information Systems: User and Developer Perceptions of Factors Contributing to Misunderstandings, , Ann Arbor, MI, USA: ProQuest; Niknafs, A., (2014) The Impact of Domain Knowledge on the Effectiveness of Requirements Engineering Activities, , Ph.D. dissertation, Univ. Waterloo, Waterloo, ON, Canada; Browne, G.J., Rogich, M.B., An empirical investigation of user requirements elicitation: Comparing the effectiveness of prompting techniques (2001) J. Manage. Inf. Syst., 17, pp. 223-249; Choi, B.C., Pak, A.W., A catalog of biases in questionnaires (2005) Prev. Chronic Dis., 2, p. A13. , Jan; Aranda, A., Dieste, O., Juristo, N., Evidence of the presence of bias in subjective metrics: Analysis within a family of experiments (2014) Proc. 18th Int. Conf. Eval. Assessment Softw. Eng., pp. 24-27. , London, U.K; Jedlitschka, A., Ciolkowski, M., Pfahl, D., (2008) Reporting Experiments in Software Engineering, pp. 201-228. , in F. Shull, J. Singer and D. K. Sjøberg, Eds. Springer London; Burton, A.M., Shadbolt, N.R., Rugg, G., Hedgecock, A.P., Knowledge elicitation techniques in classification domains (1988) Proc. 8th Eur. Conf. AI, pp. 85-90; Yadav, S.B., Bravoco, R.R., Chatfield, A.T., Rajkumar, T.M., Comparison of analysis techniques for information requirements determination (1988) Commun. ACM, 31, pp. 1090-1097; Davis, A., (1993) Software Requirements: Objects, Functions and States, , Englewood Cliffs, NJ, USA: Prentice-Hall; Falkenberg, E.D., Hesse, W., Lindgreen, P., Nilsson, B.E., Oei, J.L.H., Rolland, C., Stamper, R.K., Voss, K., FRISCO: A framework of information system concepts (1996) The IFIP WG 8.1 Task Group FRISCO; Gunter, C.A., Gunter, E.L., Jackson, M., Zave, P., A reference model for requirements and specifications (2000) IEEE Softw., 17 (3), pp. 37-43. , May/June; Juristo, N., Moreno, A.M., (2001) Basics of Software Engineering Experimentation, , Norwell, MA, USA: Kluwer; Sjoberg, D.I.K., Anda, B., Arisholm, E., Dyba, T., Jorgensen, M., Karahasanovic, A., Koren, E.F., Vokac, M., Conducting realistic experiments in software engineering (2002) Proc. Int. Symp. Empirical Softw. Eng., pp. 17-26; Runeson, P., Using students as experiment subjects-an analysis on graduate and freshmen student data (2003) Proc. 7th Int. Conf. Empirical Assessment Softw. Eng., pp. 95-102; Höst, M., Regnell, B., Wohlin, C., Using students as subjects-A comparative study of students and professionals in lead-time impact assessment (2000) Empirical Softw. Eng., 5, pp. 201-214. , Nov. 01; Exadaktylos, F., Espín, A.M., Brañas-Garza, P., Experimental subjects are not different (2013) Sci. Rep., 3. , Feb. 14; Bausell, R.B., Li, Y.F., (2002) Power Analysis for Experimental Research: A Practical Guide for the Biological, Medical and Social Sciences, , Cambridge, U.K.: Cambridge Univ. Press; Cook, T.D., Campbell, D.T., (1979) Quasi-Experimentation: Design & Analysis Issues for Field Settings, , Skokie, IL, USA: Rand McNally; Kuehl, R.O., (2000) Design of Experiments: Statistical Principles of Research Design and Analysis, , Belmont, CA, USA: Duxbury/Thomson Learning; Brown, B.W.J., The crossover experiment for clinical trials (1980) Biometrics, 36, pp. 69-79; Senn, S., (2002) Cross-Over Trials in Clinical Research, , New York, NY, USA: Wiley; Meyers, L.S., Gamst, G., Guarino, A.J., (2012) Applied Multivariate Research: Design and Interpretation, , Newbury Park, CA, USA: SAGE; Gupta, S.K., Intention-to-treat concept: A review (2011) Perspect. Clin. Res., 2, pp. 109-112. , Jul; Cohen, J., (1988) Statistical Power Analysis for the Behavioral Sciences, , Hillsdale, NJ, USA: Lawrence Erlbaum Assoc; Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) Proc. 1st Int. Workshop Replication Empirical Softw. Eng. Res. SIGSOFT Softw. Eng. Notes, , May; Lewis-Beck, M., Bryman, A.E., Liao, T.F., (2003) The SAGE Encyclopedia of Social Science Research Methods, , Newbury Park, CA, USA: SAGE; Schoenfeld, A.H., Herrmann, D.J., Problem perception and knowledge structure in expert and novice mathematical problem solvers (1982) J. Experimental Psychol.: Learning, Memory, Cognition, 5, pp. 484-494; Mehrotra, G., (2011) Role of Domain Ignorance in Software Development, , M.S. thesis, Univ. Waterloo, Waterloo, ON, Canada; Friedman, D., Sunder, S., (1994) Experimental Methods: A Primer for Economists, , Cambridge, U.K.: Cambridge Univ. Press; Ericsson, K.A., Prietula, M.J., Cokely, E.T., The making of an expert (2007) Harv. Bus. Rev., 85, p. 114; Pacheco, C., Garcia, I., A systematic literature review of stakeholder identification methods in requirements elicitation (2012) J. Syst. Softw., 85, pp. 2171-2181. , Sep; Razali, R., Anwar, F., Selecting the right stakeholders for requirements elicitation: A systematic approach (2011) J. Theoretical Appl. Inf. Technol., 33, pp. 250-257; Montori, V.M., Guyatt, G.H., Intention-to-treat principle (2001) Can. Med. Assoc. J., 165, pp. 1339-1341. , Nov. 13; Jørgensen, M., Faugli, B., Gruschke, T., Characteristics of software engineers with optimistic predictions (2007) J. Syst. Softw., 80, pp. 1472-1482. , Sep; Hoyle, R.H., Preface (1999) Statistical Strategies for Small Sample Research, pp. v-vii. , R. H. Hoyle, Ed. Newbury Park, CA, USA: Sage; Richy, F., Ethgen, O., Bruyere, O., Deceulaer, F., Reginster, J., From sample size to effect-size: Small study effect investigation (SSEi) (2004) Internet J. Epidemiol., 1. , http://ispub.com/IJE/1/2/10397; Graham, J.W., Schafer, J.L., On the performance of multiple imputation for multivariate data with small sample size (1999) Statistical Strategies for Small Sample Research, pp. v-29. , R. H. Hoyle, Ed. Newbury Park, CA, USA: Sage; Hedges, L.V., Olkin, I., (1985) Statistical Methods for Meta-Analysis, , New York, NY, USA: Academic},
  review              = {{E C2}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84973581113&doi=10.1109%2fTSE.2015.2494588&partnerID=40&md5=d3b3446e54eaaf235c63af3fdae098e1},
}

@Article{Arar2016106,
  author                  = {Arar, Ö.F. and Ayan, K.},
  title                   = {Deriving thresholds of software metrics to predict faults on open source software: Replicated case studies},
  journal                 = {Expert Systems with Applications},
  year                    = {2016},
  volume                  = {61},
  pages                   = {106-121},
  issn                    = {09574174},
  note                    = {cited By 1},
  abbrev_source_title     = {Expert Sys Appl},
  abstract                = {Object-oriented metrics aim to exhibit the quality of source code and give insight to it quantitatively. Each metric assesses the code from a different aspect. There is a relationship between the quality level and the risk level of source code. The objective of this paper is to empirically examine whether or not there are effective threshold values for source code metrics. It is targeted to derive generalized thresholds that can be used in different software systems. The relationship between metric thresholds and fault-proneness was investigated empirically in this study by using ten open-source software systems. Three types of fault-proneness were defined for the software modules: non-fault-prone, more-than-one-fault-prone, and more-than-three-fault-prone. Two independent case studies were carried out to derive two different threshold values. A single set was created by merging ten datasets and was used as training data by the model. The learner model was created using logistic regression and the Bender method. Results revealed that some metrics have threshold effects. Seven metrics gave satisfactory results in the first case study. In the second case study, eleven metrics gave satisfactory results. This study makes contributions primarily for use by software developers and testers. Software developers can see classes or modules that require revising; this, consequently, contributes to an increment in quality for these modules and a decrement in their risk level. Testers can identify modules that need more testing effort and can prioritize modules according to their risk levels. © 2016 Elsevier Ltd. All rights reserved.},
  affiliation             = {TUBITAK BILGEM, Information Technologies Institute, Kocaeli, Turkey; Department of Computer Engineering, Faculty of Computer and Information Science, Sakarya University, Sakarya, Turkey},
  author_keywords         = {Bender method; Logistic regression; Machine learning; Software fault prediction; Software quality metrics; Threshold},
  coden                   = {ESAPE},
  correspondence_address1 = {Arar, Ö.F.; Information Technologies Institude of TUBITAK, BILGEM GebzeTurkey; email: omer.arar@tubitak.gov.tr},
  document_type           = {Article},
  doi                     = {10.1016/j.eswa.2016.05.018},
  keywords                = {Artificial intelligence; Codes (symbols); Computer programming languages; Computer software; Computer software selection and evaluation; Learning systems; Object oriented programming; Open systems; Regression analysis; Software engineering, Bender methods; Logistic regressions; Software fault prediction; Software quality metrics; Threshold, Open source software},
  language                = {English},
  publisher               = {Elsevier Ltd},
  references              = {Alves, T.L., Ypma, C., Visser, J., Deriving metric thresholds from benchmark data (2010) 2010 IEEE International Conference on Software Maintenance, pp. 1-10. , IEEE; Arar, Ö.F., Ayan, K., Software defect prediction using cost-sensitive neural network (2015) Applied Soft Computing, 33, pp. 263-277; Ayan, K., Kiliç, U., Artificial bee colony algorithm solution for optimal reactive power flow (2012) Applied Soft Computing, 12 (5), pp. 1477-1482; Ayan, K., Kiliç, U., Barakli, B., Chaotic artificial bee colony algorithm based solution of security and transient stability constrained optimal power flow (2015) International Journal of Electrical Power & Energy Systems, 64, pp. 136-147; Bansiya, J., Davis, C.G., A hierarchical model for object-oriented design quality assessment (2002) IEEE Transactions on Software Engineering, 28 (1), pp. 4-17; Basili, V.R., Briand, L.C., Melo, W.L., A validation of object-oriented design metrics as quality indicators (1996) IEEE Transactions on Software Engineering, 22 (10), pp. 751-761; Baxter, G., Frean, M., Noble, J., Rickerby, M., Smith, H., Understanding the shape of Java software (2006) ACM SIGPLAN Notices, 41, pp. 397-412; Bender, R., Quantitative risk assessment in epidemiological studies investigating threshold effects (1999) Biometrical Journal, 41 (3), pp. 305-319; Briand, L.C., Melo, W.L., Wust, J., Assessing the applicability of fault-proneness models across object-oriented software projects (2002) IEEE Transactions on Software Engineering, 28 (7), pp. 706-720; Bruin, J., Introduction to SAS, , http://www.ats.ucla.edu/stat/sas/notes2/, UCLA: Statistical Consulting Group. Retrieved November 24, 2007, from 2006; Canfora, G., De Lucia, A., Di Penta, M., Oliveto, R., Panichella, A., Panichella, S., Multi-objective cross-project defect prediction (2013) 2013 IEEE Sixth International Conference on Software Testing, Verification and Validation, pp. 252-261. , IEEE; Carver, J., Towards reporting guidelines for experimental replications: A proposal (2010) Proceedings of the 1st International Workshop on Replication in Empirical Software Engineering Research, pp. 2-5; Catal, C., Alan, O., Balkan, K., Class noise detection based on software metrics and ROC curves (2011) Information Sciences, 181 (21), pp. 4867-4877; Catal, C., Diri, B., A systematic review of software fault prediction studies (2009) Expert Systems with Applications, 36 (4), pp. 7346-7354; Catal, C., Diri, B., Investigating the effect of dataset size, metrics sets, and feature selection techniques on software fault prediction problem (2009) Information Sciences, 179 (8), pp. 1040-1058; Chidamber, S.R., Kemerer, C.F., A metrics suite for object oriented design (1994) IEEE Transactions on Software Engineering, 20 (6), pp. 476-493; Cukic, B., Singh, H., Robust prediction of fault-proneness by random forests (2004) 15th International Symposium on Software Reliability Engineering, pp. 417-428. , IEEE; Dejaeger, K., Verbraken, T., Baesens, B., Toward comprehensible software fault prediction models using Bayesian network classifiers (2013) IEEE Transactions on Software Engineering, 39 (2), pp. 237-257; Dick, S., Meeks, A., Last, M., Bunke, H., Kandel, A., Data mining in software metrics databases (2004) Fuzzy Sets and Systems, 145 (1), pp. 81-110; Elish, K.O., Elish, M.O., Predicting defect-prone software modules using support vector machines (2008) Journal of Systems and Software, 81 (5), pp. 649-660; Erni, K., Lewerentz, C., Applying design-metrics to object-oriented frameworks (1996) Proceedings of the 3rd International Software Metrics Symposium, pp. 64-74. , IEEE Comput. Soc. Press; Fenton, N.E., Pfleeger, S.L., (1998) Software Metrics: A Rigorous and Practical Approach, , PWS Publishing Co London; Ferreira, K.A.M., Bigonha, M.A.S., Bigonha, R.S., Mendes, L.F.O., Almeida, H.C., Identifying thresholds for object-oriented software metrics (2012) Journal of Systems and Software, 85 (2), pp. 244-257; Flottau, J., Osborne, T., Software Cut off Fuel Supply in Stricken A400M, , http://aviationweek.com/defense/software-cut-fuel-supply-stricken-a400m, Flottau, J., & Osborne, T. (2015, May 15). Aerospace Daily & Defense Report. Retrieved November 27, 2015, from, 2015, May 15; Gao, K., Khoshgoftaar, T.M., Wang, H., Seliya, N., Choosing software metrics for defect prediction: An investigation on feature selection techniques (2011) Software: Practice and Experience, 41 (5), pp. 579-606; Gyimothy, T., Ferenc, R., Siket, I., Empirical validation of object-oriented metrics on open source software for fault prediction (2005) IEEE Transactions on Software Engineering, 31 (10), pp. 897-910; Hall, T., Beecham, S., Bowes, D., Gray, D., Counsell, S., A Systematic review of fault prediction performance in software engineering (2011) IEEE Transactions on Software Engineering, 38 (6), pp. 1276-1304; Halstead, M.H., (1977) Elements of Software Science, , Elsevier Science Inc New York; He, Z., Shu, F., Yang, Y., Li, M., Wang, Q., An investigation on the feasibility of cross-project defect prediction (2011) Automated Software Engineering, 19 (2), pp. 167-199; Henderson-Sellers, B., (1996) Object-Oriented Metrics: Measures of Complexity, , Prentice Hall; Herbold, S., Training data selection for cross-project defect prediction (2013) Proceedings of the 9th International Conference on Predictive Models in Software Engineering - PROMISE '13, pp. 1-10. , New York, New York, USA ACM Press New York; Herbold, S., Grabowski, J., Waack, S., Calculation and optimization of thresholds for sets of software metrics (2011) Empirical Software Engineering, 16 (6), pp. 812-841; Jureczko, M., Madeyski, L., Towards identifying software project clusters with regard to defect prediction (2010) Proceedings of the 6th International Conference on Predictive Models in Software Engineering - PROMISE '10, p. 1. , New York, New York, USA ACM Press; Jureczko, M., Spinellis, D.D., Using object-oriented design metrics to predict software defects (2010) Models and Methods of System Dependability, pp. 69-81; Karaboga, D., Akay, B., Ozturk, C., (2007) Artificial Bee Colony (ABC) Optimization Algorithm for Training Feed-Forward Neural Networks, 4617. , V. Torra Y. Narukawa Y. Yoshida Springer Berlin Heidelberg Berlin, Heidelberg; Karaboga, D., Basturk, B., A powerful and efficient algorithm for numerical function optimization: Artificial bee colony (ABC) algorithm (2007) Journal of Global Optimization, 39 (3), pp. 459-471; Karaboga, D., Ozturk, C., Neural networks training by artificial bee colony algorithm on pattern classification (2009) Neural Network World, 19 (3), pp. 279-292; Khoshgoftaar, T.M., Allen, E.B., Jones, W.D., Hudepohl, J.I., Classification tree models of software quality over multiple releases (1999) Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), pp. 116-125. , IEEE Comput. Soc; Khoshgoftaar, T.M., Seliya, N., Analogy-based practical classification rules for software quality estimation (2003) Empirical Software Engineering, 8 (4), pp. 325-350; Koru, A.G., Building defect prediction models in practice (2005) IEEE Software, 22 (6), pp. 23-29; Koru, A.G., Liu, H., An investigation of the effect of module size on defect prediction using static measures (2005) ACM SIGSOFT Software Engineering Notes, 30 (4), pp. 1-5; Kubat, M., Matwin, S., Addressing the curse of imbalanced training sets: One-sided selection (1997) Proceedings of the Fourteenth International Conference on Machine Learning, pp. 179-186. , Nashville; Liu, Y., Khoshgoftaar, T.M., Seliya, N., Evolutionary optimization of software quality modeling with multiple repositories (2010) IEEE Transactions on Software Engineering, 36 (6), pp. 852-864; Malhotra, R., Bansal, A.J., Fault prediction considering threshold effects of object-oriented metrics (2015) Expert Systems, 32 (2), pp. 203-219; Martin, R., OO design quality metrics - An analysis of dependencies (1994) Proceedings of Workshop Pragmatic and Theoretical Directions in Object-Oriented Software Metrics; McCabe, T., A complexity measure (1976) IEEE Transactions on Software Engineering, 2 (4), pp. 308-320; Menzies, T., Caglayan, B., Kocaguneli, E., Krall, J., Turhan, B., The promise repository of empirical software engineering data (2012) West Virginia University: Department of Computer Engineering; Menzies, T., Greenwald, J., Frank, A., Data mining static code attributes to learn defect predictors (2007) IEEE Transactions on Software Engineering, 33 (1), pp. 2-13; Menzies, T., Milton, Z., Turhan, B., Cukic, B., Jiang, Y., Bener, A., Defect prediction from static code features: Current results, limitations, new approaches (2010) Automated Software Engineering, 17 (4), pp. 375-407; Menzies, T., Turhan, B., Bener, A., Gay, G., Cukic, B., Jiang, Y., Implications of ceiling effects in defect predictors (2008) Proceedings of the 4th International Workshop on Predictor Models in Software Engineering - PROMISE '08, p. 47. , New York, New York, USA ACM Press; Faulty Software Can Lead to Astronomic Costs. Retrieved November 27, 2015, from, , http://www.computerweekly.com/opinion/Faulty-software-can-lead-to-astronomic-costs, Michaels, P. (2008) 2008; Nagappan, N., Ball, T., Zeller, A., Mining metrics to predict component failures (2006) Proceeding of the 28th International Conference on Software Engineering - ICSE '06, p. 452. , New York, New York, USA ACM Press; Nickerson, A.S., Japkowicz, N., Milios, E., Using unsupervised learning to guide resampling in imbalanced data sets (2001) Proceedings of the Eighth International Workshop on AI and Statitsics, pp. 261-265; Olague, H.M., Etzkorn, L.H., Gholston, S., Quattlebaum, S., Empirical validation of three software metrics suites to predict fault-proneness of object-oriented classes developed using highly iterative or agile software development processes (2007) IEEE Transactions on Software Engineering, 33 (6), pp. 402-419; Oliveira, P., Valente, M.T., Lima, F.P., Extracting relative thresholds for source code metrics (2014) 2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering (CSMR-WCRE), pp. 254-263. , IEEE; Padberg, F., Ragg, T., Schoknecht, R., Using machine learning for estimating the defect content after an inspection (2004) IEEE Transactions on Software Engineering, 30 (1), pp. 17-28; Pérez-Miñana, E., Gras, J.-J., Improving fault prediction using Bayesian networks for the development of embedded software applications (2006) Software Testing, Verification and Reliability, 16 (3), pp. 157-174; Radjenović, D., Heričko, M., Torkar, R., Živkovič, A., Software fault prediction metrics: A systematic literature review (2013) Information and Software Technology, 55 (8), pp. 1397-1418; Rosenberg, L., Stapko, R., Gallo, A., Object-oriented metrics for reliability (1999) Presentation at IEEE International Symposium on Software Metrics; Sánchez-González, L., García, F., Ruiz, F., Mendling, J., A study of the effectiveness of two threshold definition techniques (2012) 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), pp. 197-205. , IET; Selby, R.W., Porter, A.A., Learning from examples: Generation and evaluation of decision trees for software resource analysis (1988) IEEE Transactions on Software Engineering, 14 (12), pp. 1743-1757; Seliya, N., Khoshgoftaar, T.M., Hulse, J.Van., Predicting faults in high assurance software (2010) 2010 IEEE 12th International Symposium on High Assurance Systems Engineering, pp. 26-34. , IEEE; Shatnawi, R., A quantitative investigation of the acceptable risk levels of object-oriented metrics in open-source systems (2010) IEEE Transactions on Software Engineering, 36 (2), pp. 216-225; Shatnawi, R., Deriving metrics thresholds using log transformation (2015) Journal of Software: Evolution and Process, 27 (2), pp. 95-113; Shatnawi, R., Althebyan, Q., An empirical study of the effect of power law distribution on the interpretation of oo Metrics (2013) ISRN Software Engineering, 2013, pp. 1-18; Shatnawi, R., Li, W., Swain, J., Newman, T., Finding software metrics threshold values using ROC curves (2010) Journal of Software Maintenance and Evolution: Research and Practice, 22 (1), pp. 1-16; Spinellis, D., Tool writing: A forgotten art? (2005) IEEE Software, 22 (4), pp. 9-11; Tang, M.-H., Kao, M.-H., Chen, M.-H., An empirical study on object-oriented metrics (1999) Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), pp. 242-249. , IEEE Comput. Soc; Turhan, B., Tosun Misirli, A., Bener, A., Empirical evaluation of the effects of mixed project data on learning defect predictors (2013) Information and Software Technology, 55 (6), pp. 1101-1118; Wang, S., Yao, X., Using class imbalance learning for software defect prediction (2013) IEEE Transactions on Reliability, 62 (2), pp. 434-443; Williamson, D.F., Parker, R.A., Kendrick, J.S., The box plot: A simple visual method to interpret data (1989) Annals of Internal Medicine, 110 (11), pp. 916-921; Zheng, J., Cost-sensitive boosting neural networks for software defect prediction (2010) Expert Systems with Applications, 37 (6), pp. 4537-4543; Zhou, Y., Leung, H., Empirical analysis of object-oriented design metrics for predicting high and low severity faults (2006) IEEE Transactions on Software Engineering, 32 (10), pp. 771-789; Zimmermann, T., Nagappan, N., Gall, H., Giger, E., Murphy, B., Cross-project defect prediction (2009) Proceedings of the 7th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering on European Software Engineering Conference and Foundations of Software Engineering Symposium - E, p. 91. , New York, New York, USA ACM Press},
  review                  = {{CS C11 C5}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969802903&doi=10.1016%2fj.eswa.2016.05.018&partnerID=40&md5=4062a20c7a2f8e33d06ee03c0e9ad21c},
}

@Article{Bavota2013287,
  author                  = {Bavota, G. and Gravino, C. and Oliveto, R. and De Lucia, A. and Tortora, G. and Genero, M. and Cruz-Lemus, J.A.},
  title                   = {A fine-grained analysis of the support provided by UML class diagrams and ER diagrams during data model maintenance},
  journal                 = {Software and Systems Modeling},
  year                    = {2013},
  volume                  = {14},
  number                  = {1},
  pages                   = {287-306},
  issn                    = {16191366},
  note                    = {cited By 3},
  abbrev_source_title     = {Softw. Syst. Model.},
  abstract                = {This paper presents the results of an empirical study aiming at comparing the support provided by ER and UML class diagrams during maintenance of data models. We performed one controlled experiment and two replications that focused on comprehension activities (the first activity in the maintenance process) and another controlled experiment on modification activities related to the implementation of given change requests. The results achieved were analyzed at a fine-grained level aiming at comparing the support given by each single building block of the two notations. Such an analysis is used to identify weaknesses (i.e., building blocks not easy to comprehend) in a notation and/or can justify the need of preferring ER or UML for data modeling. The analysis revealed that the UML class diagrams generally provided a better support for both comprehension and modification activities performed on data models as compared to ER diagrams. Nevertheless, the former has some weaknesses related to three building blocks, i.e., multi-value attribute, composite attribute, and weak entity. These findings suggest that an extension of UML class diagrams should be considered to overcome these weaknesses and improve the support provided by UML class diagrams during maintenance of data models. © 2013, Springer-Verlag Berlin Heidelberg.},
  affiliation             = {University of Salerno, Fisciano, Salerno, Italy; University of Molise, Pesche, Isernia, Italy; University of Castilla, La Mancha, Spain},
  correspondence_address1 = {Oliveto, R.; University of MoliseItaly},
  document_type           = {Article},
  doi                     = {10.1007/s10270-012-0312-6},
  keywords                = {Maintenance, Composite attributes; Controlled experiment; Empirical studies; Fine-grained analysis; Maintenance process; Model maintenance; Multi value attributes; UML class diagrams, Graphic methods},
  language                = {English},
  publisher               = {Springer Verlag},
  references              = {Baeza-Yates, R., Ribeiro-Neto, B., (1999) Modern information retrieval, , Addison-Wesley, UK:; Basili, V., Caldiera, G., (1994) Rombach. The goal question metric paradigm, , Wiley, New York:; Basili, V.R., Selby, R.W., Hutchens, D.H., Experimentation in software engineering (1986) IEEE Transact. Softw. Eng., 12 (7), pp. 758-773; Batra, D., Hoffer, J., Bostrom, R., Comparing representations with relational and eer model (1990) Commun. ACM, 33 (2), pp. 128-139; http://distat.unimol.it/reports/ERvsUML/, Bavota, G., Gravino, C., Oliveto, R., De Lucia, A., Tortora, G., Genero, M., Cruz-Lemus, J.: UML vs ER - experimental material. (2012)Bock, D., Ryan, T., Accuracy in modeling with extended entity relationship and object oriented data models (1993) J. Database Manag., 4 (4), pp. 30-39; Briand, L., Labiche, Y., Di Penta, M., Yan-Bondoc, H., An experimental investigation of formality in UML-based development (2005) IEEE Transact. Softw. Eng., 31 (10), pp. 833-849; Brosey, M., Shneiderman, B., Two experimental comparisons of relational and hierarchical database models (1978) Int. J. Man-Mach. Stud., 10, pp. 625-637; Cohen, J., (1988) Statistical power analysis for the behavioral sciences, , Lawrence Earlbaum Associates, London:; Conover, W.J., (1998) Practical nonparametric statistics, , Wiley, New York:; De Lucia, A., Gravino, C., Oliveto, R., Tortora, G., An experimental comparison of ER and UML class diagrams for data modeling (2010) Empirical Softw. Eng., 15 (5), pp. 455-492; Decorte, G., Eiger, A., Kroenke, D., Kyte, T., An object-oriented model for capturing data semantics (1992) Proceedings of the Eighth International Conference on Data, Engineering, pp. 126-135; Durding, B., Becker, C., Gould, J., (1977) Data org. Human Fact., 19, pp. 1-14; Juhn, S., Naumann, J., The effectiveness of data representation characteristics on user validation (1985) Proceedings of the 6th International Conference on, Information Systems, pp. 212-226; Kampenes, V.B., Dybå, T., Hannay, J.E., Sjøberg, D.I.K., A systematic review of effect size in software engineering experiments (2007) Inf. Softw. Technol., 49 (11-12), pp. 1073-1086; Liao, C., Palvia, P., The impact of data models and task complexity on end-user performance: an experimental investigation (2000) Int. J. Human Comput. Stud., 52, pp. 831-845; Liao, C., Shih, M., The effects of data models and training degrees on end users’ data representations (1998) MIS Review, 8, pp. 1-20; Miller, G.A., The magical number seven, plus or minus two: some limits on our capacity for processing information (1956) Psychol. Rev., 63 (2), pp. 81-97; Navathe, S.B., Evolution of data modeling for databases (1992) Commun. ACM., 35 (9), pp. 112-123; Oppenheim, A.N., (1992) Questionnaire design, , Pinter Publishers, Interviewing and Attitude Measurement:; Palvia, P., On end-user computing productivity (1991) Inform. Manag., 21, pp. 217-224; Palvia, P., Lio, C., To, P., The impact of conceptual data models on end-user performance (1992) J. Database Manag., 3 (4), pp. 4-15; Shoval, P., Frumermann, I., OO and EER conceptual schemas: a comparison of user comprehension (1994) J. Database Manag., 5 (4), pp. 28-38; Shoval, P., Shiran, S., Entity-relationship and object-oriented data modeling–an experimental comparison of design quality (1997) Data Knowl. Eng., 21 (3), pp. 297-315; Sirkin, R.M., (2005) Statistics for the social sciences, , Sage Publications, California:; Wohlin, C., Runeson, P., Host, M., Ohlsson, M.C., Regnell, B., Wesslen, A., (2000) Experimentation in Software Engineering–an introduction, , Kluwer, Dordrecht:},
  review                  = {{E C6 C2}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922338179&doi=10.1007%2fs10270-012-0312-6&partnerID=40&md5=0ee9b68e7e603eb4237e3a82bd287bca},
}

@Article{Bernárdez2015,
  author                  = {Bernárdez, B. and Durán, A. and Parejo, J.A. and Ruiz-Cortés, A.},
  title                   = {An experimental replication on the effect of the practice of mindfulness in conceptual modeling performance},
  journal                 = {Journal of Systems and Software},
  year                    = {2015},
  issn                    = {01641212},
  note                    = {cited By 0; Article in Press},
  abbrev_source_title     = {J Syst Software},
  abstract                = {. Context: Mindfulness is a meditation technique aimed to increase clearness of mind and awareness. In the 2013-2014 academic year, an experiment was carried out to test whether the practice of mindfulness during 4 weeks improved or not the conceptual modeling performance using UML class diagrams of 32 second-year students of Software Engineering at the University of Seville. . Objective: An internal replication with some changes in the original design was performed in the first semester of the 2014-2015 academic year in order to confirm the insights provided by the original study and increase the confidence in its conclusions. The sample were 53 students with the same profile than in the original study. . Method: Half the students (27 subjects) practiced mindfulness during 6 weeks, while the other half (26 subjects), i.e. the . control group, received no treatment during that time. All the students developed two conceptual models using UML class diagrams from a transcript of an interview, one before and another after the 6 weeks of mindfulness sessions, and the results were compared in terms of conceptual modeling effectiveness and efficiency. . Results: The results of both experiments were similar, showing that the practice of mindfulness significantly improves conceptual modeling efficiency. Regarding conceptual modeling effectiveness, an improvement is observed in practice, but the analysis shows that such improvement is not statistically significant. After a reanalysis of data, consistent results have also been obtained. . Conclusion: After a replication that leads to the same conclusions as the original study, the adequacy of the original experiment is confirmed and the credibility of its results is increased. Thus, we can state that the practice of mindfulness can improve the efficiency of Software Engineering students in the development of conceptual models, although further experimentation is needed in order to confirm the results in other contexts and other Software Engineering activities different from conceptual modeling. © 2016.},
  affiliation             = {Department of Computer Languages and Systems, University of Seville E.T.S.I. Informática, Av. Reina Mercedes s/n, 41012, Seville, Spain},
  author_keywords         = {Conceptual modeling; Mindfulness; Replication; Software psychology},
  coden                   = {JSSOD},
  correspondence_address1 = {Bernárdez, B.email: beat@us.es},
  document_type           = {Article in Press},
  doi                     = {10.1016/j.jss.2016.06.104},
  keywords                = {Data mining; Efficiency; Software engineering; Software testing; Students, Conceptual model; Effectiveness and efficiencies; Engineering activities; Experimental replications; Mindfulness; Replication; Software engineering students; Software psychology, Education},
  language                = {English},
  publisher               = {Elsevier Inc.},
  review                  = {{E C2 C8 C11}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85002559536&doi=10.1016%2fj.jss.2016.06.104&partnerID=40&md5=b6d9acffd01f20c0af8c8a7888ad6cb9},
}

@Conference{Brooks201356,
  author              = {Brooks, A. and Chambers, J. and Lee, C.N. and Mead, F.},
  title               = {A partial replication with a sample size of one: A smoke test for empirical software engineering},
  year                = {2013},
  pages               = {56-65},
  address             = {Baltimore, MD},
  publisher           = {IEEE Computer Society},
  note                = {cited By 0; Conference of 2013 3rd International Workshop on Replication in Empirical Software Engineering Research, RESER 2013 ; Conference Date: 9 October 2013 Through 9 October 2013; Conference Code:101995},
  abbrev_source_title = {Proc. - Int. Workshop Replication Empir. Softw. Eng. Res., RESER},
  abstract            = {Performing a full external replication can be a hugely expensive undertaking. The aim of this study was to determine what could be reliably established by performing a partial replication with a single competent developer making good use of available tools. The developer was not constrained by artificial time limits and was directed to make good use of the Jumble tool for automated mutation testing and the Model Unit framework for automated state-based testing. The Java-based software under test (SUT) was Cruise Control, a car simulation system. The patterns of mutation kills and reasons for missed kills are compared with the patterns and reasons reported in the original experimental study which involved four groups of students who manually generated test cases. We conclude that it can be meaningful to have a single competent developer perform a partial replication as long as a checking team checks and, where necessary, revises the work of the developer. The approach can be viewed as a smoke test for empirical software engineering. © 2013 IEEE.},
  affiliation         = {Department of Computer Science, University of Minnesota Duluth, Duluth, MN 55812-2496, United States},
  art_number          = {6664732},
  author_keywords     = {mutation testing; Partial replication; single competent developer; smoke test; state-based testing},
  document_type       = {Conference Paper},
  doi                 = {10.1109/RESER.2013.7},
  isbn                = {9780769551210},
  journal             = {Proceedings - 2013 3rd International Workshop on Replication in Empirical Software Engineering Research, RESER 2013},
  keywords            = {Smoke; Software engineering; Testing; Tools, Mutation testing; Partial replication; single competent developer; Smoke test; State-based testing, Software testing},
  language            = {English},
  references          = {Shull, F., Singer, J., Sjberg, D.I.K., (2010) Guide to Advanced Empirical Software Engineering, , 1st ed. Springer Publishing Company, Incorporated; Wohlin, C., Runeson, P., Hst, M., Ohlsson, M.C., Regnell, B., Wessln, A., (2012) Experimentation in Software Engineering, , Springer Publishing Company, Incorporated; Da Silva, F.Q., Suassuna, M., França, A.C.C., Grubb, A.M., Gouveia, T.B., Monteiro, C.V., Dos Santos, I.E., Replication of empirical studies in software engineering research: A systematic mapping study (2012) Empirical Software Engineering, pp. 1-57; Mouchawrab, S., Briand, L.C., Labiche, Y., Di Penta, M., Assessing, comparing, and combining state machine-based testing and structural testing: A series of experiments (2011) IEEE Trans. Softw. Eng., 37 (2), pp. 161-187. , http://dx.doi.org/10.1109/TSE.2010.32, Mar. [Online]. Available; Ma, Y.-S., Offutt, J., Kwon, Y.R., MuJava: An automated class mutation system (2005) Softw. Test. Verif. Reliab., 15 (2), pp. 97-133. , http://dx.doi.org/10.1002/stvr.v15:2, Jun. [Online]. Available; Mouchawrab, S., Briand, L.C., Labiche, Y., Di Penta, M., (2009) Assessing, Comparing, and Combining State Machine-based Testing and Structural Testing: A Series of Experiments, , http://squall.sce.carleton.ca/pubs/tech_report/TR_SCE-08-09.pdf, Technical Report, Carleton University, TR SCE-08-09. [Online]. Available; http://sir.unl.edu/portal/index.php, [Online]. AvailableIrvine, S.A., Pavlinic, T., Trigg, L., Cleary, J.G., Inglis, S., Utting, M., Jumble Java Byte Code to Measure the Effectiveness of Unit Tests (2007) Proceedings of the Testing: Academic and Industrial Conference Practice and Research Techniques - MUTATION, pp. 169-175. , http://dl.acm.org/citation.cfm?id=1308173.1308280, Washington, DC, USA: IEEE Computer Society, [Online]. Available; Jumble Mutation Testing Tool. [Online], , http://jumble.sourceforge.net/, Available; Utting, M., ModelJUnit. [Online], , http://www.cs.waikato.ac.nz/~marku/mbt/modeljunit/, Available; Utting, M., How to design extended finite state machine test models in Java (2012) Model-Based Testing for Embedded Systems, pp. 147-169. , J. Zander, I. Schieferdecker, and P. J. Mosterman, Eds. CRC Press; http://www.eclipse.org/, [Online]. AvailableDo, H., Elbaum, S.G., Rothermel, G., Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact (2005) Empirical Software Engineering: An International Journal, 10 (4), pp. 405-435; JUnit a Programmer-oriented Testing Framework for Java. [Online], , http://junit.org/, Available; OpenSeminar in Software Engineering. [Online], , http://agile.csc.ncsu.edu/SEMaterials/tutorials/jumble/, Mutation Testing with Jumble. Available; Madeyski, L., Radyk, N., Judy - A mutation testing tool for Java (2010) Software, IET, 4 (1), pp. 32-42; Alexander, R.T., Bieman, J.M., Ghosh, S., Ji, B., Mutation of Java Objects (2002) Proceedings of the 13th International Symposium on Software Reliability Engineering, p. 341. , http://dl.acm.org/citation.cfm?id=851033.856284, ser. ISSRE '02. Washington, DC, USA: IEEE Computer Society, [Online]. Available; Jia, Y., Harman, M., An analysis and survey of the development of mutation testing (2011) IEEE Trans. Softw. Eng., 37 (5), pp. 649-678. , http://dx.doi.org/10.1109/TSE.2010.62, Sep. [Online]. Available; Andrews, J., Briand, L., Labiche, Y., Is mutation an appropriate tool for testing experiments? Software Engineering, 2005. ICSE 2005. Proceedings. 27th International Conference On, 2005, pp. 402-411; Namin, A.S., Kakarla, S., The use of mutation in testing experiments and its sensitivity to external threats (2011) Proceedings of the 2011 International Symposium on Software Testing and Analysis, pp. 342-352. , http://doi.acm.org/10.1145/2001420.2001461, ser. ISSTA '11. New York, NY, USA: ACM, [Online]. Available; Java 7 API Thread Class. [Online], , http://docs.oracle.com/javase/7/docs/api/java/lang/Thread.html, Available; Code Listings for Java Concurrency in Practice. [Online], , http://jcip.net.s3-website-us-east-1.amazonaws.com/listings.html, Available; The Java Tutorials: Concurrency. [Online], , http://docs.oracle.com/javase/tutorial/essential/concurrency/, Available; Goetz, B., Java Theory and Practice: Dealing with InterruptedException. [Online], , http://www.ibm.com/developerworks/java/library/j-jtp05236/index.html, Available; Cruise Control Applet Code. [Online], , http://www.doc.ic.ac.uk/~jnm/book/bookapplets/CruiseControl.html, Available; JDK 6 Adoption Guide. [Online], , http://www.oracle.com/technetwork/java/javase/adoptionguide-137484.html, Available; Lee, E.A., The Problem with Threads (2006) Computer, 39 (5), pp. 33-42},
  review              = {{E C5 C4}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892585040&doi=10.1109%2fRESER.2013.7&partnerID=40&md5=d990e63b1c2e3d70aadb5fbf8891458e},
}

@Conference{Callele201355,
  author              = {Callele, D. and Wnuk, K. and Borg, M.},
  title               = {Confounding factors when conducting industrial replications in requirements engineering},
  year                = {2013},
  pages               = {55-58},
  address             = {San Francisco, CA},
  publisher           = {IEEE Computer Society},
  note                = {cited By 2; Conference of 2013 1st International Workshop on Conducting Empirical Studies in Industry, CESI 2013 ; Conference Date: 20 May 2013 Through 20 May 2013; Conference Code:101016},
  abbrev_source_title = {Int. Workshop Conduct. Empir. Stud. Ind., CESI - Proc.},
  abstract            = {Despite the widely recognized importance of replications in software engineering, industrial replications in software engineering are still rarely reported. Although the literature provides some evidence about the issues and challenges related to conducting experiments and replications the practitioner's view of the issues and challenges has not been fully explored. This paper reports an industrial practitioner's review of a replicated experiment on linguistic tool support for consolidation of requirements from multiple sources. The review identified potential confounding factors from a perspective that differed significantly from that of the designers of the experiment The results suggest that industrial practice may focus upon specific process aspects that are not necessarily reflected in academic practice. © 2013 IEEE.},
  affiliation         = {Business Development Telecommunications Research Laboratories (TRLabs), Saskatoon, Canada; Department of Computer Science, Lund University, Lund, Sweden},
  art_number          = {6618472},
  author_keywords     = {Confounding factors; Experience report; Replication; Requirements engineering},
  document_type       = {Conference Paper},
  doi                 = {10.1109/CESI.2013.6618472},
  isbn                = {9781467362863},
  journal             = {2013 1st International Workshop on Conducting Empirical Studies in Industry, CESI 2013 - Proceedings},
  keywords            = {Experiments; Requirements engineering; Software engineering, Confounding factors; Experience report; Industrial practices; Industrial practitioners; Issues and challenges; Multiple source; Replicated experiment; Replication, Industry},
  language            = {English},
  references          = {Shull, F.J., Vegas, S., Juriste, N., The role of replications in empirical software engineering (2008) Empirical Software Engineering, 13, pp. 211-218. , April; Sjøberg, D.I.K., Hannay, J.E., Hansen, O., Karahasanovic, V.B., Liborg, A., Rekdal, N.K., The survey of controlled experiments in software engineering (2005) IEEE Trans Softw Eng, 31, pp. 733-753. , Sep; Wnuk, K., Höst, M., Regnell, B., Replication of an experiment on linguistic tool support for consolidation of requirements from multiple sources (2012) Empirical Software Engineering, 17, pp. 305-344. , June; Nattoch Dag, J., Thelin, T., Regnell, B., An experiment on linguistic tool support for consolidation of requirements from multiple sources in market-driven product development (2006) Emp Soft Eng, 11, pp. 303-329. , Jun; Kotonya, G., Sommerville, I., (1998) Requirements Engineering: Processes and Techniques, , Wiley; Fogelström, N., Gorschek, T., Svahnberg, M., Olsson, P., The impact of agile principles on market-driven software product development (2010) Softw Maint and Evol - Research and Practice, 22, pp. 53-80. , February; Nattoch Dag, J., (2006) Managing Natural Language Requirements in Large-scale Software Development, , PhD thesis, Lund University, Sweden; Manning, C.D., Schuetze, H., (2002) Foundations of Statistical Natural Language Processing, , MIT Press; http://reqsimile.sourceforge.net/http://www-01.ibm.com/software/awdtools/doors/productline/Wohlin, C., Runeson, P., Höst, M., Ohlsson, M., Regnell, B., Wesslén, A., (2012) Experimentation in Software Engineering, , Springer; Gorschek, T., Svahnberg, M., Borg, M., Börstler, J., Eriksson, M., Lonconsole, A., Sandahl, K., A controlled empirical evaluation of a requirements abstraction model (2007) Inf and Soft Techn, 49, pp. 790-805. , July; Höst, M., Regnell, B., Wohlin, C., Using students as subjects - A comparative study of students and professionals in lead-time impact assessment (2000) Empirical Software Engineering, 5, pp. 201-214. , Nov; Hudson, R.F., Lane, H.B., Pullen, P.C., Reading fluency assessment and instruction: What, why, and how? (2005) The Reading Teacher, 58, pp. 702-714. , May},
  review              = {{E C2}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84888880696&doi=10.1109%2fCESI.2013.6618472&partnerID=40&md5=12276c0c62b7a4d37da54f0ce98abd80},
}

@Conference{Cavalcanti2015267,
  author              = {Cavalcanti, G. and Accioly, P. and Borba, P.},
  title               = {Assessing Semistructured Merge in Version Control Systems: A Replicated Experiment},
  year                = {2015},
  volume              = {2015-November},
  pages               = {267-276},
  publisher           = {IEEE Computer Society},
  note                = {cited By 0; Conference of ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM 2015 ; Conference Date: 22 October 2015 Through 23 October 2015; Conference Code:118866},
  abbrev_source_title = {Int. Symp. Empir. Softw. Eng. Meas.},
  abstract            = {Context: To reduce the integration effort arising from conflicting changes resulting from collaborative software development tasks, unstructured merge tools try to automatically solve part of the conflicts via textual similarity, whereas structured and semistructured merge tools try to go further by exploiting the syntactic structure of the involved artifacts. Objective: In this study, aiming at increasing the existing body of evidence and assessing results for systems developed under an alternative version control paradigm, we replicate an experiment conducted by Apel et al. to compare the unstructured and semistructured approach with respect to the occurrence of conflicts reported by both approaches. Method: We used both semistructured and unstructured merge in a sample 2.5 times bigger than the original study regarding the number of projects and 18 times bigger regarding the number of merge scenarios, and we compared the occurrence of conflicts. Results: Similar to the original study, we observed that semistructured merge reduces the number of conflicts in 55% of the scenarios of the new sample. However, the observed average conflict reduction of 62% in these scenarios is far superior than what has been observed before. We also bring new evidence that the use of semistructured merge can reduce the occurrence of conflicting merge scenarios by half. Conclusions: Our findings reinforce the benefits of exploiting the syntactic structure of the artifacts involved in code integration. Besides, the reductions observed in the number and size of conflicts suggest that the use of semistructured merge, when compared to the unstructured approach, might decrease integration effort without compromising correctness. © 2015 IEEE.},
  affiliation         = {Federal University of Pernambuco, Recife, Brazil},
  art_number          = {7321191},
  author_keywords     = {collaborative development; replication study; semistructured merge; software merging; version control systems},
  document_type       = {Conference Paper},
  doi                 = {10.1109/ESEM.2015.7321191},
  isbn                = {9781467378994},
  issn                = {19493770},
  journal             = {International Symposium on Empirical Software Engineering and Measurement},
  keywords            = {Control systems; Groupware; Information management; Integration; Software design; Software engineering; Syntactics, Collaborative development; Replication study; Semi-structured; Software merging; Version control system, Mergers and acquisitions},
  language            = {English},
  references          = {Apel, S., Liebig, J., Brandl, B., Lengauer, C., Kästner, C., Semistructured merge: Rethinking merge in revision control systems (2011) Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, Ser. ESEC/FSE '11, pp. 190-200. , ACM; Brun, Y., Holmes, R., Ernst, M.D., Notkin, D., Proactive detection of collaboration conflicts (2011) Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, Ser. ESEC/FSE '11, pp. 168-178. , ACM; Kasi, B.K., Sarma, A., Cassandra: Proactive conflict minimization through optimized task scheduling (2013) Proceedings of the 2013 International Conference on Software Engineering, Ser. ICSE '13, pp. 732-741. , IEEE Press; Zimmermann, T., Mining workspace updates in cvs (2007) Proceedings of the Fourth International Workshop on Mining Software Repositories, Ser. MSR '07, p. 11. , IEEE Computer Society; Sarma, A., Redmiles, D., Van Der Hoek, A., Palantir: Early detection of development conflicts arising from parallel code changes (2012) IEEE Trans. Softw. Eng, 38 (4), pp. 889-908. , Jul; Apel, S., Lessenich, O., Lengauer, C., Structured merge with auto-tuning: Balancing precision and performance (2012) Proceedings of the 27th IEEE/ACM International Conference on Automated Software Engineering, Ser. ASE 2012, pp. 120-129. , ACM; Grass, J.E., Cdiff: A syntax directed differencer for c++ programs (1992) C++ Conference, pp. 181-194; Westfechtel, B., Structure-oriented merging of revisions of software documents (1991) Proceedings of the 3rd International Workshop on Software Configuration Management, Ser. SCM '91, pp. 68-79. , ACM; Apiwattanapong, T., Orso, A., Harrold, M.J., Jdiff: A differencing technique and tool for object-oriented programs (2007) Automated Software Engg, 14 (1), pp. 3-36. , Mar; Mens, T., A state-of-the-art survey on software merging (2002) IEEE Trans. Softw. Eng, 28 (5), pp. 449-462. , May; Bird, C., Rigby, P.C., Barr, E.T., Hamilton, D.J., German, D.M., Devanbu, P., The promises and perils of mining git (2009) Proceedings of the 2009 6th IEEE International Working Conference on Mining Software Repositories, Ser. MSR '09, pp. 1-10. , IEEE Computer Society; Brindescu, C., Codoban, M., Shmarkatiuk, S., Dig, D., How do centralized and distributed version control systems impact software changes? (2014) Proceedings of the 36th International Conference on Software Engineering, Ser. ICSE 2014, pp. 322-333. , ACM; O'Sullivan, B., Making sense of revision-control systems (2009) Commun. ACM, 52 (9), pp. 56-62. , Sep; Khanna, S., Kunal, K., Pierce, B.C., A formal investigation of diff3 (2007) Proceedings of the 27th International Conference on Foundations of Software Technology and Theoretical Computer Science, Ser. FSTTCS'07, pp. 485-496. , Springer-Verlag; Buffenbarger, J., Syntactic software merging (1995) Selected Papers from the ICSE SCM-4 and SCM-5 Workshops, on Software Configuration Management, pp. 153-172. , Springer-Verlag; Apel, S., Lengauer, C., Superimposition: A languageindependent approach to software composition (2008) Proceedings of the 7th International Conference on Software Composition, Ser. SC'08, pp. 20-35. , Springer-Verlag; Rodriguez, M.A., Graph databases: Trends in the web of data (2010) KRDB Trends in the Web of Data School-Brixen/Bressanone, , Italy; Prudêncio, J.A.G., Murta, L., Werner, C., Cepêda, R., To lock, or not to lock: That is the question (2012) J. Syst. Softw, 85 (2), pp. 277-289. , Feb; Santos, R.D.S., Murta, L.G.P., Evaluating the branch merging effort in version control systems (2012) Proceedings of the 2012 26th Brazilian Symposium on Software Engineering, Ser. SBES '12, pp. 151-160. , IEEE Computer Society; Silva, F.F., Borel, E., Lopes, E., Murta, L.G.P., Towards a difference detection algorithm aware of refactoring-related changes (2014) Proceedings of the 2014 Ninth International Conference on Availability, Reliability and Security, Ser. ARES '14, pp. 111-120. , IEEE Computer Society; Hunt, J.W., Szymanski, T.G., A fast algorithm for computing longest common subsequences (1977) Commun. ACM, 20 (5), pp. 350-353. , May; Goguen, J.A., Meseguer, J., Security policies and security models 2012 IEEE Symposium on Security and Privacy},
  review              = {{E C3 C8}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961674051&doi=10.1109%2fESEM.2015.7321191&partnerID=40&md5=7d4274d677de1c4d1c81cd782ef8a49b},
}

@Article{Ceccato2015,
  author                  = {Ceccato, M. and Marchetto, A. and Mariani, L. and Nguyen, C.D. and Tonella, P.},
  title                   = {Do automatically generated test cases make debugging easier? An experimental assessment of debugging effectiveness and efficiency},
  journal                 = {ACM Transactions on Software Engineering and Methodology},
  year                    = {2015},
  volume                  = {25},
  number                  = {1},
  issn                    = {1049331X},
  note                    = {cited By 5},
  abbrev_source_title     = {ACM Trans. Software Eng. Methodol.},
  abstract                = {Several techniques and tools have been proposed for the automatic generation of test cases. Usually, these tools are evaluated in terms of fault-revealing or coverage capability, but their impact on the manual debugging activity is not considered. The question is whether automatically generated test cases are equally effective in supporting debugging as manually written tests. We conducted a family of three experiments (five replications) with humans (in total, 55 subjects) to assess whether the features of automatically generated test cases, which make them less readable and understandable (e.g., unclear test scenarios, meaningless identifiers), have an impact on the effectiveness and efficiency of debugging. The first two experiments compare different test case generation tools (Randoop vs. EvoSuite). The third experiment investigates the role of code identifiers in test cases (obfuscated vs. original identifiers), since a major difference between manual and automatically generated test cases is that the latter contain meaningless (obfuscated) identifiers. We show that automatically generated test cases are as useful for debugging as manual test cases. Furthermore, we find that, for less experienced developers, automatic tests are more useful on average due to their lower static and dynamic complexity. © 2015 ACM.},
  affiliation             = {Fondazione Bruno Kessler, Trento, Italy; University of Milano Bicocca, Milano, Italy; SnT Centre, University of Luxembourg, Luxembourg},
  art_number              = {5},
  author_keywords         = {Automatic test case generation; Debugging; Empirical software engineering},
  coden                   = {ATSME},
  correspondence_address1 = {Ceccato, M.; Fondazione Bruno KesslerItaly; email: ceccato@fbk.eu},
  document_type           = {Article},
  doi                     = {10.1145/2768829},
  keywords                = {Computer debugging; Efficiency; Program debugging; Software engineering; Software testing, Automatic Generation; Automatic test-case generations; Automatically generated; Effectiveness and efficiencies; Empirical Software Engineering; Experimental assessment; Techniques and tools; Test case generation, Automatic test pattern generation},
  language                = {English},
  publisher               = {Association for Computing Machinery},
  references              = {Andrews, J.H., Briand, L.C., Labiche, Y., Is mutation an appropriate tool for testing experiments? (2005) Proceedings of the 27th International Conference on Software Engineering (ICSE'05), pp. 402-411; Andrews, J.H., Groce, A., Weston, M., Xu, R.-G., Random test run length and effectiveness (2008) Proceedings of the 23rd IEEE/ACM International Conference on Automated Software Engineering (ASE'08), pp. 19-28. , IEEE Computer Society; Artzi, S., Dolby, J., Tip, F., Pistoia, M., Directed test generation for effective fault localization (2010) Proceedings of the 19th International Symposium on Software Testing and Analysis (ISSTA'10), pp. 49-60. , ACM Press, New York; Beckman, N.E., Nori, A.V., Rajamani, S.K., Simmons, R.J., Tetali, S.D., Thakur, A.V., Proofs from tests (2010) IEEE Trans. Softw. Engin., 36, pp. 495-508; Burnim, J., Sen, K., Heuristics for scalable dynamic test generation (2008) Proceedings of the IEEE/ACM International Conference on Automated Software Engineering (ASE'08), pp. 443-446; Cadar, C., Ganesh, V., Pawlowski, P.M., Dill, D.L., Engler, D.R., EXE: Automatically generating inputs of death (2008) ACM Trans. Inf. Syst. Secur., 12, p. 2; Ceccato, M., Marchetto, A., Mariani, L., Nguyen, C.D., Tonella, P., An empirical study about the effectiveness of debugging when random test cases are used (2012) Proceedings of the 34th International Conference on Software Engineering (ICSE'12), pp. 452-462; Ceccato, M., Nguyen, C.D., Marchetto, A., Mariani, L., Tonella, P., (2013) A Family of Experiments to Assess the Impact of Automated Test Case Generation on the Accuracy and Efficiency of Debugging, Data Analysis of Five Replications, , https://se.fbk.eu/technical-reports, Tech. rep. FBK; Ciupa, I., Leitner, A., Oriol, M., Meyer, B., Experimental assessment of random testing for objectoriented software (2007) Proceedings of the International Symposium on Software Testing and Analysis (ISSTA'07), pp. 84-94. , ACM Press, New York; Cover, T.M., Hart, P.E., Nearest neighbor pattern classification (1967) IEEE Trans. Inf. Theory, 13 (1), pp. 21-27; Do, H., Elbaum, S.G., Rothermel, G.G., Supporting controlled experimentation with testing techniques: An infrastructure and its potential impact (2005) Empir. Softw. Engin., 10 (4), pp. 405-435; Duran, J.W., An evaluation of random testing (1984) IEEE Trans. Softw. Engin., 4, pp. 438-444; Frankl, P.G., Weiss, S.N., An experimental comparison of the effectiveness of the all-uses and all-edges adequacy criteria (1991) Proceedings of the Symposium on Testing, Analysis, and Verification (TAV4'91), pp. 154-164. , ACM Press, New York; Fraser, G., Arcuri, A., Evolutionary generation of whole test suites (2011) Proceedings of the 11th International Conference on Quality Software (QSIC'11), pp. 31-40; Fraser, G., Zeller, A., Mutation-driven generation of unit tests and oracles (2010) Proceedings of the 19th International Symposium on Software Testing and Analysis (ISSTA'10), pp. 147-158. , ACM Press, New York; Fry, Z.P., Weimer, W., A human study of fault localization accuracy (2010) Proceedings of the IEEE International Conference on Software Maintenance (ICSM'10), pp. 1-10. , IEEE Computer Society; Godefroid, P., Klarlund, N., Sen, K., DART: Directed automated random testing (2005) Proceedings of the ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI'05), pp. 213-223. , ACM Press, New York; Godefroid, P., Levin, M.Y., Molnar, D.A., Automated whitebox fuzz testing (2008) Proceedings of the Network and Distributed System Security Symposium (NDSS'08); Holm, S., A simple sequentially rejective multiple test procedure (1979) Scandinav. J. Statist., 6 (2), pp. 65-70; Huang, L., Holcombe, M., Empirical investigation towards the effectiveness of test first programming (2009) Inf. Softw. Technol., 51 (1), pp. 182-194; Itkonen, J., Mantyla, M.V., Lassenius, C., How do testers do it? An exploratory study on manual testing practices (2009) Proceedings of the 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM'09), pp. 494-497. , IEEE Computer Society; Jones, J.A., Harrold, M.J., Stasko, J., Visualization of test information to assist fault localization (2002) Proceedings of the International Conference on Software Engineering (ICSE'02), pp. 467-477. , ACM Press, New York; Oppenheim, A.N., (1992) Questionnaire Design, Interviewing and Attitude Measurement, , Pinter, London; Pacheco, C., Ernst, M.D., Randoop: Feedback-directed random testing for Java (2007) Companion to the 22nd ACM SIGPLAN Conference on Object-oriented Programming Systems and Applications Companion (OOPSLA'07), pp. 815-816. , ACM Press, New York; Parnin, C., Orso, A., Are automated debugging techniques actually helping programmers? (2011) Proceedings of the International Symposium on Software Testing and Analysis (ISSTA'11), pp. 199-209. , ACM Press, New York; Ricca, F., Torchiano, M., Di Penta, M., Ceccato, M., Tonella, P., Using acceptance tests as a support for clarifying requirements: A series of experiments (2009) Inf. Softw. Technol., 51 (2), pp. 270-283; Ruthruff, J.R., Burnett, M., Rothermel, G., An empirical study of fault localization for end-user programmers (2005) Proceedings of the 27th International Conference on Software Engineering (ICSE'05), pp. 352-361. , ACM Press, New York; Sen, K., Marinov, D., Agha, G., CUTE: A concolic unit testing engine for C (2005) SIGSOFT Softw. Engin. Notes, 30 (5), pp. 263-272; Tillmann, N., De Halleux, J., Pex: White box test generation for. NET (2008) Proceedings of the 2nd International Conference on Tests and Proofs (TAP'08), pp. 134-153. , Springer; Tonella, P., Evolutionary testing of classes (2004) Proceedings of the ACM/SIGSOFT International Symposium on Software Testing and Analysis (ISSTA'04), pp. 119-128; Van Rijsbergen, C.J., (1979) Information Retrieval, , 2nd ed. Butterworths, London; Weiser, M., Lyle, J., Experiments on slicing-based debugging AIDS (1986) Proceedings of the 1st Workshop on Empirical Studies of Programmers, pp. 187-197. , Ablex Publishing, Norwood, NJ; Wohlin, C., Runeson, P., Host, M., Ohlsson, M.C., Regnell, B., Wesslen, A., (2012) Experimentation in Software Engineering, , Springer; Yu, Y., Jones, J.A., Harrold, M.J., An empirical study of the effects of test-suite reduction on fault localization (2008) Proceedings of the 30th International Conference on Software Engineering (ICSE'08), pp. 201-210. , ACM Press, New York; Zeller, A., Hildebrandt, R., Simplifying and isolating failure-inducing input (2002) IEEE Trans. Softw. Engin., 28 (2), pp. 183-200},
  review                  = {{E C5}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951925728&doi=10.1145%2f2768829&partnerID=40&md5=6590ce44c7fb83fb14e7b7bb9829e6ee},
}

@Conference{Chatterji2013112,
  author                  = {Chatterji, D. and Carver, J.C. and Kraft, N.A. and Harder, J.},
  title                   = {Effects of cloned code on software maintainability: A replicated developer study},
  year                    = {2013},
  pages                   = {112-121},
  address                 = {Koblenz},
  note                    = {cited By 5; Conference of 20th Working Conference on Reverse Engineering, WCRE 2013 ; Conference Date: 14 October 2013 Through 17 October 2013; Conference Code:102314},
  abbrev_source_title     = {Proc. Working Conf. Rev. Eng. WCRE},
  abstract                = {Code clones are a common occurrence in most software systems. Their presence is believed to have an effect on the maintenance process. Although these effects have been previously studied, there is not yet a conclusive result. This paper describes an extended replication of a controlled experiment (i.e. a strict replication with an additional task) that analyzes the effects of cloned bugs (i.e. bugs in cloned code) on the program comprehension of programmers. In the strict replication portion, the study participants attempted to isolate and fix two types of bugs, cloned and non-cloned, in one of two small systems. In the extension of the original study, we provided the participants with a clone report describing the location of all cloned code in the other system and asked them to again isolate and fix cloned and non-cloned bugs. The results of the original study showed that cloned bugs were not significantly more difficult to maintain than non-cloned bugs. Conversely, the results of the replication showed that it was significantly more difficult to correctly fix a cloned bug than a non-cloned bug. But, there was no significant difference in the amount of time required to fix a cloned bug vs. a non-cloned bug. Finally, the results of the study extension showed that programmers performed significantly better when given clone information than without clone information. © 2013 IEEE.},
  affiliation             = {Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States; Software Engineering Group, University of Bremen, Bremen, Germany},
  art_number              = {6671286},
  author_keywords         = {clone management; code clones; developer behavior; empirical studies; software clones; software maintenance},
  correspondence_address1 = {Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States},
  document_type           = {Conference Paper},
  doi                     = {10.1109/WCRE.2013.6671286},
  funding_details         = {0915559, NSF, National Science Foundation},
  isbn                    = {9781479929313},
  issn                    = {10951350},
  journal                 = {Proceedings - Working Conference on Reverse Engineering, WCRE},
  keywords                = {Clone management; Code clone; Developer behavior; Empirical studies; Software clones, Computer software maintenance; Maintenance; Program debugging; Reverse engineering, Cloning},
  language                = {English},
  references              = {Andersson, C., A replicated empirical study of a selection method for software reliability growth models (2007) Empirical Softw. Engg, 12 (2), pp. 161-182. , Apr; Aversano, L., Cerulo, L., Di Penta, M., How clones are maintained: An empirical study (2007) 11th European Conference on Software Maintenance and Reengineering, pp. 81-90; Bettenburg, N., Shang, W., Ibrahim, W., Adams, B., Zou, Y., Hassan, A.E., An empirical study on inconsistent changes to code clones at release level (2009) Proceedings of the 2009 16th Working Conference on Reverse Engineering, pp. 85-94. , Washington, DC, USA IEEE Computer Society; Chatterji, D., Carver, J., Massengil, B., Oslin, J., Kraft, N., Measuring the efficacy of code clone information in a bug localization task: An empirical study (2011) International Symposium on Empirical Software Engineering and Measurement, pp. 20-29; Cordy, J.R., Dean, T.R., Synytskyy, N., Practical languageindependent detection of near-miss clones (2004) Proceedings of the 2004 Conference of the Centre for Advanced Studies on Collaborative Research, pp. 1-12. , IBM Press; Geiger, R., Fluri, B., Gall, H.C., Pinzger, M., Relation of code clones and change couplings (2006) Proceedings of the 9th International Conference on Fundamental Approaches to Software Engineering, pp. 411-425. , Berlin, Heidelberg: Springer-Verlag; Harder, J., Tiarks, R., A controlled experiment on software clones (2012) 20th IEEE International Conference on Program Comprehension, pp. 219-228; Harder, J., Gde, N., Cloned code: Stable code (2012) Journal of Software: Evolution and Process, pp. n/a-n/a. , http://dx.doi.org/10.1002/smr.1551; Hart, S.G., Staveland, L.E., (1988) Development of Nasa-tlx (Task Load Index): Results of Empirical and Theoretical Research, , Hancock, P. and Meshkati, N. eds. Human Mental Workload North-Holland Elsevier Science; Juergens, E., Deissenboeck, F., Hummel, B., Wagner, S., Do code clones matter? (2009) Proceedings of the 31st International Conference on Software Engineering, pp. 485-495. , Washington, DC, USA IEEE Computer Society; Juristo, N., Vegas, S., Using differences among replications of software engineering experiments to gain knowledge (2009) Proceedings of the 2009 3rd International Symposium on Empirical Software Engineering and Measurement, pp. 356-366. , Washington, DC, USA IEEE Computer Society; Kapser, C.J., Godfrey, M.W., Cloning considered harmful considered harmful: Patterns of cloning in software (2008) Empirical Softw. Engg, 13 (6), pp. 645-692. , Dec; Kim, M., Bergman, L., Lau, T., Notkin, D., An ethnographic study of copy and paste programming practices in oopl (2004) Proc. 2004 Int. Symposium on Empirical Software Engg, pp. 83-92; Kitchenham, B., The role of replications in empirical software engineering-A word of warning (2008) Empirical Softw. Engg, 13 (2), pp. 219-221. , Apr; Krinke, J., A study of consistent and inconsistent changes to code clones (2007) Proceedings of the 14th Working Conference on Reverse Engineering, pp. 170-178. , Washington, DC, USA IEEE Computer Society; Is cloned code older than non-cloned code? (2011) Proceedings of the 5th International Workshop on Software Clones, pp. 28-33. , New York, NY, USA ACM; Lung, J., Aranda, J., Easterbrook, S.M., Wilson, G.V., On the difficulty of replicating human subjects studies in software engineering (2008) Proceedings of the 30th International Conference on Software Engineering, pp. 191-200. , New York, NY, USA ACM; Mondal, M., Roy, C.K., Rahman, M.S., Saha, R.K., Krinke, J., Schneider, K.A., Comparative stability of cloned and non-cloned code: An empirical study (2012) Proceedings of the 27th Annual ACM Symposium on Applied Computing, pp. 1227-1234. , New York, NY, USA: ACM; Monden, A., Nakae, D., Kamiya, T., Sato, S., Matsumoto, K.-I., Software quality analysis by code clones in industrial legacy software (2002) Proceedings of the 8th IEEE Symposium on Software Metrics, pp. 87-94; Rahman, F., Bird, C., Devanbu, P., Clones: What is that smell? (2010) 7th IEEE Working Conference on Mining Software Repositories, pp. 72-81; Shull, F., Basili, V., Carver, J., Maldonado, J.C., Travassos, G.H., Mendona, M., Fabbri, S., Replicating software engineering experiments: Addressing the tacit knowledge problem (2002) Proceedings of the 2002 International Symposium on Empirical Software Engineering, p. 7. , Washington, DC, USA IEEE Computer Society; Shull, F.J., Carver, J.C., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empirical Softw. Engg, 13 (2), pp. 211-218. , Apr; Thummalapenta, S., Cerulo, L., Aversano, L., Di Penta, M., An empirical study on the maintenance of source code clones (2010) Empirical Softw. Engg, 15 (1), pp. 1-34. , Feb},
  review                  = {{E C6 C4}},
  source                  = {Scopus},
  sponsors                = {The Reengineering Forum; Technical Council on Software Engineering (TCSE)},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893357565&doi=10.1109%2fWCRE.2013.6671286&partnerID=40&md5=f4eaabdc55ef6926164b225128f007eb},
}

@Conference{Donadelli2015,
  author              = {Donadelli, S.M. and Zhu, Y.C. and Rigby, P.C.},
  title               = {Organizational volatility and post-release defects: A replication case study using data from Google Chrome},
  year                = {2015},
  volume              = {2015-August},
  pages               = {391-395},
  publisher           = {IEEE Computer Society},
  note                = {cited By 1; Conference of 12th Working Conference on Mining Software Repositories, MSR 2015 ; Conference Date: 16 May 2015 Through 17 May 2015; Conference Code:117060},
  abbrev_source_title = {IEEE Int. Working Conf. Min Softw. Repos.},
  abstract            = {The quality of software projects is affected by developer turnover. Mockus studied organizational volatility in the context a large switching software project at Avaya. We replicate his model of the impact of organizational volatility on post-release defects. At the time of Mockus's study, Avaya was experimenting with outsourcing and layoffs were prevalent. In contrast, we study volatility on the Chrome web-browser, which is growing rapidly in terms of popularity and team size. Where possible, we use the same factors as Mockus: the number of co-owners, the number of developers joining and leaving the organization, the number of co-changing directories, developer experience and, instead of LOCs, the churn. Our investigation is conducted at the directory instead of the file level. The control variables, including churn, number of co-owners, and expertise all conform with the consensus in the literature that more changes, more co-owners, and lower expertise lead to an increase in customer reported post-release defects. After normalizing by the highly correlated number of co-owners, the number of developers who leave and join both reduce the number of post-release defects. We discuss this unexpected result. © 2015 IEEE.},
  affiliation         = {Department of Computer Science and Software Engineering, Concordia University, Montreal, QC, Canada},
  art_number          = {7180101},
  author_keywords     = {Replication; Software quality; Turnover},
  document_type       = {Conference Paper},
  doi                 = {10.1109/MSR.2015.47},
  isbn                = {9780769555942},
  issn                = {21601852},
  journal             = {IEEE International Working Conference on Mining Software Repositories},
  keywords            = {Computer software selection and evaluation, Control variable; File levels; Highly-correlated; Quality of softwares; Replication; Software project; Software Quality; Turnover, Defects},
  language            = {English},
  references          = {Bird, C., Nagappan, N., Murphy, B., Gall, H., Devanbu, P., Don't touch my code!: Examining the effects of ownership on software quality (2011) Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, pp. 4-14. , New York, NY, USA. ACM; Canfora, G., Di Penta, M., Oliveto, R., Panichella, S., Who is going to mentor newcomers in open source projects? (2012) Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, pp. 441-4411. , ACM; Cataldo, M., Mockus, A., Roberts, J., Herbsleb, J., Software dependencies, work dependencies, and their impact on failures (2009) Software Engineering, IEEE Transactions on, 35 (6), pp. 864-878. , Nov; Cini, M.A., Group newcomers: From disruption to innovation (2001) Group Facilitation, 3 (2001), pp. 3-13; Gall, H., Hajek, K., Jazayeri, M., Detection of logical coupling based on product release history (1998) Software Maintenance, 1998. Proceedings., International Conference on, pp. 190-198. , Nov; Graves, T.L., Karr, A.F., Marron, J.S., Siy, H., Predicting fault incidence using software change history (2000) IEEE Transactions on Software Engineering, 26 (7), pp. 653-661; Mockus, A., Succession: Measuring transfer of code and developer productivity (2009) Software Engineering, 2009. ICSE 2009. IEEE 31st International Conference on, pp. 67-77; Mockus, A., Organizational volatility and its effects on software defects (2010) Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering, FSE '10, pp. 117-126. , New York, NY, USA, ACM; Mockus, A., Weiss, D.M., Predicting risk of software changes (2000) Bell Labs Technical Journal, 5 (2). , April; Mockus, A., Weiss, D.M., Predicting risk of software changes (2000) Bell Labs Technical Journal, 5 (2), pp. 169-180; Nagappan, N., Ball, T., Use of relative code churn measures to predict system defect density (2005) Proceedings of the 27th International Conference on Software Engineering, ICSE '05, pp. 284-292. , New York, NY, USA, ACM; Rahman, M., Rigby, P., Release stabilization on linux and chrome (2015) Software, IEEE, pp. 2-9. , March-April; Shihab, E., Mockus, A., Kamei, Y., Adams, B., Hassan, A.E., Highimpact defects: A study of breakage and surprise defects (2011) Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, pp. 300-310. , New York, NY, USA. ACM; Vuong, Q.H., Likelihood ratio tests for model selection and non-nested hypotheses (1989) Econometrica: Journal of the Econometric Society, pp. 307-333; Zimmermann, T., Premraj, R., Zeller, A., Predicting defects for eclipse (2007) Predictor Models in Software Engineering, 2007. PROMISE'07: ICSE Workshops 2007. International Workshop on, p. 9. , May},
  review              = {{CS C11}},
  source              = {Scopus},
  sponsors            = {Association for Computing Machinery Special Interest Group on Software Engineering (ACM SIGSOFT); IEEE Computer Society Technical Council on Software Engineering (TCSE)},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957100951&doi=10.1109%2fMSR.2015.47&partnerID=40&md5=7b776a7e3e8769ea7fd9be8cfb1a1631},
}

@Article{Engelsman201497,
  author                  = {Engelsman, W. and Wieringa, R.},
  title                   = {Understandability of goal concepts by requirements engineering experts},
  journal                 = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year                    = {2014},
  volume                  = {8823},
  pages                   = {97-106},
  issn                    = {03029743},
  note                    = {cited By 1; Conference of 33rd International Conference on Conceptual Modeling, ER 2014 ; Conference Date: 27 October 2014 Through 29 October 2014; Conference Code:109679},
  abbrev_source_title     = {Lect. Notes Comput. Sci.},
  abstract                = {ARMOR is a graphical language for modeling business goals and enterprise architectures. In previous work we have identified problems with understandability of goal-oriented concepts for practicing enterprise architects. In this paper we replicate the earlier quasi-experiments with experts in requirements engineering, to see if similar problems arise. We found that fewer mistakes were made in this replication than were made in the previous experiment with practitioners, but that the types of mistakes made in all the concepts were similar to the mistakes made in our previous experiments with enterprise architects. The stakeholder concept was used perfectly by our sample, but the goal decomposition relation was not understood. The subjects provided explanations for understandability problems that are similar to our previous hypothesized explanations. By replicating some of our earlier results, this paper provides additional support for the generalizability of our earlier results. © Springer International Publishing Switzerland 2014.},
  affiliation             = {BiZZdesign, Netherlands; University of Twente, Netherlands},
  correspondence_address1 = {Engelsman, W.; BiZZdesignNetherlands},
  document_type           = {Conference Paper},
  editor                  = {Indulska M., Purao S.},
  isbn                    = {9783319122557},
  keywords                = {Data mining; Requirements engineering, Business goals; Enterprise architects; Enterprise Architecture; Goal concept; Goal-oriented; Graphical languages; Quasi-experiments; Understandability, Experiments},
  language                = {English},
  publisher               = {Springer Verlag},
  references              = {Abrahão, S., Insfran, E., Carsì, J.A., Genero, M., Evaluating requirements modeling methods based on user perceptions: A family of experiments (2011) Information Sciences, 181 (16), pp. 3356-3378; Anton, A.I., Goal-based requirements analysis (1996) Proceedings of the Second International Conference on Requirements Engineering, pp. 136-144. , IEEE; Bresciani, P., Perini, A., Giorgini, P., Giunchiglia, F., Mylopoulos, J., Tropos: An agent-oriented software development methodology (2004) Autonomous Agents and Multi- Agent Systems, 8 (3), pp. 203-236; (2007), http://www.omg.org/spec/BMM/1.0/PDF, Business Motivation Model: Business motivation model version 1.0, September 222009Standard documentCaire, P., Genon, N., Moody, D., Visual notation design 2.0: Towards usercomprehensible re notations (2013) Proceedings of the 21St IEEE International Requirements Engineering Conference; Carvallo, J.P., Franch, X., On the use of i* for architecting hybrid systems: A method and an evaluation report (2009) Poem 2009. LNBIP, 39, pp. 38-53. , In: Persson, A., Stirna, J. (eds.), vol, Springer, Heidelberg; Engelsman, W., Quartel, D., Jonkers, H., Van Sinderen, M.J., Extending enterprise architecture modelling with business goals and requirements (2011) Enterprise Information Systems, 5 (1), pp. 9-36; Engelsman, W., Wieringa, R., Understandability of goal-oriented requirements engineering concepts for enterprise architects (2014) Caise 2014. LNCS, 8484, pp. 105-119. , In: Jarke, M., Mylopoulos, J., Quix, C., Rolland, C., Manolopoulos, Y., Mouratidis, H., Horkoff, J. (eds.), vol, Springer, Heidelberg; Engelsman, W., Wieringa, R., Goal-oriented requirements engineering and enterprise architecture: Two case studies and some lessons learned (2012) REFSQ 2011. LNCS, 7195, pp. 306-320. , In: Regnell, B., Damian, D. (eds.), vol, Springer, Heidelberg; Horkoff, J., Yu, E., Evaluating goal achievement in enterprise modeling–an interactive procedure and experiences (2009) Poem 2009. LNBIP, 39, pp. 145-160. , In: Persson, A., Stirna, J. (eds.), vol, Springer, Heidelberg; Houy, C., Fettke, P., Loos, P., Understanding understandability of conceptual models - what are we actually talking about? - supplement (2013) Tech. Rep, , http://scidok.sulb.uni-saarland.de/volltexte/2013/5441, UniversitÃ ts- und Landesbibliothek, Postfach 151141, 66041 SaarbrÃcken; Jureta, I., Faulkner, S., An agent-oriented meta-model for enterprise modelling (2005) ER Workshops 2005. LNCS, 3770, pp. 151-161. , In: Akoka, J., et al. (eds.), vol, Springer, Heidelberg; Matuleviˇcius, R., Heymans, P., Comparing goal modelling languages: An experiment (2007) REFSQ 2007. LNCS, 4542, pp. 18-32. , In: Sawyer, P., Heymans, P. (eds.), vol, Springer, Heidelberg; Moody, D., The “physics” of notations: Toward a scientific basis for constructing visual notations in software engineering (2009) IEEE Transactions on Software Engineering, 35 (6), pp. 756-779; Moody, D.L., Heymans, P., Matulevičius, R., Visual syntax does matter: Improving the cognitive effectiveness of the i* visual notation (2010) Requirements Engineering, 15 (2), pp. 141-175; Stirna, J., Persson, A., Sandkuhl, K., Participative enterprise modeling: Experiences and recommendations (2007) Caise 2007. LNCS, Vol. 4495, pp. 546-560. , In: Krogstie, J., Opdahl, A.L., Sindre, G. (eds.), Springer, Heidelberg; (2009) TOGAF Version 9, , The Open Group, Van Haren Publishing; (2012) Archimate 2.0 Specification, , The Open Group, Van Haren Publishing; Van Lamsweerde, A., From system goals to software architecture (2003) SFM 2003. LNCS, Vol. 2804, pp. 25-43. , In: Bernardo, M., Inverardi, P. (eds.), Springer, Heidelberg; Yu, E., Towards modelling and reasoning support for early-phase requirements engineering (2002) Proceedings of the Third IEEE International Symposium on Requirements Engineering, pp. 226-235. , IEEE Computer Society Press},
  review                  = {{QE C2}},
  source                  = {Scopus},
  sponsors                = {Aalto University; BYU Marriott School of Management; Ceprin; Georgia State University; PennState IST; QUT; Singapore Management University; ZIM},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910666399&partnerID=40&md5=3bed400268e5553b1401293ef4186a87},
}

@Conference{Farooq2013493,
  author                  = {Farooq, S.U. and Quadri, S.M.K. and Ahmad, N.},
  title                   = {A controlled experiment to evaluate effectiveness and efficiency of three software testing methods},
  year                    = {2013},
  pages                   = {493-494},
  address                 = {Luxembourg},
  note                    = {cited By 0; Conference of IEEE 6th International Conference on Software Testing, Verification and Validation, ICST 2013 ; Conference Date: 18 May 2013 Through 20 May 2013; Conference Code:98979},
  abbrev_source_title     = {Proc. - IEEE Int. Conf. Softw. Test., Verif. Validation, ICST},
  abstract                = {In this paper, we describe a controlled experiment carried out to compare three software testing methods: code reading, functional testing and structural testing. The experiment was carried out with eighteen subjects who applied three techniques to three C programs in a fractional factorial experimental design. The main results of the study are that all testing techniques are equivalent in terms of effectiveness; however the techniques differ partially in terms of efficiency. © 2013 IEEE.},
  affiliation             = {Department of Computer Sciences, University of Kashmir, India; Department of Statistics and Computer Application, T.M. Bhagalpur University, Bihar, India},
  art_number              = {6569770},
  author_keywords         = {Code reading; empirical study; functional testing; replication; structural testing},
  correspondence_address1 = {Department of Computer Sciences, University of KashmirIndia},
  document_type           = {Conference Paper},
  doi                     = {10.1109/ICST.2013.66},
  journal                 = {Proceedings - IEEE 6th International Conference on Software Testing, Verification and Validation, ICST 2013},
  keywords                = {Code reading; Empirical studies; Functional testing; replication; Structural testing, Experiments; Testing, Software testing},
  language                = {English},
  references              = {Basili, V., Selby Jr., R., Hutchens, D., (1985) Experimentation in Software Engineering, , Technical report DTIC Document; Rombach, H., Basili, V., Selby, R., (1993) Experimental Software Engineering Issues: Critical Assessment and Future Directions: International Workshop, 706. , Dagstuhl Castle, Germany September 14-18 1992: proceedings Springer; Basili, V.R., The role of controlled experiments in software engineering research (2007) Lecture Notes in Computer Science, 4336, pp. 33-37. , Empirical Software Engineering Issues. Critical Assessment and Future Directions; Juristo, N., Moreno, A.M., Vegas, S., Reviewing 25 years of testing technique experiments (2004) Empirical Softw. Eng. J, 9 (1-2), pp. 7-44. , March; Moreno, A.M., Shull, F., Juristo, N., Vegas, S., A look at 25 years of data (2009) IEEE Software, 26 (1), pp. 15-17; Kamsties, E., Lott, C., An empirical evaluation of three defectdetection techniques (1995) Software Engineering ESEC'95, pp. 362-383; Basili, V., Selby, R., Comparing the effectiveness of software testing strategies (1987) Software Engineering, IEEE Transactions on, 12, pp. 1278-1296; Roper, M., Wood, M., Miller, J., An empirical evaluation of defect detection techniques (1997) Information and Software Technology, 39 (11), pp. 763-775; Juristo, N., Vegas, S., Functional testing structural testing and code reading: What fault type do they each detect? (2003) Empirical Methods and Studies in Software Engineering, pp. 208-232; Lott, C., Rombach, H., Repeatable software engineering experiments for comparing defect-detection techniques (1996) Empirical Software Engineering, 1 (3), pp. 241-277; Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) International Workshop on Replication in Empirical Software Engineering Research, , Cape Town, South Africa},
  review                  = {{E C11 C5}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883385128&doi=10.1109%2fICST.2013.66&partnerID=40&md5=4bbb897fdfc974f7bfddc47ee8019922},
}

@Conference{Farooq201372,
  author                  = {Farooq, S.U. and Quadri, S.M.K.},
  title                   = {An externally replicated experiment to evaluate software testing methods},
  year                    = {2013},
  pages                   = {72-77},
  address                 = {Porto de Galinhas},
  note                    = {cited By 0; Conference of 17th International Conference on Evaluation and Assessment in Software Engineering, EASE 2013 ; Conference Date: 14 April 2013 Through 16 April 2013; Conference Code:96818},
  abbrev_source_title     = {ACM Int. Conf. Proc. Ser.},
  abstract                = {Context: Many empirical studies have been carried out to evaluate software testing methods in the past decades. However, we are still not able to generalize the results, as most studies are not complete and differ significantly from one another. Objective: To contribute to the existing knowledge base of testing techniques by evaluating three software testing methods a) code reading by stepwise abstraction, b) functional testing using equivalence partitioning and boundary value analysis, and c) structural testing using 100% branch, multiple-condition, loop, and relational-operator coverage using a well-defined and standard schema. Method: A controlled experiment was carried out with eighteen subjects who applied three techniques to three C programs in a fractional factorial experimental design. Results: There is no difference in techniques in terms of failure observation and fault finding effectiveness and the effectiveness depends on the program rather than technique. In case of failure observation efficiency, all the techniques performed equally; however, in terms of fault isolation efficiency, code reading performed better than structural testing which in turn out performed functional testing. With respect to the fault types, all techniques performed equally except in case of cosmetic faults where functional testing performed better than other two testing methods. Conclusion: We conclude that all techniques are all equivalent in terms of effectiveness. However, the techniques differ partially in terms of efficiency. The effect of the program was significant in almost all cases. We need to build some standardized and better laboratory packages which should represent actual software engineering practices. Carry out experiments on such packages will help in deriving realistic results. Copyright 2013 ACM.},
  affiliation             = {Department of Computer Science, University of Kashmir, India},
  author_keywords         = {Comparison of testing methods; Evaluation; Experiment; Replication},
  comment                 = {Quitae este o el anterior. Los 2 tiene 18 subjetcts},
  correspondence_address1 = {Department of Computer Science, University of KashmirIndia},
  document_type           = {Conference Paper},
  doi                     = {10.1145/2460999.2461009},
  isbn                    = {9781450318488},
  journal                 = {ACM International Conference Proceeding Series},
  keywords                = {Boundary value analysis; Controlled experiment; Evaluation; Fractional factorial experimental design; Replicated experiment; Replication; Software engineering practices; Testing method, Efficiency; Experiments; Knowledge based systems; Software engineering; Testing, Software testing},
  language                = {English},
  references              = {Basili, V., Selby Jr., R., Hutchens, D., (1985) Experimentation in Software Engineering, , Technical report, DTIC Document; Rombach, H., Basili, V., Selby, R., (1993) Experimental Software Engineering Issues: Critical Assessment and Future Directions: International Workshop, 706. , Dagstuhl Castle, Germany, September 14-18, 1992: proceedings Springer; Basili, V., The role of controlled experiments in software engineering research (2007) Empirical Software Engineering Issues. Critical Assessment and Future Directions, Lecture Notes in Computer Science, 4336, pp. 33-37; Briand, L.C., A critical analysis of empirical research in software testing (2007) First International Symposium on Empirical Software Engineering and Measurement, , ESEM 2007; Juristo, N., Moreno, A.M., Vegas, S., Reviewing 25 years of testing technique experiments (2004) Empirical Softw. Eng. J., 9 (1-2), pp. 7-44. , March; Moreno, A.M., Shull, F., Juristo, N., Vegas, S., A look at 25 years of data (2009) IEEE Software, 26 (1), pp. 15-17; Shull, F., (2008) Guide to Advanced Empirical Software Engineering, , © Springer; Lung, J., On the difficulty of replicating human subjects studies in software engineering (2008) ACM/IEEE 30th International Conference on Software Engineering, , ICSE '08; Lott, C., Rombach, H., Repeatable software engineering experiments for comparing defect-detection techniques (1996) Empirical Software Engineering, 1 (3), pp. 241-277; Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) International Workshop on Replication in Empirical Software Engineering Research, , Cape Town, South Africa; Hetzel, W., (1976) An Experimental Analysis of Program Verification Methods; Myers, G., A controlled experiment in program testing and code walkthroughs/ inspections (1978) Communications of the ACM, 21 (9), pp. 760-768; Basili, V., Selby, R., Comparing the effectiveness of software testing strategies (1987) Software Engineering, (12), pp. 1278-1296. , IEEE Transactions on; Kamsties, E., Lott, C., An empirical evaluation of three defect-detection techniques (1995) Software Engineering ESEC'95, pp. 362-383; Roper, M., Wood, M., Miller, J., An empirical evaluation of defect detection techniques (1997) Information and Software Technology, 39 (11), pp. 763-775; Juristo, N., Vegas, S., Functional testing, structural testing and code reading: What fault type do they each detect? (2003) Empirical Methods and Studies in Software Engineering, pp. 208-232; Juristo, N., Comparing the effectiveness of equivalence partitioning, branch testing and code reading by stepwise abstraction applied by subjects (2012) Software Testing, Verification and Validation (ICST), , 2012 IEEE Fifth International Conference on. IEEE},
  review                  = {{E C11 C5}},
  source                  = {Scopus},
  sponsors                = {Centro de Informatica - UFPE; Universidade Federal de Pernambuco; CAPES; Fund. Amparo Cienc. Tecnol. Estado Pernambuco (FACEPE); Cons. Nac. Desenvolv. Cient. Tecnol. (CNPq)},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877262425&doi=10.1145%2f2460999.2461009&partnerID=40&md5=141926f88cfbc2c97f682ce73d4cdf53},
}

@Article{Felderer20151,
  author                  = {Felderer, M. and Herrmann, A.},
  title                   = {Manual test case derivation from UML activity diagrams and state machines: A controlled experiment},
  journal                 = {Information and Software Technology},
  year                    = {2015},
  volume                  = {61},
  pages                   = {1-15},
  issn                    = {09505849},
  note                    = {cited By 4},
  abbrev_source_title     = {Inf Software Technol},
  abstract                = {Context It is a difficult and challenging task to fully automatize model-based testing because this demands complete and unambiguous system models as input. Therefore, in practice, test cases, especially on the system level, are still derived manually from behavioral models like UML activity diagrams or state machines. But this kind of manual test case derivation is error-prone and knowing these errors makes it possible to provide guidelines to reduce them. Objective The objective of the study presented in this paper therefore is to examine which errors are possible and actually made when manually deriving test cases from UML activity diagrams or state machines and whether there are differences between these diagram types. Method We investigate the errors made when deriving test cases manually in a controlled student experiment. The experiment was performed and internally replicated with overall 84 participants divided into three groups at two institutions. Results As a result of our experiment, we provide a taxonomy of errors made and their frequencies. In addition, our experiment provides evidence that activity diagrams have a higher perceived comprehensibility but also a higher error-proneness than state machines with regard to manual test case derivation. This information helps to develop guidelines for manual test case derivation from UML activity diagrams and state machines. Conclusion Most errors observed were due to missing test steps, conditions or results, or content was written into the wrong field. As activity diagrams have a higher perceived comprehensibility, but also more error-prone than state machines, both diagram types are useful for manual test case derivation. Their application depends on the context and should be complemented with clear rules on how to derive test cases. © 2015 Elsevier B.V. All rights reserved.},
  affiliation             = {University of Innsbruck, Technikerstr. 21a, Innsbruck, Austria; Herrmann and Ehrlich, Daimlerstr. 121, Stuttgart, Germany},
  author_keywords         = {Controlled experiment; Model-based testing; System testing; Test design},
  coden                   = {ISOTE},
  correspondence_address1 = {Felderer, M.; University of Innsbruck, Technikerstr. 21a, Austria},
  document_type           = {Article},
  doi                     = {10.1016/j.infsof.2014.12.005},
  keywords                = {Errors; Graphic methods; Model checking, Activity diagram; Behavioral model; Controlled experiment; Model based testing; Student experiments; System testing; Test designs; UML activity diagrams, Testing},
  language                = {English},
  publisher               = {Elsevier},
  references              = {Utting, M., Pretschner, A., Legeard, B., A taxonomy of model-based testing approaches (2012) Softw. Test. Verif. Rel., 22 (5), pp. 297-312; Zander, J., Schieferdecker, I., Mosterman, P., (2011) Model-Based Testing for Embedded Systems, , CRC Press; Utting, M., Legeard, B., (2010) Practical Model-based Testing: A Tools Approach, , Morgan Kaufmann; Pohl, K., Rupp, C., (2011) Requirements Engineering Fundamentals: A Study Guide for the Certified Professional for Requirements Engineering Exam-foundation Level-IREB Compliant, , O'Reilly; Briand, L., Labiche, Y., A UML-based approach to system testing (2002) Softw. Syst. Model., 1 (1), pp. 10-42; Pretschner, A., Prenninger, W., Wagner, S., Kühnel, C., Baumgartner, M., Sostawa, B., Zölch, R., Stauner, T., One evaluation of model-based testing and its automation (2005) Proceedings of the 27th International Conference on Software Engineering. ACM; Felderer, M., Beer, A., Peischl, B., On the role of defect taxonomy types for testing requirements: Results of a controlled experiment (2014) Euromicro SEAA 2014, IEEE; Mendonça, M.G., Maldonado, J.C., De Oliveira, M.C.F., Carver, J., Fabbri, S.C.P.F., Shull, F., Travassos, G.H., Basili, V.R., A framework for software engineering experimental replications (2008) 13th IEEE International Conference on Engineering of Complex Computer Systems (ICECCS 2008), pp. 203-212; Jedlitschka, A., Ciolkowski, M., Pfahl, D., Reporting experiments in software engineering (2008) Guide to Advanced Empirical Software Engineering, , F. Shull, Janice Singer, Dag I.K. Sjøberg, Springer; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M.C., Regnell, B., Wesslén, A., (2012) Experimentation in Software Engineering, , Springer; Budgen, D., Burn, A.J., Pearl Brereton, O., Kitchenham, B.A., Pretorius, R., Empirical evidence about the UML: A systematic literature review (2011) Softw.: Pract. Exp., 41 (4), pp. 363-392. , 2011; Sun, D., Wong, K., On evaluating the layout of UML class diagrams for program comprehension (2005) 13th International Workshop on Program Comprehension (IWPC 2005), , IEEE; Purchase, H.C., Colpoys, L., McGill, M., Carrington, D., Britton, C., UML class diagram syntax: An empirical study of comprehension (2001) Proceedings of the 2001 Asia-Pacific Symposium on Information Visualisation-Volume 9; Glezer, C., Last, M., Nachmany, E., Shoval, P., Quality and comprehension of UML interaction diagrams-an experimental comparison (2005) Inf. Softw. Technol., 47 (10), pp. 675-692; Otero, M.C., Dolado, J.J., Evaluation of the comprehension of the dynamic modeling in UML (2004) Inf. Softw. Technol., 46 (1), pp. 35-53; Briand, L.C., Labiche, Y., Di Penta, M., Yan-Bondoc, H., An experimental investigation of formality in UML-based development (2005) IEEE Trans. Softw. Eng., 31 (10), pp. 833-849; Nugroho, A., Level of detail in UML models and its impact on model comprehension: A controlled experiment (2009) Inf. Softw. Technol., 51 (12), pp. 1670-1685; Staron, M., Kuzniarz, L., Wohlin, C., Empirical assessment of using stereotypes to improve comprehension of UML models: A set of experiments (2006) J. Syst. Softw., 79 (5), pp. 727-742; Ricca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M., How developers' experience and ability influence web application comprehension tasks supported by UML stereotypes: A series of four experiments (2010) IEEE Trans. Softw. Eng., 36 (1), pp. 96-118; Cruz-Lemus, J.A., Genero, M., Caivano, D., Abrahão, S., Insfrán, E., Carsí, J.A., Assessing the influence of stereotypes on the comprehension of UML sequence diagrams: A family of experiments (2011) Inf. Softw. Technol., 53 (12), pp. 1391-1403; De Lucia, A., Gravino, C., Oliveto, R., Tortora, G., An experimental comparison of ER and UML class diagrams for data modelling (2010) Empirical Softw. Eng., 15 (5), pp. 455-492; Fernández-Sáez, A.M., Genero, M., Chaudron, M.R.V., Empirical studies concerning the maintenance of UML diagrams and their use in the maintenance of code: A systematic mapping study (2013) Inf. Softw. Technol., 55 (7), pp. 1119-1142; Abrahão, S., Gravino, C., Insfrán, E., Scanniello, G., Tortora, G., Assessing the effectiveness of sequence diagrams in the comprehension of functional requirements: Results from a family of five experiments (2013) IEEE Trans. Software Eng., 39 (3), pp. 327-342; Aranda, J., Ernst, N., Horkoff, J., Easterbrook, S., A framework for empirical evaluation of model comprehensibility (2007) International Workshop on Modeling in Software Engineering (MiSE-07); Juristo, N., Moreno, A.M., Vegas, S., Reviewing 25 years of testing technique experiments (2004) Empirical Softw. Eng., 9 (12), pp. 7-44; Runeson, P., Andersson, C., Thelin, T., Andrews, A., Berling, T., What do we know about defect detection methods? (2006) IEEE Softw., 23 (3), pp. 82-90; Nugroho, A., Chaudron, M.R.V., The impact of UML modeling on defect density and defect resolution time in a proprietary system (2014) Empirical Softw. Eng., 19 (4), pp. 926-954; Nugroho, A., Chaudron, M.R.V., Evaluating the impact of UML modeling on software quality: An industrial case study (2009) MoDELS, 181-195, p. 2009; Hartmann, J., Vieira, M., Foster, H., Ruder, A., A UML-based approach to system testing (2005) Innovations Syst. Softw. Eng., 1 (1224), p. 2005; Kundu, D., Samanta, D., A novel approach to generate test cases from UML activity diagrams (2009) J. Obj. Technol., 8 (3), pp. 65-83; Linzhang, W., Jiesong, Y., Xiaofeng, Y., Jun, H., Xuandong, L., Guoliang, Z., Generating test cases from UML activity diagram based on gray-box method (2004) 11th Asia-Pacific Software Engineering Conference; Mingsong, C., Xiaokang, Q., Xuandong, L., Automatic test case generation for UML activity diagrams (2006) International Workshop on Automation of Software Test (AST 06); Mingsong, C., Xioakang, Q., Wei, X., Linzhang, W., Jianhua, Z., Xuandong, L., UML activity diagram-based automatic test case generation for java programs (2009) Comput. J., 52 (5), pp. 545-556; Offutt, J., Abdurazik, A., (1999) Generating Tests from UML Specifications, , UML99, LNCS 1723; Weißleder, S., Sokenou, D., Automatic Test Case Generation from UML Models and OCL Expressions (2008) Software Engineering (Workshops); Kim, Y.G., Hong, H.S., Bae, D.-H., Cha, S.D., Test cases generation from UML state machines (1999) IEEE Softw., 146 (4), pp. 187-192; Riebisch, M., Philippow, I., Götze, M., UML-based statistical test case generation (2003) Objects, Components, Architectures, Services, and Applications for A Networked World. LNCS 2591; Kansomkeat, S., Rivepiboon, W., Automated-generating test case using UML statechart diagrams (2003) SAICSIT '03; Samuel, P., Mall, R., Bothra, A.K., Automatic test case generation using unified modeling language (UML) state machines (2008) IET Software, 2 (2), pp. 79-93; Kim, H., Kang, S., Baik, J., Ko, I., Test cases generation from UML activity diagrams (2007) Eighth ACIS International Conference on Software Engineering, Artificial Intelligence, Networking, and Parallel/distributed Computing; Crawley, M.J., (2012) The R Book, , Wiley; Ammann, P., Offutt, J., (2008) Introduction to Software Testing, , Cambridge University Press; Standard Glossary of Terms Used in Software Testing, , ISTQB Version 2.2, 2012; McCabe, T.J., A complexity measure (1976) IEEE Trans. Software Eng., 2 (4), pp. 308-320; Felderer, M., Beer, A., Using defect taxonomies to improve the maturity of the system test process: Results from an industrial case study (2013) Software Quality. Increasing Value in Software and Systems Development; Kirk, R.E., (1995) Experimental Design. Procedures for the Behavioural Sciences, , Brooks/Cole Publishing Company; Reggio, G., Ricca, F., Scanniello, G., Di Cerbo, F., Dodero, G., A precise style for business process modelling: Results from two controlled experiments (2011) MoDELS; Tichy, W.F., Hints for reviewing empirical work in software engineering (2000) Empirical Softw. Eng., 5 (4), pp. 309-312},
  review                  = {{E C5 C2}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924730378&doi=10.1016%2fj.infsof.2014.12.005&partnerID=40&md5=234e3b041ae793b056b06ec5778b60be},
}

@Article{Felizardo2015909,
  author              = {Felizardo, K.R. and Barbosa, E.F. and Martins, R.M. and Valle, P.H.D. and Maldonado, J.C.},
  title               = {Visual Text Mining: Ensuring the Presence of Relevant Studies in Systematic Literature Reviews},
  journal             = {International Journal of Software Engineering and Knowledge Engineering},
  year                = {2015},
  volume              = {25},
  number              = {5},
  pages               = {909-928},
  issn                = {02181940},
  note                = {cited By 1},
  abbrev_source_title = {Int. J. Software Engineer. Knowledge Engineer.},
  abstract            = {One of the activities associated with the Systematic Literature Review (SLR) process is the selection review of primary studies. When the researcher faces large volumes of primary studies to be analyzed, the process used to select studies can be arduous. In a previous experiment, we conducted a pilot test to compare the performance and accuracy of PhD students in conducting the selection review activity manually and using Visual Text Mining (VTM) techniques. The goal of this paper is to describe a replication study involving PhD and Master students. The replication study uses the same experimental design and materials of the original experiment. This study also aims to investigate whether the researcher's level of experience with conducting SLRs and research in general impacts the outcome of the primary study selection step of the SLR process. The replication results have confirmed the outcomes of the original experiment, i.e., VTM is promising and can improve the performance of the selection review of primary studies. We also observed that both accuracy and performance increase in function of the researcher's experience level in conducting SLRs. The use of VTM can indeed be beneficial during the selection review activity. © 2015 World Scientific Publishing Company.},
  affiliation         = {Department of Computer Systems, Federal Technological University of Parana, UTFPR/CP, Avenida Alberto Carazzai 1640, Cornelio Procopio-PR, Brazil; Department of Computer Systems, University of Sao Paulo, ICMC/USP, Avenida Trabalhador Sao-carlense 400, Sao Carlos-SP, Brazil},
  author_keywords     = {Systematic literature review; visual text mining},
  coden               = {ISEKE},
  document_type       = {Article},
  doi                 = {10.1142/S0218194015500114},
  keywords            = {Design of experiments, Large volumes; Master students; Replication study; Review activities; Systematic literature review; Systematic literature review (SLR); Text mining; Visual text minings (VTM), Data mining},
  language            = {English},
  publisher           = {World Scientific Publishing Co. Pte Ltd},
  references          = {Kitchenham, B.A., Charters, S., (2007) Guidelines for Performing Systematic Literature Reviews in Software Engineering, , Technical Report EBSE 2007-001, Keele University and Durham University, UK; Kitchenham, B.A., (2004) Procedures for Performing Systematic Reviews, , Joint Technical Report TR/SE-0401 (Keele) 0400011T.1 (NICTA) Software Engineering Group Department of Computer Science Keele University and Empirical Software Engineering National ICT Australia Ltd; Zhang, H., Muhammad, A.B., Systematic reviews in software engineering: An empirical investigation (2012) Information and Software Technology; Lopes, A.A., Pinho, R., Paulovich, F.V., Minghim, R., Visual text mining using association rules (2007) Computers and Graphics, 31 (3), pp. 316-326; De Oliveira, M.C.F., Levkowitz, H., From visual data exploration to visual data mining: A surveym (2003) IEEE Transactions on Visualization and Computer Graphics, 9 (3), pp. 378-394; Keim, D.A., Mansmann, F., Schneidewind, J., Ziegler, H., Challenges in visual data analysis (2006) IV Conference on Information Visualization, pp. 9-16; Tan, P.-N., Steinbach, M., Kumar, V., (2005) Introduction to Data Mining, , (Addison-Wesley; Felizardo, K.R., Andery, G.F., Paulovich, F.V., Minghim, R., Maldonado, J.C., A visual analysis approach to validate the selection review of primary studies in systematic reviews (2012) Information and Software Technology, 54 (10), pp. 1079-1091; Juristo, N., Gomez, O.S., Replication of software engineering experiments (2010) LASER Summer School, LNCS, 7007, pp. 60-88; Juristo, N., Vegas, S., Using di® erences among replications of software engineering experiments to gain knowledge (2009) 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), pp. 356-366; Felizardo, K.R., Barbosa, E.F., Maldonado, J.C., A visual approach to validate the selection review of primary studies in systematic reviews: A replication study (2013) XXV International Conference on Software Engineering & Knowledge Engineering, pp. 141-146; Felizardo, K.R., Salleh, N., Martins, R.M., Mendes, E., MacDonell, S.G., Maldonado, J.C., Using visual text mining to support the study selection activity in systematic literature reviews (2011) 5th International Symposium on Empirical Software Engineering and Measurement, pp. 1-10; Paulovich, F.V., Minghim, R., Text map explorer: A tool to create and explore document maps (2006) X International Conference on Information Visualisation, pp. 245-251; Hollander, M., Wolfe, D.A., (1999) Nonparametric Statistical Methods, , (Wiley-Interscience; Keim, D.A., Information visualization and visual data mining (2002) IEEE Transactions on Visualization and Computer Graphics, 8 (1), pp. 1-8; Brereton, P.O., Kitchenham, B.A., Budgen, D., Turner, M., Khalil, M., Lessons from applying the systematic literature review process within the software engineering domain (2007) Journal of Systems and Software, 80 (4), pp. 571-583; Brereton, P., A study of computing undergraduates undertaking a systematic literature review (2011) IEEE Transactions on Education, 54 (4), pp. 558-563; Peinemann, F., Mcgauran, N., Sauerland, S., Lange, S., Disagreement in primary study selection between systematic reviews on negative pressure wound therapy (2008) BMC Medical Research Methodology, 8, p. 16; Riaz, M., Sulayman, N., Salleh, M., Mendes, E., Experiences conducting systematic reviews from novices' perspective (2010) 14th International Conference on Evaluation and Assessment in Software Engineering, pp. 1-10; Petersen, K., Feldt, R., Mujtaba, S., Mattsson, M., Systematic mapping studies in software engineering (2008) 12th International Conference on Evaluation and Assessment in Software Engineering, pp. 1-10; Petersen, K., Nauman, B.A., Identifying strategies for study selection in systematic reviews and maps (2011) 5th International Symposium on Empirical Software Engineering and Measurement, pp. 1-10; Malheiros, V., Hohn, E., Pinho, R., Mendonca, M., Maldonado, J.C., A visual text mining approach for systematic reviews (2007) 1st International Symposium on Empirical Software Engineering and Measurement, pp. 245-254; MacDonell, S.G., Shepperd, M.J., Comparing local and global software e® ort estimation models re°ections on a systematic review (2007) International Symposium on Empirical Software Engineering and Measurement, pp. 401-409; MacDonell, S., Shepperd, M., Kitchenham, B.A., Mendes, E., How reliable are systematic reviews in empirical software engineering (2010) IEEE Transactions on Software Engineering, 36 (5), pp. 676-687; Shull, F., Carver, J., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empirical Software Engineering, 13 (1), pp. 211-218},
  review              = {{E C12}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942605231&doi=10.1142%2fS0218194015500114&partnerID=40&md5=1fd334ede18f3621b47951272697671d},
}

@Conference{Felizardo201391,
  author              = {Felizardo, K.R. and Souza, S.R.S. and Maldonado, J.C.},
  title               = {The use of visual text mining to support the study selection activity in systematic literature reviews: A replication study},
  year                = {2013},
  pages               = {91-100},
  address             = {Baltimore, MD},
  publisher           = {IEEE Computer Society},
  note                = {cited By 3; Conference of 2013 3rd International Workshop on Replication in Empirical Software Engineering Research, RESER 2013 ; Conference Date: 9 October 2013 Through 9 October 2013; Conference Code:101995},
  abbrev_source_title = {Proc. - Int. Workshop Replication Empir. Softw. Eng. Res., RESER},
  abstract            = {Background: Systematic literature reviews (SLRs)are an important component to identify and aggregate research evidence from different empirical studies. One of the activities associated with the SLR process is the selection of primary studies. The process used to select primary studies can be arduous, particularly when the researcher faces large volumes of primary studies. Aim: An experiment was conducted as a pilot test to compare the performance and effectiveness of graduate students in selecting primary studies manually and using visual text mining (VTM) techniques. This paper describes a replication study. Method: The same experimental design and materials of the previous experiment were used in the current experiment. Result: The previous experiment revealed that VTM techniques can speed up the selection of primary studies and increase the number of studies correctly included/excluded (effectiveness). The results of the replication confirmed that studies are more rapidly selected using VTM. We observed that the level of experience in researching has a direct relationship with the effectiveness. Conclusion: VTM techniques have proven valuable in the selection of primary studies. © 2013 IEEE.},
  affiliation         = {Comp. Systems Department, University of São Paulo, São Carlos, SP, Brazil},
  art_number          = {6664736},
  author_keywords     = {Controlled Experiment; Experimental Replication; Laboratory Package; Systematic Literature Review; Visual Text Mining},
  document_type       = {Conference Paper},
  doi                 = {10.1109/RESER.2013.9},
  isbn                = {9780769551210},
  journal             = {Proceedings - 2013 3rd International Workshop on Replication in Empirical Software Engineering Research, RESER 2013},
  keywords            = {Data mining; Software engineering; Students, Controlled experiment; Experimental replications; Graduate students; Replication study; Study selection activities; Systematic literature review; Text mining; Visual text minings (VTM), Experiments},
  language            = {English},
  references          = {Ananiadou, S., Rea, B., Okazaki, N., Procter, R., Thomas, J., Supporting systematic reviews using text mining (2009) Social Science Computer Review, 27 (4), pp. 509-523; Brereton, P., A study of computing undergraduates undertaking a systematic literature review (2011) IEEE Transactions on Education, 54 (4), pp. 558-563; De Oliveira, M., Levkowitz, H., From visual data exploration to visual data mining: A survey (2003) IEEE Transactions on Visualization and Computer Graphics, 9 (3), pp. 378-394. , ISSN 1077-2626; El Emam, K., Jonker, E., Sampson, M., Krleza-Jeric, K., Neisa, A., The use of electronic data capture tools in clinical trials: Web-survey of 259 canadian trials (2009) Journal of Medical Internet Research, 11 (1), pp. 1-8; Felizardo, K., Nakwgawa, E., Feitosa, D., Minghim, R., Maldonado, J., An approach based on visual text mining to support categorization and classification in the systematic mapping (2010) 14th International Conference on Evaluation and Assessment in Software Engineering (EASE), pp. 1-10. , BCS-eWiC; Felizardo, K., Salleh, N., Martins, R., Mendes, E., MacDonell, S., Maldonado, J., Using visual text mining to support the study selection activity in systematic literature reviews (2011) 5th International Symposium on Empirical Software Engineering and Measurement (ESEM), pp. 1-10. , ACM; Juristo, N., Gomez, O., Replication of software engineering experiments (2010) Lecture Notes in Computer Science, 7007, pp. 60-88. , LASER Summer School, Springer; Keim, D., Information visualization and visual data mining (2002) IEEE Transactions on Visualization and Computer Graphics, 8 (1), pp. 1-8; Kitchenham, B., (2004) Procedures for Performing Systematic Reviews, , Joint Technical Report TR/SE-0401 (Keele) - 0400011T.1 (NICTA), Software Engineering Group - Department of Computer Science - Keele University and Empirical Software Engineering - National ICT Australia Ltd; Kitchenham, B., The role of replications in empirical software engineering - A word of warning (2008) Empirical Software Engineering, 13 (1), pp. 219-221; Kitchenham, B., Charters, S., (2007) Guidelines for Performing Systematic Literature Reviews in Software Engineering, , Technical Report EBSE 2007-001, Keele University and Durham University, UK; Malheiros, V., Hohn, E., Pinho, R., Mendonca, M., Maldonado, J., A visual text mining approach for systematic reviews (2007) 1st International Symposium on Empirical Software Engineering and Measurement (ESEM), pp. 245-254. , ACM; Petersen, K., Nauman, B., Identifying strategies for study selection in systematic reviews and maps (2011) 5th International Symposium on Empirical Software Engineering and Measurement (ESEM), pp. 1-10. , IEEE Computer Society; Riaz, M., Sulayman, N., Salleh, M., Mendes, E., Experiences conducting systematic reviews from novices' perspective (2010) 14th International Conference on Evaluation and Assessment in Software Engineering (EASE), pp. 1-10. , Keele University, UK, BCS-eWiC; Shull, F., Carver, J., Vegas, S., N, J., The role of replications in empirical software engineering (2008) Empirical Software Engineering, 13 (1), pp. 211-218; Tan, P.-N., Steinbach, M., Kumar, V., (2005) Introduction to Data Mining, , Addison Wesley, 1 edition; Zhang, H., Muhammad, A., An empirical investigation of systematic reviews in software engineering (2011) 5th International Symposium on Empirical Software Engineering and Measurement (ESEM), pp. 1-10. , IEEE Computer Society; Zhang, H., Muhammad, A., Systematic reviews in software engineering: An empirical investigation (2012) Information and Software Technology, , In Press},
  review              = {{E C12}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892616028&doi=10.1109%2fRESER.2013.9&partnerID=40&md5=695272d171a69a10e1b8a58edc1dd31a},
}

@Conference{Felizardo2013141,
  author              = {Felizardo, K.R. and Barbosa, E.F. and Maldonado, J.C.},
  title               = {A visual approach to validate the selection review of primary studies in systematic reviews: A replication study},
  year                = {2013},
  volume              = {2013-January},
  number              = {January},
  pages               = {141-146},
  publisher           = {Knowledge Systems Institute Graduate School},
  note                = {cited By 1; Conference of 25th International Conference on Software Engineering and Knowledge Engineering, SEKE 2013 ; Conference Date: 27 June 2013 Through 29 June 2013; Conference Code:112836},
  abbrev_source_title = {Proc. Int. Conf. Softw. Eng. Knowl. Eng., SEKE},
  abstract            = {One of the activities associated with the systematic literature review (SLR) process is the selection of primary studies. When the researcher faces large volumes of primary studies to be analysed, the process used to select studies can be arduous, specially when the selection review activity is performed and all studies under analysis are read more than once. An experiment was conducted as a pilot test to compare the performance and accuracy of graduate students in conducting the selection review activity manually and using visual text mining (VTM) techniques. This paper describes a replication study that used the same experimental design and materials of the original experiment. The results have confirmed the outcomes of the original experiment, i.e., VTM is promising and can improve the performance of the selection review of primary studies. There is a positive relationship between the use of VTM techniques and the time spent to conduct the selection review activity. Copyright © 2013 by Knowledge Systems Institute Graduate School.},
  affiliation         = {Comp. Systems Department, University of São Paulo, São Carlos, SP, Brazil},
  document_type       = {Conference Paper},
  issn                = {23259000},
  journal             = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  keywords            = {Data mining; Design of experiments; Knowledge engineering; Students, Graduate students; Large volumes; Pilot tests; Replication study; Review activities; Systematic literature review (SLR); Systematic Review; Visual text minings (VTM), Software engineering},
  language            = {English},
  references          = {Oliveira, M.D., Levkowitz, H., From visual data exploration to visual data mining: A survey (2003) IEEE Transactions on Visualization and Computer Graphics, 9 (3), pp. 378-394; Felizardo, K., Andery, G., Paulovich, F., Minghim, R., Maldonado, J., A visual analysis approach to validate the selection review of primary studies in systematic reviews (2012) Information and Software Technology, 54 (10), pp. 1079-1091; Juristo, N., Vegas, S., Using differences among replications of software engineering experiments to gain knowledge (2009) 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), pp. 356-366. , IEEE Computer Society; Keim, D., Information visualization and visual data mining (2002) IEEE Transactions on Visualization and Computer Graphics, 8 (1), pp. 1-8; Kitchenham, B., Procedures for performing systematic reviews (2004) Joint Technical Report TR/SE-0401 (Keele), , 0400011T.1 (NICTA), Software Engineering Group - Department of Computer Science - Keele University and Empirical Software Engineering - National ICT Australia Ltd; Kitchenham, B., Charters, S., Guidelines for performing systematic literature reviews in software engineering Technical Report EBSE 2007-001, , Keele University and Durham University, UK, 2007; Lopes, A.A., Pinho, R., Paulovich, F.V., Minghim, R., Visual text mining using association rules (2007) Computers and Graphics, 31 (3), pp. 316-326; Malheiros, V., Hohn, E., Pinho, R., Mendonca, M., Maldonado, J., A visual text mining approach for systematic reviews (2007) 1st International Symposium on Empirical Software Engineering and Measurement (ESEM), pp. 245-254. , ACM; Peinemann, F., Mcgauran, N., Sauerland, S., Lange, S., Disagreement in primary study selection between systematic reviews on negative pressure wound therapy (2008) BMC Medical Research Methodology, 8, p. 16; Shull, F., Carver, J., Vegas, S., The role of replications in empirical software engineering (2008) Empirical Software Engineering, 13 (1), pp. 211-218; Tan, P.-N., Steinbach, M., Kumar, V., (2005) Introduction to Data Mining, , Addison Wesley, 1 edition; Zhang, H., Muhammad, A., Systematic reviews in software engineering: An empirical investigation (2012) Information and Software Technology, , page In Press},
  review              = {{E C12}},
  source              = {Scopus},
  sponsors            = {Knowledge Systems Institute Graduate School},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937692886&partnerID=40&md5=da4eeb3d0f20927bd70f407743c8d67b},
}

@Article{Fernández20161,
  author                  = {Fernández, D.M. and Wagner, S. and Kalinowski, M. and Felderer, M. and Mafra, P. and Vetrò, A. and Conte, T. and Christiansson, M.-T. and Greer, D. and Lassenius, C. and Männistö, T. and Nayabi, M. and Oivo, M. and Penzenstadler, B. and Pfahl, D. and Prikladnicki, R. and Ruhe, G. and Schekelmann, A. and Sen, S. and Spinola, R. and Tuzcu, A. and de la Vara, J.L. and Wieringa, R.},
  title                   = {Naming the pain in requirements engineering: Contemporary problems, causes, and effects in practice},
  journal                 = {Empirical Software Engineering},
  year                    = {2016},
  pages                   = {1-41},
  issn                    = {13823256},
  note                    = {cited By 0; Article in Press},
  abbrev_source_title     = {Empir Software Eng},
  abstract                = {Requirements Engineering (RE) has received much attention in research and practice due to its importance to software project success. Its interdisciplinary nature, the dependency to the customer, and its inherent uncertainty still render the discipline difficult to investigate. This results in a lack of empirical data. These are necessary, however, to demonstrate which practically relevant RE problems exist and to what extent they matter. Motivated by this situation, we initiated the Naming the Pain in Requirements Engineering (NaPiRE) initiative which constitutes a globally distributed, bi-yearly replicated family of surveys on the status quo and problems in practical RE. In this article, we report on the qualitative analysis of data obtained from 228 companies working in 10 countries in various domains and we reveal which contemporary problems practitioners encounter. To this end, we analyse 21 problems derived from the literature with respect to their relevance and criticality in dependency to their context, and we complement this picture with a cause-effect analysis showing the causes and effects surrounding the most critical problems. Our results give us a better understanding of which problems exist and how they manifest themselves in practical environments. Thus, we provide a first step to ground contributions to RE on empirical observations which, until now, were dominated by conventional wisdom only. © 2016 Springer Science+Business Media New York},
  affiliation             = {Technische Universität München, Garching, Germany; University of Stuttgart, Keplerstra βe 7, Stuttgart, Germany; Universidade Federal Fluminense, R. Miguel de Frias, 9 - Icaraí, Niterói - RJ, Brazil; University of Innsbruck, Innrain 52, Innsbruck, Austria; Politecnico di Torino, Corso Duca degli Abruzzi, 24, Torino, Italy; Universidade Federal do Amazonas, Avenida General Rodrigo Otávio Jordáo Ramos, 6200 - Coroado I, Manaus - AM, Brazil; Karlstads Universitet, Universitetsgatan 2, Karlstad, Sweden; Queen’s University Belfast, Belfast, BT7 1NN, United Kingdom; Aalto University, Espoo, Finland; University of Helsinki, Yliopistonkatu 4, Helsinki, Finland; University of Calgary, 2500 University Dr NW, Calgary, AB T2N 1N4, Canada; University of Oulu, Pentti Kaiteran katu 1, Oulu, Finland; California State University, Long Beach, 1250 Bellflower Blvd, Long Beach, CA, United States; University of Tartu, Ülikooli 18, Tartu, Estonia; Pontifícia Universidade Católica do Rio Grande do Sul, Av. Ipiranga, 6681 - Partenon, Porto Alegre, - RS, Brazil; Hochschule Niederrhein, Reinarzstra βe 49, Krefeld, Germany; Simula Research Laboratory, Martin Linges vei 25, Fornebu, Norway; Graduate Program in Systems and Computer, Salvador University - UNIFACS, Salvador, Bahia, Brazil; Fraunhofer Project Center for Software and Systems Engineering, Federal University of Bahia (UFBA), Salvador, Bahia, Brazil; zeb.rolfes.schierenbeck.associates GmbH, Theresienhöhe 13A, Munich, Germany; Carlos III University of Madrid, Av. de la Universidad, 30, Madrid, Leganés, Spain; University of Twente, Enschede, Netherlands},
  author_keywords         = {Requirements engineering; Survey research},
  coden                   = {ESENF},
  correspondence_address1 = {Fernández, D.M.; Technische Universität MünchenGermany; email: Daniel.Mendez@tum.de},
  document_type           = {Article in Press},
  doi                     = {10.1007/s10664-016-9451-7},
  keywords                = {Surveys, Cause-effect analysis; Critical problems; Empirical data; Qualitative analysis; Software project; Status quo; Survey research, Requirements engineering},
  language                = {English},
  publisher               = {Springer New York LLC},
  review                  = {{S C2}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992179970&doi=10.1007%2fs10664-016-9451-7&partnerID=40&md5=6369ad69ac467d95fab5df16b268c17f},
}

@Article{Fernández2015616,
  author                  = {Fernández, D.M. and Wagner, S.},
  title                   = {Naming the pain in requirements engineering: A design for a global family of surveys and first results from Germany},
  journal                 = {Information and Software Technology},
  year                    = {2015},
  volume                  = {57},
  number                  = {1},
  pages                   = {616-643},
  issn                    = {09505849},
  note                    = {cited By 10},
  abbrev_source_title     = {Inf Software Technol},
  abstract                = {Context: For many years, we have observed industry struggling in defining a high quality requirements engineering (RE) and researchers trying to understand industrial expectations and problems. Although we are investigating the discipline with a plethora of empirical studies, they still do not allow for empirical generalisations. Objective: To lay an empirical and externally valid foundation about the state of the practice in RE, we aim at a series of open and reproducible surveys that allow us to steer future research in a problem-driven manner. Method: We designed a globally distributed family of surveys in joint collaborations with different researchers and completed the first run in Germany. The instrument is based on a theory in the form of a set of hypotheses inferred from our experiences and available studies. We test each hypothesis in our theory and identify further candidates to extend the theory by correlation and Grounded Theory analysis. Results: In this article, we report on the design of the family of surveys, its underlying theory, and the full results obtained from Germany with participants from 58 companies. The results reveal, for example, a tendency to improve RE via internally defined qualitative methods rather than relying on normative approaches like CMMI. We also discovered various RE problems that are statistically significant in practice. For instance, we could corroborate communication flaws or moving targets as problems in practice. Our results are not yet fully representative but already give first insights into current practices and problems in RE, and they allow us to draw lessons learnt for future replications. Conclusion: Our results obtained from this first run in Germany make us confident that the survey design and instrument are well-suited to be replicated and, thereby, to create a generalisable empirical basis of RE in practice. © 2014 Elsevier B.V. All rights reserved.},
  affiliation             = {Software and Systems Engineering, Technische Universität Münchenx, Technische Universität München, Boltzmannstr. 3, Garching, Germany; Software Engineering Group, Institute of Software Technology, University of Stuttgart, Universitätsstr. 38, Stuttgart, Germany},
  author_keywords         = {Family of surveys; Requirements engineering; Survey research},
  coden                   = {ISOTE},
  correspondence_address1 = {Fernández, D.M.; Software and Systems Engineering, Technische Universität Münchenx, Technische Universität München, Boltzmannstr. 3, Germany},
  document_type           = {Conference Paper},
  doi                     = {10.1016/j.infsof.2014.05.008},
  keywords                = {Algorithms; Design; Requirements engineering, Current practices; Empirical studies; Grounded theory; Moving targets; Qualitative method; State of the practice; Survey design; Survey research, Surveys},
  language                = {English},
  publisher               = {Elsevier},
  references              = {Broy, M., Requirements engineering as a key to holistic software quality (2006) Proceedings of the 21th International Symposium on Computer and Information Sciences (ISCIS), pp. 24-34. , A. Levi, E. Savas, H. Yenigun, S. Balcisoy, Y. Saygin (Eds), 4263, Springer Verlag, Berlin 2006; Mendez Fernandez, D., Wagner, S., Lochmann, K., Baumann, A., De Carne, H., Field study on requirements engineering: Investigation of artefacts, project parameters, and execution strategies (2012) Inform. Softw. Technol., 54, pp. 162-178; Condori-Fernández, N., Daneva, M., Wieringa, R., (2012) Preliminary Survey on Empirical Research Practices in Requirements Engineering, , Technical Report TR-CTIT-12-10, University of Twente, Centre for Telematics and Information Technology (CTIT); Seaman, C., Qualitative methods in empirical studies of software engineering (1999) IEEE Trans. Softw. Eng., 25, pp. 557-572; Méndez Fernández, D., Wagner, S., Naming the pain in requirements engineering: Design of a global family of surveys and first results from Germany (2013) Proc. 17th International Conference on Evaluation and Assessment in Software Engineering (EASE'13), pp. 183-194. , ACM Press; Mendez Fernandez, D., Penzenstadler, B., Kuhrmann, M., Broy, M., A meta model for artefact-orientation: Fundamentals and lessons learned in requirements engineering (2010) Proceedings of the 13th International Conference on Model Driven Engineering Languages and Systems (Models), pp. 183-197. , D. Petriu, N. Rouquette, O. Haugen (Eds), 6395, Springer-Verlag, Berlin Heidelberg; Glaser, B., Strauss, A., (1967) The Discovery of Grounded Theory: Strategies for Qualitative Research, , Aldine Transaction; Adolph, S., Hall, W., Kruchten, P., Using grounded theory to study the experience of software development (2011) J. Empirical Softw. Eng., 16, pp. 487-513; Gómez, O.S., Juristo, N., Vegas, S., Replication types in experimental disciplines Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, pp. 1-10; Gonzalez-Perez, C., Henderson-Sellers, B., A powertype-based metamodelling framework (2006) Softw. Syst. Model., 5, pp. 72-90; ISO/IEC, ISO/IEC Std. 24744 Software Engineering-Metamodel for Development Methodologies, Technical Report 2007-02-15, International Organization for Standardization 2007Hannay, J., Dag, S., Tore, D., A systematic review of theory use in software engineering experiments (2007) IEEE Trans. Softw. Eng., pp. 87-107; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M., Regnell, B., Wesslen, A., (2012) Experimentation in Software Engineering, , Springer; Popper, K., The logic of scientific discovery (2002) Routledge; Zowghi, D., Coulin, C., Requirements elicitation: A survey of techniques, approaches, and tools (2005) Engineering and Managing Software Requirements, pp. 19-46. , A. Aurum, C. Wohlin (Eds), Springer-Verlag, Berlin; Carrizo, D., Dieste, O., Juristo, N., Study of elicitation techniques adequacy Proceedings of the 11th Workshop on Requirements Engineering, pp. 104-114; Eveleens, J., Verhoef, T., The rise and fall of the chaos report figures (2010) IEEE Softw., 27, pp. 30-36; Buschermöhle, R., Eekhoff, H., Josko, B., (2006) Success-Erfolgs-und Misserfolgsfaktoren Bei der Durchführung von Hard-und Softwareentwicklungsprojekten in Deutschland, , BIS-Verlag der Carl von Ossietzky Universität Oldenburg; Neill, C.J., Laplante, P.A., Requirements engineering: The state of the practice (2003) IEEE Softw.; Nikula, U., Sajaniemi, J., Kälviäinen, H., (2000) A State-of-The-practice Survey on Requirements Engineering in Small-and Medium-sized Enterprises, , Telecom Business Research Center Lappeenranta; Staples, M., Niazi, M., Jeffery, R., Abrahams, A., Byatt, P., Murphy, R., An exploratory study of why organizations do not adopt CMMI (2007) J. Syst. Softw., 80, pp. 883-895; Napier, N., Mathiassen, L., Johnson, R., Combining perceptions and prescriptions in requirements engineering process assessment: An industrial case study (2009) IEEE Trans. Softw. Eng., 35, pp. 593-606; Pettersson, F., Ivarsson, M., Gorschek, T., Öhman, P., A practitioner's guide to light weight software process assessment and improvement planning (2008) J. Syst. Softw., 81, pp. 972-995; Hall, T., Beecham, S., Rainer, A., Requirements problems in twelve software companies: An empirical analysis (2003) Empirical Softw. Eng., 8, pp. 7-42; Hsia, P., Davis, A., Kung, D., Status report: Requirements engineering (1993) IEEE Softw., 10, pp. 75-79; Solemon, B., Sahibuddin, S., Abd Ghani, A.A., Requirements engineering problems and practices in software companies: An industrial survey-Springer Advances in Software Engineering; Liu, L., Li, T., Peng, F., (2010) Why Requirements Engineering Fails: A Survey Report from China 18th IEEE International Conference on Requirements Engineering (RE), pp. 317-322; Verner, J., Cox, K., Bleistein, S., Cerpa, N., Requirements engineering and software project success: An industrial survey in Australia and the U.S (2005) Australasian J. Inform. Syst., 13; Mendez Fernandez, D., Wagner, S., (2013) Naming the Pain in Requirements Engineering-NaPiRE Report 2013, , Technical Report TUM-I1326, Technische Universität München; Mendez Fernandez, D., Lochmann, K., Penzenstadler, B., Wagner, S., A case study on the application of an artefact-based requirements engineering approach (2011) Proceedings of the 15th International Conference on Evaluation and Assessment in Software Engineering (EASE 2011), pp. 104-113. , Institution of Engineering and Technology (IET); Davis, A., Overmyer, S., Jordan, K., Caruso, J., Dandashi, F., Dinh, A., Kincaid, G., Sitaram, P., Identifying and measuring quality in a software requirements specification Proceedings of the First International Software Metrics Symposium, pp. 141-152; Glinz, M., Rethinking the notion of non-functional requirements Proceedings of the 3rd World Congress for Software Quality (3WCSQ 05), 2, pp. 55-64; Gorschek, T., Wohlin, C., Requirements abstraction model (2006) Requir. Eng., 11, pp. 79-101; Damian, D., Chisan, J., An empirical study of the complex relationships between requirements engineering processes and other processes that lead to payoffs in productivity, quality, and risk management (2006) IEEE Trans. Softw. Eng., 32, pp. 433-453; Pedreira, O., Piattini, M., Luaces, M., Brisaboa, N., A systematic review of software process tailoring (2007) SIGSOFT Softw. Eng. Notes, 32, pp. 1-6; Mendez Fernandez, D., (2011) Requirements Engineering: Artefact-Based Customisation, , Ph.D. thesis Technische Universität München; Ramesh, B., Jarke, M., Toward reference models for requirements traceability (2001) IEEE Trans. Softw. Eng., 27, pp. 58-93; Garvin, D., What does product quality really mean? (1984) MIT Sloan Manage Rev., 26, pp. 25-43; Kitchenham, B., Pfleeger, S., Software quality: The elusive target (1996) IEEE Softw., 13, pp. 12-21; Salger, F., Engels, G., Hofmann, A., Inspection effectiveness for different quality attributes of software requirement specifications: An industrial case study (2009) Proceedings of the 7th International Workshop on Software Quality (WoSQ 09), , IEEE CS Press; Mendez Fernandez, D., Wieringa, R., Improving requirements engineering by artefact orientation (2013) Proc. 14th International Conference on Product-Focused Software Process Improvement, pp. 108-122. , Springer; Kuhrmann, M., Mendez Fernandez, D., Knapp, A., Who cares about software process modelling? A first investigation about the perceived value of process engineering and process consumption (2013) Proc. 14th International Conference on Product-Focused Software Process Improvement, pp. 138-152. , Springer; Birks, M., Mills, J., (2011) Grounded Theory-A Practical Guide, , Sage Publications Inc; Cohen, J., (1988) Statistical Power Analysis for the Behavioral Sciences, , Hillsdale, second ed},
  review                  = {{S C2}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922623546&doi=10.1016%2fj.infsof.2014.05.008&partnerID=40&md5=cfadc1d56ed52007ff4aaa1ca8118d1e},
}

@Article{Fernández-Sáez2016212,
  author                  = {Fernández-Sáez, A.M. and Genero, M. and Caivano, D. and Chaudron, M.R.V.},
  title                   = {Does the level of detail of UML diagrams affect the maintainability of source code?: a family of experiments},
  journal                 = {Empirical Software Engineering},
  year                    = {2016},
  volume                  = {21},
  number                  = {1},
  pages                   = {212-259},
  issn                    = {13823256},
  note                    = {cited By 1},
  abbrev_source_title     = {Empir Software Eng},
  abstract                = {Although the UML is considered to be the de facto standard notation with which to model software, there is still resistance to model-based development. UML modeling is perceived to be expensive and not necessarily cost-effective. It is therefore important to collect empirical evidence concerning the conditions under which the use of UML makes a practical difference. The focus of this paper is to investigate whether and how the Level of Detail (LoD) of UML diagrams impacts on the performance of maintenance tasks in a model-centric approach. A family of experiments consisting of one controlled experiment and three replications has therefore been carried out with 81 students with different abilities and levels of experience from 3 countries (The Netherlands, Spain, and Italy). The analysis of the results of the experiments indicates that there is no strong statistical evidence as to the influence of different LoDs. The analysis suggests a slight tendency toward better results when using low LoD UML diagrams, especially if used for the modification of the source code, while a high LoD would appear to be helpful in understanding the system. The participants in our study also favored low LoD diagrams because they were perceived as easier to read. Although the participants expressed a preference for low LoD diagrams, no statistically significant conclusions can be drawn from the set of experiments. One important finding attained from this family of experiments was that the participants minimized or avoided the use of UML diagrams, regardless of their LoD. This effect was probably the result of using small software systems from well-known domains as experimental materials. © 2014, Springer Science+Business Media New York.},
  affiliation             = {ALARCOS Research Group, Department of Technologies and Information Systems, University of Castilla-La Mancha, Paseo de la Universidad 4, Ciudad Real, Spain; Department of Informatics, University of Bari, Via E. Orabona 4, Bari, Italy; SER&Practices s.r.l, Spin Off Company of the University of Bari, Via E. Orabona 4, Bari, Italy; Joint Computer Science and Engineering Department of Chalmers, University of Technology and University of Gothenburg, Gö̈teborg, Sweden; Leiden Institute of Advanced Computer Sciences, Leiden University, NielsBohrweg 1, Leiden, CA, Netherlands},
  author_keywords         = {Controlled experiment; Family of experiments; Level of detail; Replication; Software maintenance; UML diagrams},
  coden                   = {ESENF},
  correspondence_address1 = {Fernández-Sáez, A.M.; Leiden Institute of Advanced Computer Sciences, Leiden University, NielsBohrweg 1, Netherlands; email: anamaria.fernandez.saez@gmail.com},
  document_type           = {Article},
  doi                     = {10.1007/s10664-014-9354-4},
  funding_details         = {TIN2012-37493-C03-01, FEDER, Federación Española de Enfermedades Raras},
  keywords                = {Computer software maintenance; Cost effectiveness; Graphic methods; Maintenance, Controlled experiment; Experimental materials; Level of detail; Model based development; Modeling softwares; Replication; Statistical evidence; UML diagrams, Experiments},
  language                = {English},
  publisher               = {Springer New York LLC},
  references              = {Abrial, J.R., (1996) The B-Book, , Cambridge University Press, New York; Anda, B., Hansen, K., Gullesen, I., Thorsen, H.K., Experiences from introducing UML-based development in a large safety-critical project (2006) Empir Softw Eng, 11, pp. 555-581; Arisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance: an experimental evaluation (2006) IEEE Trans Softw Eng, 32, pp. 365-381; Basili, V., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) IEEE Trans Softw Eng, 25, pp. 456-473; Basili, V., Weiss, D., A methodology for collecting valid software engineering data (1984) IEEE Trans Softw Eng, 10, pp. 728-738; (2006) Comprehensive Meta-Analysis v2, , Biostat, Englewood; Briand, L.C., Labiche, Y., Di Penta, M., Yan-Bondoc, H., An experimental investigation of formality in UML-based development (2005) IEEE Trans Softw Eng, 31, pp. 833-849; Briand, L.C., Wüst, J., Lounis, H., Replicated Case Studies for Investigating Quality Factors in Object-Oriented Designs (2001) Empir Softw Eng, 6, pp. 11-58; Bruegge, B., Dutoit, A.H., (2010) Object-oriented software engineering: using UML, patterns, and Java, , Prentice Hall, Boston; Cant, S., Jeffery, D., Henderson-Sellers, B., A conceptual model of cognitive complexity of elements of the programming process (1995) Inf Softw Technol, 37, pp. 351-362; Carver, J., (2010) Towards Reporting Guidelines for Experimental Replications: A Proposal (2010) Proceedings of the 1st International Workshop on Replication in Empirical Software Engineering Research (RESER) [Held during ICSE; Cohen, D., Lindvall, M., Costa, P., An introduction to agile methods (2004) Adv Comput, 62, pp. 2-67; Conover, W.J., Practical Nonparametric Statistics, 3rd ed (1998) Wiley; Cruz-Lemus, J.A., Genero, M., Caivano, D., Assessing the influence of stereotypes on the comprehension of UML sequence diagrams: A family of experiments (2010) Inf Softw Technol, 53, pp. 1391-1403; Devore, J.L., Farnum, N., (1999) Applied Statistics for Engineers and Scientists, , Duxbury Press, NY; Dobing, B., Parsons, J., How UML is used? (2006) Commun ACM, 49, pp. 109-113; Dzidek, W.J., Arisholm, E., Briand, L.C., A realistic empirical evaluation of the costs and benefits of UML in software maintenance (2008) IEEE Trans Softw Eng, 34, pp. 407-432; Erickson, J., Siau, K., Theoretical and practical complexity of modeling methods (2007) Commun ACM, 50, pp. 46-51; Ericksson, H.E., Penker, M., Lyons, B., Fado, D., UML 2 Toolkit (2004) Wiley; Fernández-Sáez, A.M., Chaudron, M.R.V., Genero, M., Ramos, I., (2013) Are forward designed or reverse-engineered UML diagrams more helpful for code maintenance?: a controlled experiment. Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, pp. 60-71. , ACM, New York; Fernández-Sáez, A.M., Genero, M., Chaudron, M.R.V., Empirical studies concerning the maintenance of UML diagrams and their use in the maintenance of code: A systematic mapping study (2013) Inf Softw Technol, 55, pp. 1119-1142; Fernández-Sáez, A.M., Genero, M., Chaudron, M.R.V., Are Forward Designed or Reverse-Engineered UML diagrams more helpful for code maintenance?: A family of experiments (2014) Inf Softw Technol; Fernández-Sáez, A.M., Genero, M., Chaudron, M.R.V., Does the Level of Detail of UML Models Affect the Maintainability of Source Code? Proceedings of the Experiences and Empirical Studies in Software Modelling Workshop (EESSMod’11) at MODELS 2011. LNCS 7167, Wellington (2012) New Zealand, pp. 133-147; Fjeldstad, R.K., Hamlen, W.T., Application Program Maintenance Study: Report to Our Respondents (1979) Proceedings of GUIDE, p. 48; Garousi, G., Garousi, V., Moussavi, M., Evaluating Usage and Quality of Technical Software Documentation: An Empirical Study. Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering (EASE’2013) (2013) ACM, pp. 24-35; Glass, R., Facts and fallacies of software engineering (2002) Addison-Wesley; Glässer, U., Gotzhein, R., Prinz, A., The formal semantics of SDL-2000: Status and perspectives (2003) Comput Netw, 42, pp. 343-358; Gravino, C., Tortora, G., ACM Symposium on Applied Computing (SAC’2010) (2010) ACM, pp. 2365-2366; Grossman, M., Aronson, J.E., McCarthy, R.V., Does UML make the grade? Insights from the software development community (2005) Inf Softw Technol, 47, pp. 383-397; Hannay, J.E., Dybå, T., Arisholm, E., Sjøberg, D.I.K., The effectiveness of pair programming: A meta-analysis (2009) Inf Softw Technol, 51, pp. 1110-1122; Hedges, L.V., Olkin, I., (1985) Statistical Methods for Meta-Analysis, , Academia Press, New York; Höst, M., Regnell, B., Wholin, C., Using students as subjects - a comparative study of students and professionals in lead-time impact assessment (2000) Proceedings of the 4th Conference on Empirical Assessment and Evaluation in Software Engineering, pp. 201-214; ISO/IEC 25001: Systems and software engineering - Systems and software Quality Requirements and Evaluation (SQuaRE) - Planning and management (2014) International Organization for Standarization; Jedlitschka, A., Ciolkowoski, M., Pfahl, D., Reporting experiments in software engineering (2008) Guide to Advanced Empirical Software Engineering; Juristo, N., Moreno, A., (2001) Basics of software engineering experimentation, , Kluwer Academic Publishers, Boston; Juristo, N., Vegas, S., Solari, M., A process for managing interaction between experimenters to get useful similar replications (2013) Inf Softw Technol, 55, pp. 215-225; Kampenes, V., Dybå, T., Hannay, J.E., Sjoberg, D.I.K., A Systematic Review of Effect Size in Software Engineering Experiments (2007) Inf Softw Technol, 49, pp. 1073-1086; Karahasanovic, A., Thomas, R., Difficulties experienced by students in maintaining object-oriented Systems: an empirical study (2007) Proceedings of the Australasian Computing Education Conference (ACE’2007), pp. 81-87; Kirk, R.E., (1995) Experimental design. procedures for the behavioural sciences, , Brooks/Cole Publishing Company, Belmont; Kitchenham, B.A., Pfleeger, S., Hoaglin, D.C., Preliminary Guidelines for Empirical Research in Software Engineering (2002) IEEE Trans Softw Eng, 28, pp. 721-734; Lange, C.F.J., Chaudron, M.R.V., Muskens, J., In practice: UML software architecture and design description (2006) IEEE Softw, 23, pp. 40-46; Lauesen, S., (2002) Software Requirements: Styles and Techniques, , Addison-Wesley, UK; Lientz, B.P., Swanson, E.B., (1980) Software Maintenance Management, , Addison -Wesley, Massachusetts; Lindsay, R.M., Ehrenberg, A., The design of replicated studies (1993) Am Stat, 47, pp. 217-228; Nugroho, A., Level of detail in UML models and its impact on model comprehension: A controlled experiment (2009) Inf Softw Technol, 51, pp. 1670-1685; Nugroho, A., Chaudron, M.R.V., Evaluating the impact of UML modeling on software quality: An industrial case study (2009) LNCS, 5795, pp. 181-195; Nugroho, A., Chaudron, M.R.V., (2008) A survey into the rigor of UML use and its perceived impact on quality and productivity. Proceedings of the Second ACM-IEEE international symposium on Empirical software engineering and measurement (ESEM 2008), pp. 90-99. , ACM, New York; The Unified Modeling Language (2010) Documents associated with UML version, 2, p. 3. , http://www.omg.org/spec/UML/2.3; Oppenheim, A.N., (2000) Questionnaire Design, Interviewing and Attitude Measurement, 0002-New ed, , Bloomsbury Academic, United Kingdom; Pippenger, N., Complexity Theory (1978) Scientific American 238:; Poels, G., Dedene, G., (2000) Measures for Assessing Dynamic Complexity Aspects of Object-oriented Conceptual Schemes. Proceedings of the 19th International Conference on Conceptual Modeling, pp. 499-512. , Springer, Berlin; Pressman, R.S., (2005) Software engineering: a practitioners approach, seventh, , McGraw Hill, New York; Roehm, T., Tiarks, R., Koschke, R., Maalej, W., (2012) How Do Professional Developers Comprehend Software? Proceedings of the 34th International Conference on Software Engineering, pp. 255-265. , IEEE Press, Piscataway; Scanniello, G., Gravino, C., Genero, M., On the Impact of UML Analysis Models on Source Code Comprehensibility and Modifiability (2013) ACM Transactions On Software Engineering And Methodology (In press), p. 26; Scanniello, G., Gravino, C., Tortora, G., Does the Combined use of Class and Sequence Diagrams Improve the Source Code Comprehension? Results from a Controlled Experiment (2012) Proceedings of the Experiences and Empirical Studies in Software Modelling Workshop (EESSMoD´2012); Scanniello, G., Gravino, C., Tortora, G., Investigating the Role of UML in the Software Modeling and Maintenance - A Preliminary Industrial Survey. Proceedings of the 12th International Conference on Enterprise Information Systems (ICEIS’2010). Funchal, Madeira (2010) Portugal, pp. 141-148; Sheskin, D., (2007) Handbook of Parametric and Nonparametric Statistical Procedures, , Chapman and Hall, New York; Siau, K., Information Modeling and Method Engineering: A Psychological Perspective (1999) J Database Manag, 10, pp. 44-50; Singer, J., Vinson, N.G., Ethical Issues in Empirical Studies of Software Engineering (2002) IEEE Trans Softw Eng, 28, pp. 1171-1180; Sjøberg, D.I.K., Hannay, J.E., Hansen, O., A survey of controlled experiments in software engineering (2005) IEEE Trans Softw Eng, 31, pp. 733-753; Spivey, J.M., (1989) The Z Notation: A Reference Manual, , Prentice-Hall, New York; (2003) SPSS 12.0, syntax reference guide, , SPSS Inc, Chicago; Tryggeseth, E., Report from an Experiment: Impact of Documentation on Maintenance (1997) J Empir Softw Eng, 2, pp. 201-207; Vegas, S., Juristo, N., Moreno, A., Analysis of the influence of communication between researchers on experiment replication (2006) Proceedings of the ACM/IEEE international symposium on Empirical software engineering (ISESE’2006), pp. 28-37; Verelst, J., The influence of the level of abstraction on the evolvability of conceptual models of information systems (2004) Proceedings of the International Symposium on Empirical Software Engineering (ISESE’04), pp. 17-26; Wieringa, R.J., Chapter 8 - Entity-Relationship Diagrams (2003) Design Methods for Reactive Systems, pp. 77-88. , Wieringa RJ, (ed), Morgan Kaufmann, San Francisco; Wohlin, C., Runeson, P., Host, M., (1999) Experimentation in Software Engineering: An Introduction, , Kluwer Academic Publishers, Boston},
  review                  = {{E C2 C6}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955173397&doi=10.1007%2fs10664-014-9354-4&partnerID=40&md5=fe64199d8ab409f7159c815240ca00ee},
}

@Article{Fernández-Sáez2015644,
  author                  = {Fernández-Sáez, A.M. and Genero, M. and Chaudron, M.R.V. and Caivano, D. and Ramos, I.},
  title                   = {Are forward designed or reverse-engineered UML diagrams more helpful for code maintenance?: A family of experiments},
  journal                 = {Information and Software Technology},
  year                    = {2015},
  volume                  = {57},
  number                  = {1},
  pages                   = {644-663},
  issn                    = {09505849},
  note                    = {cited By 8},
  abbrev_source_title     = {Inf Software Technol},
  abstract                = {Context: Although various success stories of model-based approaches are reported in literature, there is still a significant resistance to model-based development in many software organizations because the UML is perceived to be expensive and not necessarily cost-effective. It is also important to gather empirical evidence in which context and under which conditions the UML makes or does not make a practical difference. Objective: Our objective is to provide empirical evidence as to which UML diagrams are more helpful during software maintenance: Forward Designed (FD) UML diagrams or Reverse Engineered (RE) UML diagrams. Method: We carried out a family of experiments which consisted of one experiment and two replications with a total of 169 Computer Science undergraduate students. Results: The individual data analysis and the meta-analysis conducted on the whole family, show a tendency in favor of FD diagrams and are significantly different as regards the effectiveness and efficiency of the subjects who participated and played the role of maintainers. The analysis of the qualitative data, collected using a post-experiment survey, reveals that the subjects did not consider RE diagrams helpful. Conclusions: Our findings show that there are some objective results (descriptive statistics or statistical tests) related to the maintenance effectiveness and efficiency in favor of the use of FD UML diagrams during software maintenance. Subjective opinions also lead us to recommend the use of UML diagrams (especially class diagrams) created during the design phase for software maintenance because they improve the understanding of the system in comparison with RE diagrams. Nevertheless, we can only assume that these results are valid in the context of Computer Science undergraduate students when working with small systems related to well-known domains, and other contexts should be explored in order to reaffirm the results in an industrial context by carrying out replications with professionals. © 2014 Elsevier B.V. All rights reserved.},
  affiliation             = {ALARCOS Research Group, Instituto de Tecnologías y Sistemas de Información, University of Castilla-La Mancha, Spain; Joint Computer Science and Engineering, University of Technology, University of Gothenburg, Sweden; Department of Informatics, University of Bari, Bari, Italy; Departamento de Lenguajes y Sistemas Informáticos, University of Seville, Seville, Spain},
  author_keywords         = {Controlled experiment; Family of experiments; Maintainability; Reverse Engineering; Software maintenance; UML diagrams},
  coden                   = {ISOTE},
  correspondence_address1 = {Fernández-Sáez, A.M.; ALARCOS Research Group, Instituto de Tecnologías y Sistemas de Información, University of Castilla-La ManchaSpain},
  document_type           = {Article},
  doi                     = {10.1016/j.infsof.2014.05.014},
  funding_details         = {TIN2012-37493-C03-01, MINECO, Ministerio de Economía y Competitividad},
  keywords                = {Computer software; Cost effectiveness; Education; Finite difference method; Graphic methods; Maintainability; Maintenance; Reverse engineering; Software testing; Students, Controlled experiment; Descriptive statistics; Effectiveness and efficiencies; Model based approach; Model based development; Software organization; UML diagrams; Undergraduate students, Computer software maintenance},
  language                = {English},
  publisher               = {Elsevier B.V.},
  references              = {Abbes, M., Khomh, F., Gueheneuc, Y.-G., Antoniol, G., An empirical study of the impact of two antipatterns blob and spaghetti coDe on program comprehension (2011) Presented at the Proceedings of the European Conference on Software Maintenance and Reengineering (CSMR'2011), pp. 181-190; De Souza, S.C.B., Anquetil, N., De Oliveira, K.M., A study of the documentation essential to software maintenance (2005) Presented at the Proceedings of the International Conference on Design of Communication: Documenting & Designing for Pervasive Information (SIGDOC'2005), pp. 68-75; Tilley, S., Huang, S., A Qualitative assessment of the efficacy of uml diagrams as a form of graphical documentation in aiding program understanding (2003) Presented at the Proceedings of the 21st Annual International Conference on Systems Documentation (SIGDOC'2003), pp. 184-191; Tryggeseth, E., Report from an experiment: Impact of documentation on maintenance (1997) J. Empirical Softw. Eng., 2 (2), pp. 201-207; Nugroho, A., Chaudron, M.R.V., Evaluating the impact of UML moDeling on software quality: An industrial case study (2009) Presented at the Proceedings of the 12th International Conference on MoDel Driven Engineering Languages and Systems (MODELS'09), 181-195; Nugroho, A., Flaton, B., Chaudron, M.R.V., Empirical analysis of the relation between level of detail in uml models and defect density (2008) Presented at the Proceedings of the International Conference on MoDel Driven Engineering Languages and Systems (MoDELS'2008), pp. 600-614; Arisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance: An experimental evaluation (2006) IEEE Trans. Software Eng., 32 (6), pp. 365-381; Dzidek, W.J., Arisholm, E., Briand, L.C., A realistic empirical evaluation of the costs and benefits of UML in software maintenance (2008) IEEE Trans. Software Eng., 34 (3), pp. 407-432; Berenbach, B., Konrad, S., Putting the 'Engineering' into Software Engineering with MoDels (2007) Presented at the Proceedings of the International Workshop on MoDeling in Software Engineering (MISE '07), p. 4. , ICSE Workshop; Anda, B., Hansen, K., Gullesen, I., Thorsen, H.K., Experiences from introducing UML-based Development in a large safety-critical project (2006) Empirical Softw. Eng., 11 (4), pp. 555-581. , December; Scanniello, G., Gravino, C., Genero, M., Cruz-Lemus, J.A., Tortora, G., On the impact of uml analysis models on source code comprehensibility and modifiability (2013) Acm. T. Softw. Eng. Meth., 23 (2); Nugroho, A., Chaudron, M.R.V., A Survey of the practice of design-code correspondence amongst professional software engineers (2007) Proceedings of the First International Symposium on Empirical Software Engineering and Measurement (ESEM'2007), pp. 467-469. , Washington, DC, USA; Nugroho, A., Level of Detail in UML moDels and its impact on moDel comprehension: A controlled experiment (2009) Inf. Softw. Technol., 51 (12), pp. 1670-1685; Fernández-Sáez, A.M., Genero, M., Chaudron, M.R.V., Does the level of detail of uml models affect the maintainability of source code? (2012) Proceedings of the Experiences and Empirical Studies in Software MoDelling Workshop (EESSMod'11), pp. 133-147. , MODELS 2011, Wellington, New Zealand; Perez-Castillo, R., De Guzman, I.G.-R., Piattini, M., Ebert, C., Reengineering technologies (2011) IEEE Softw., 28 (6), pp. 13-17; Fernández-Sáez, A.M., Chaudron, M.R.V., Genero, M., Ramos, I., Are forward designed or reverse-engineered uml diagrams more helpful for code maintenance?: A controlled experiment (2013) Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, pp. 60-71. , New York, NY, USA; Fernández-Sáez, A.M., Genero, M., Chaudron, M.R.V., Empirical studies concerning the maintenance of UML diagrams and their use in the maintenance of coDe: A systematic mapping study (2013) Inf. Softw. Technol., 55 (7), pp. 1119-1142; Karahasanovic, A., Thomas, R., Difficulties experienced by stuDents in maintaining object-oriented Systems: An empirical study (2007) Proceedings of the Australasian Computing Education Conference (ACE'2007), pp. 81-87; Scanniello, G., Gravino, C., Tortora, G., Investigating the role of UML in the software modeling and maintenance-a preliminary industrial survey (2010) Proceedings of the 12th International Conference on Enterprise Information Systems (ICEIS'2010), 3, pp. 141-148. , Funchal, MaDeira, Portugal; Dobing, B., Parsons, J., How UML is used? (2006) Commun ACM, 49 (5), pp. 109-113; Genero, M., Fernández-Sáez, A.M., Nelson, H.J., Poels, G., Piattini, M., A systematic literature review on the quality of UML moDels (2011) J. Database Manage., 22, pp. 46-70. , July; Basili, V., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) IEEE Trans. Software Eng., 25 (4), pp. 456-473; Basili, V., Weiss, D., A methodology for collecting valid software engineering data (1984) IEEE Trans. Software Eng., 10 (6), pp. 728-738; Grossman, M., Aronson, J.E., McCarthy, R.V., Does UML make the graDe? Insights from the software Development community (2005) Inf. Softw. Technol., 47 (6), pp. 383-397. , April; Erickson, J., Siau, K., Theoretical and practical complexity of moDeling methods (2007) Commun. ACM, 50 (8), pp. 46-51; Heijstek, W., Chaudron, M.R.V., Empirical Investigations of MoDel Size, Complexity and Effort in a Large Scale, Distributed MoDel Driven Development Process (2009) Presented at the 35th Euromicro Conference on Software Engineering and AdVanced Applications, pp. 113-120. , SEAA '09, 2009; Swanson, E.B., The dimensions of maintenance Proceedings of the 2nd International Conference on Software Engineering (ICSE 1976), 1976, pp. 492-497. , San Francisco, California, United States; Shull, F., Mendonça, M.G., Basili, V.R., Carver, J., Maldonaldo, J.C., Fabbri, S., Travassos, G.H., Ferreira, M.C., Knowledge-sharing issues in experimental software engineering (2004) Empirical Softw. Eng., 9 (1-2), pp. 111-137; Vegas, S., Juristo, N., Moreno, A., Solari, M., Letelier, P., Analysis of the influence of communication between researchers on experiment replication (2006) Proceedings of the ACM/IEEE International Symposium on Empirical Software Engineering (ISESE'2006), pp. 28-37; Cruz-Lemus, J.A., Genero, M., Caivano, D., Abrahão, S., Insfrán, E., Carsí, J.A., Assessing the influence of stereotypes on the comprehension of UML sequence diagrams: A family of experiments (2010) Inf. Softw. Technol., 53 (12), pp. 1391-1403; Kampenes, V., Dybå, T., Hannay, J.E., Sjoberg, D.I.K., A systematic review of effect size in software engineering experiments (2007) Inf. Softw. Technol., 49 (11-12), pp. 1073-1086; Höst, M., Regnell, B., Wohlin, C., Using stuDents as subjects-A comparative study of stuDents and professionals in lead-time impact assessment (2000) J. Empirical Softw. Eng., 5, pp. 201-214; Verelst, J., Influence of the level of abstraction on the evolvability of conceptual moDels of information systems (2004) Proceedings of the International Symposium on Empirical Software Engineering (ISESE'04), pp. 17-26; Sjøberg, D.I.K., Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanovic, A., Liborg, N., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE Transact. Softw. Eng., 31 (9), pp. 733-753; Cohen, D., Lindvall, M., Costa, P., An introduction to agile methods (2004) Adv. Comput., 62, pp. 2-67; Petre, M., UML in practice (2013) Proceedings of the 2013 International Conference on Software Engineering (ICSE'2013), pp. 722-731. , San Francisco, CA, USA},
  review                  = {{E C2 C6}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922625970&doi=10.1016%2fj.infsof.2014.05.014&partnerID=40&md5=0fb58b64cbf63721d1c3b74e33d8214b},
}

@Conference{Fittkau2015266,
  author              = {Fittkau, F. and Finke, S. and Hasselbring, W. and Waller, J.},
  title               = {Comparing Trace Visualizations for Program Comprehension through Controlled Experiments},
  year                = {2015},
  volume              = {2015-August},
  pages               = {266-276},
  publisher           = {IEEE Computer Society},
  note                = {cited By 7; Conference of 23rd IEEE International Conference on Program Comprehension, ICPC 2015 ; Conference Date: 18 May 2015 Through 19 May 2015; Conference Code:117971},
  abbrev_source_title = {IEEE Int. Conf. Program Comprehension},
  abstract            = {For efficient and effective program comprehension, it is essential to provide software engineers with appropriate visualizations of the program's execution traces. Empirical studies, such as controlled experiments, are required to assess the effectiveness and efficiency of proposed visualization techniques. We present controlled experiments to compare the trace visualization tools Extravis and Explor Viz in typical program comprehension tasks. We replicate the first controlled experiment with a second one targeting a differently sized software system. In addition to a thorough analysis of the strategies chosen by the participants, we report on common challenges comparing trace visualization techniques. Besides our own replication of the first experiment, we provide a package containing all our experimental data to facilitate the verifiability, reproducibility and further extensibility of our presented results. Although subjects spent similar time on program comprehension tasks with both tools for a small-sized system, analyzing a larger software system resulted in a significant efficiency advantage of 28 percent less time spent by using Explor Viz. Concerning the effectiveness (correct solutions for program comprehension tasks), we observed a significant improvement of correctness for both object system sizes of 39 and 61 percent with Explor Viz. © 2015 IEEE.},
  affiliation         = {Software Engineering Group, Kiel University, Kiel, Germany},
  art_number          = {7181455},
  author_keywords     = {Controlled Experiment; Program Comprehension; Software Visualization; Trace Visualization},
  document_type       = {Conference Paper},
  doi                 = {10.1109/ICPC.2015.37},
  isbn                = {9781467381598},
  journal             = {IEEE International Conference on Program Comprehension},
  keywords            = {Computer software; Efficiency; Visualization, Controlled experiment; Effective programs; Effectiveness and efficiencies; Program comprehension; Reproducibilities; Software visualization; Trace visualization; Visualization technique, Computer programming},
  language            = {English},
  references          = {Reiss, S.P., Tarvo, A., What is my program doing? Program dynamics in programmer's terms (2012) Runtime Verification, 7186, pp. 245-259. , ser. LNCS. Springer Berlin Heidelberg; Cornelissen, B., Zaidman, A., Van Deursen, A., Moonen, L., Koschke, R., A systematic survey of program comprehension through dynamic analysis (2009) IEEE TSE, 35 (5), pp. 684-702; Koschke, R., Software visualization in software maintenance, reverse engineering, and re-engineering: A research survey (2003) Journal of Software Maintenance and Evolution: Research and Practice, 15 (2), pp. 87-109; Storey, M.-A., Wong, K., Müller, H.A., How do program understanding tools affect how programmers understand programs? (1997) Proc. of the 4h Working Conference on Reverse Engineering (WCRE 1997), pp. 12-21. , IEEE; Basili, V.R., The role of controlled experiments in software engineering research (2007) Empirical Software Engineering Issues: Critical Assessment and Future Directions, pp. 33-37. , Springer; Tichy, W.F., Should computer scientists experiment more? (1998) IEEE Computer, 31 (5), pp. 32-40. , May; Sjøberg, D.I., Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanovic, A., Liborg, N.-K., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE TSE, 31 (9), pp. 733-753; Tichy, W.F., Where's the science in software engineering?: Ubiquity symposium: The science in computer science (2014) Ubiquity, 2014, pp. 1-6. , no. March, Mar; Cornelissen, B., Zaidman, A., Van Deursen, A., Van Rompaey, B., Trace visualization for program comprehension: A controlled experiment (2009) Proc. of the 17th IEEE International Conference on Program Comprehension (ICPC 2009), pp. 100-109. , May; Cornelissen, B., Zaidman, A., Van Deursen, A., A controlled experiment for program comprehension through trace visualization (2011) IEEE TSE, 37 (3), pp. 341-355. , May; Cornelissen, B., Holten, D., Zaidman, A., Moonen, L., Van Wijk, J.J., Van Deursen, A., Understanding execution traces using massive sequence and circular bundle views (2007) Proc. of the 15th IEEE International Conference on Program Comprehension (ICPC 2007), pp. 49-58. , IEEE; Tichy, W.F., Hints for reviewing empirical work in software engineering (2000) Empirical Software Engineering, 5 (4), pp. 309-312; Basili, V.R., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) IEEE TSE, 25 (4), pp. 456-473; Fittkau, F., Waller, J., Wulf, C., Hasselbring, W., Live trace visualization for comprehending large software landscapes: The ExplorViz approach (2013) Proc. of the 1st International Working Conference on Software Visualization (VISSOFT 2013), , Sep; Wettel, R., Lanza, M., Visualizing software systems as cities (2007) Proc. of the 4th International Workshop on Visualizing Software for Understanding and Analysis (VISSOFT 2007), , Jun; Fittkau, F., Finke, S., Hasselbring, W., Waller, J., (2015) Experimental Data For: Comparing Trace Visualizations for Program Comprehension Through Controlled Experiments, , May; Shneiderman, B., (1980) Software Psychology: Human Factors in Computer and Information Systems, , Winthrop Publishers, Inc; Wettel, R., (2010) Software Systems As Cities, , Ph.D. dissertation, University of Lugano; Brooks, R., Towards a theory of the comprehension of computer programs (1983) International Journal of Man-Machine Studies, 18 (6), pp. 543-554; Shneiderman, B., The eyes have it: A task by data type taxonomy for information visualizations (1996) Proc. of the IEEE Symposium on Visual Languages, pp. 336-343. , IEEE; Ehlers, J., Van Hoorn, A., Waller, J., Hasselbring, W., Self-adaptive software system monitoring for performance anomaly localization (2011) Proc. of the 8th IEEE/ACM International Conference on Autonomic Computing (ICAC 2011), pp. 197-200. , ACM, Jun; Lindsay, R.M., Ehrenberg, A.S., The design of replicated studies (1993) The American Statistician, 47 (3), pp. 217-228; Rajlich, V., Cowan, G.S., Towards standard for experiments in program comprehension (1997) Proc. of the 5th International Workshop on Program Comprehension (IWPC 1997), pp. 160-161. , IEEE; Kitchenham, B.A., Pfleeger, S.L., Pickard, L.M., Jones, P.W., Hoaglin, D.C., El Emam, K., Rosenberg, J., Preliminary guidelines for empirical research in software engineering (2002) IEEE TSE, 28 (8), pp. 721-734; Jedlitschka, A., Pfahl, D., Reporting guidelines for controlled experiments in software engineering (2005) Proc. of the International Symposium on Empirical Software Engineering (ISESE 2005), , IEEE; Di Lucca, G.A., Di Penta, M., Experimental settings in program comprehension: Challenges and open issues (2006) Proc. of the 14th IEEE International Conference on Program Comprehension (ICPC 2006), pp. 229-234. , IEEE; Di Penta, M., Stirewalt, R.E.K., Kraemer, E., Designing your next empirical study on program comprehension (2007) Proc. of the 15th IEEE International Conference on Program Comprehension (ICPC 2007), pp. 281-285. , June; Sensalire, M., Ogao, P., Telea, A., Evaluation of software visualization tools: Lessons learned (2009) Proc. of the 5th IEEE International Workshop on Visualizing Software for Understanding and Analysis (VISSOFT 2009), pp. 19-26. , Sep; Wettel, R., Lanza, M., Robbes, R., Software systems as cities: A controlled experiment (2011) Proceedings of the 33rd International Conference on Software Engineering (ICSE 2011), pp. 551-560. , ACM; Basili, V.R., Weiss, D.M., A methodology for collecting valid software engineering data (1984) IEEE TSE, SE-10 (6). , Nov; Pacione, M.J., Roper, M., Wood, M., A novel software visualisation model to support software comprehension (2004) Proc. of the 11th Working Conference on Reverse Engineering (WCRE 2004), , Nov; Likert, R., A technique for the measurement of attitudes (1932) Archives of Psychology, 22 (140), pp. 5-55; Wong, K., Rigi User's Manual - Version 5.4.4, , http://www.rigi.cs.uvic.ca/downloads/rigi/doc/rigi-5.4.4-manual.pdf, last accessed 14-09-05. [Online]; Shapiro, S.S., Wilk, M.B., An analysis of variance test for normality (complete samples) (1965) Biometrika, pp. 591-611; Razali, N., Wah, Y.B., Power comparisons of Shapiro-Wilk, Kolmogorov-Smirnov, Lilliefors and Anderson-Darling tests (2011) Journal of Statistical Modeling and Analytics, 2 (1), pp. 21-33; Pearson, E., Hartley, H., (1972) Biometrika Tables for Statisticians, , 2nd ed. Cambridge University Press; Levene, H., Robust tests for equality of variances (1960) Contributions to Probability and Statistics: Essays in Honor of Harold Hotelling, 2, pp. 278-292; Shadish, W.R., Cook, T.D., Campbell, D.T., (2002) Experimental and Quasiexperimental Designs for Generalized Causal Inference, , Wadsworth - Cengage Learning; Juristo, N., Moreno, A.M., (2010) Basics of Software Engineering Experimentation, , Springer; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M.C., Regnell, B., Wesslén, A., (2012) Experimentation in Software Engineering, , Springer; Marcus, A., Comorski, D., Sergeyev, A., Supporting the evolution of a software visualization tool through usability studies (2005) Proc. of the 13th International Workshop on Program Comprehension (IWPC 2005), pp. 307-316. , May; Quante, J., Do dynamic object process graphs support program understanding? - A controlled experiment (2008) Proc. of the 16th IEEE International Conference on Program Comprehension (ICPC 2008), pp. 73-82. , June; Sharif, B., Jetty, G., Aponte, J., Parra, E., An empirical study assessing the effect of SeeIT 3D on comprehension (2013) Proc. of the 1st IEEE Working Conference on Software Visualization (VISSOFT 2013), pp. 1-10. , Sep; Lange, C., Chaudron, M.R.V., Interactive views to improve the comprehension of UML models - An experimental validation (2007) Proc. of the 15th IEEE International Conference on Program Comprehension (ICPC 2007), pp. 221-230. , June; Crick, T., Hall, B.A., Ishtiaq, S., Can I implement your algorithm?: A model for reproducible research software (2014) Proc. of the 2nd Workshop on Sustainable Software for Science: Practice and Experiences (WSSSPE2), pp. 1-4. , arXiv, Nov; Trümper, J., Bohnet, J., Döllner, J., Understanding complex multithreaded software systems by using trace visualization (2010) Proc. of the 5th International Symposium on Software Visualization (SOFTVIS 2010), pp. 133-142. , ACM},
  review              = {{E C10}},
  source              = {Scopus},
  sponsors            = {IEEE Computer Society Technical Council on Software Engineering (TCSE)},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961387713&doi=10.1109%2fICPC.2015.37&partnerID=40&md5=67d2c93f5b334adb9f78b94fb066e549},
}

@Article{França201479,
  author                  = {França, A.C.C. and Da Silva, F.Q.B. and Felix, A.D.L.C. and Carneiro, D.E.S.},
  title                   = {Motivation in software engineering industrial practice: A cross-case analysis of two software organisations},
  journal                 = {Information and Software Technology},
  year                    = {2014},
  volume                  = {56},
  number                  = {1},
  pages                   = {79-101},
  issn                    = {09505849},
  note                    = {cited By 8},
  abbrev_source_title     = {Inf Software Technol},
  abstract                = {Context The research about motivation in software engineering has provided important insights into characterizing factors and outcomes related to motivation. However, the complex relationships among these factors, including the moderating and mediating effects of organisational and individual characteristics, still require deeper explanatory investigation. Objective Our general goal is to build explanatory theories of motivation in different software organisations and to integrate these local theories towards a comprehensive understanding of the role of motivation in the effectiveness of the individuals and the teams in which they work. In this article, we describe the integrative synthesis of the results of two case studies performed with software organisations in different business contexts. Method We performed two case studies using a multiple-case, replication design, focusing on the software engineers as the unit of analysis. For 13 months, we conducted semi structured interviews, diary studies, and document analyses, and analysed the collected data using grounded theory procedures. The results of the two cases were synthesized using a meta-ethnography supported process. Results We built translations of the concepts and propositions from the two studies into one another. We then used the translations to build a central story of motivation that synthesizes the individual stories. This synthesis is contextualized by the differences in organisational and individual characteristics. Conclusion The differences in organisational contexts and in the characteristics of the software engineers in each study provided rich explanations for contrasts in perceptions and feelings about motivation in both organisations. The theory that emerged from the synthesis, supported by these explanations, provides a deeper understanding of the interplay between motivators and outcomes, and the needs and personal goals of the software engineers. This theory also characterises the role of team cohesion in motivation, advancing previous models about motivation in software engineering. © 2013 Elsevier B.V. All rights reserved.},
  affiliation             = {Centre for Informatics, UFPE Cidade Universitária, 50.540-740 Recife, Brazil; Faculdade de Filosofia, Ciências e Letras de Caruaru, FAFICA, Rua Azevedo Coutinho, S/N - Petrópolis, Caruaru, Brazil},
  author_keywords         = {Meta-ethnography; Motivation; Multi-case replication design; Qualitative research; Software engineer; Software engineering},
  coden                   = {ISOTE},
  comment                 = {Lo considero una replicación pq replica el diseño. Analiza la motivación y lo clasifico en C4 que son humanos},
  correspondence_address1 = {Da Silva, F.Q.B.; Centre for Informatics, UFPE Cidade Universitária, 50.540-740 Recife, Brazil; email: fabio@cin.ufpe.br},
  document_type           = {Article},
  doi                     = {10.1016/j.infsof.2013.06.006},
  keywords                = {Complex relationships; Individual characteristics; Integrative synthesis; Meta-ethnography; Qualitative research; Replication designs; Semi structured interviews; Software organisations, Engineers; Research; Societies and institutions; Software engineering; Translation (languages), Motivation},
  language                = {English},
  references              = {Hackman, J.R., The design of work teams (1987) Handbook of Organizational Behavior, pp. 315-342. , J. Lorsch, Prentice-Hall Englewood Cliffs; Hackman, J.R., Oldham, G.R., Motivation through the design of work: Test of a theory (1976) Organizational Behavior and Human Performance, 16, pp. 250-279; Furnham, A., Eracleous, A., Personality, motivation and job satisfaction: Hertzberg meets the Big Five (2009) Journal of Managerial Psychology, 24 (8), pp. 765-779; Beecham, S., Baddoo, N., Hall, T., Robinson, H., Sharp, H., Motivation in software engineering: A systematic literature review (2008) Information and Software Technology, 50 (910), pp. 860-878; França, A.C.C., Gouveia, T.B., Santos, P.C.F., Santana, C.A., Da Silva, F.Q.B., Motivation in software engineering: A systematic review update (2011) Proceedings of 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), pp. 154-163. , Durham, UK; Sharp, H., Badoo, N., Beecham, S., Hall, T., Robinson, H., Models of motivation in software engineering (2009) Information and Software Technology, 51, pp. 219-233; Hall, T., Baddoo, N., Beecham, S., Robinson, H., Sharp, H., A systematic review of theory use in studies investigating the motivations of software engineers (2009) ACM Transactions on Software Engineering and Methodology, 18 (3), pp. 1-29. , 10.1145/1525880.1525883; Hall, T., Sharp, H., Beecham, S., Baddoo, N., Robinson, H., What do we know about developer motivation (2008) IEEE Software, 25 (4), pp. 92-94. , doi: 10.1109/MS.2008.105; França, A.C.C., Da Silva, F.Q.B., Towards understanding the underlying structure of motivational factors for software engineers to guide the definition of motivational programs (2011) JSS, , 10.1016/j.jss.2010.12.017; França, A.C.C., Felix, A.L.C., Da Silva, F.Q.B., Towards an explanatory theory of motivation in software engineering: A qualitative case study of a government organization (2012) Proceedings of the 16th International Conference on Evaluation and Assessment in Software Engineering, EASE'2012, , Castilla La-Mancha; França, A.C.C., Carneiro, D.E.S., Da Silva, F.Q.B., Towards an explanatory theory of motivation in software engineering: A qualitative case study of a small software company (2012) Proceedings of the 26th Brazilian Symposium on Software Engineering (SBES'2012) Natal; França, A.C.C., Felix, A.L.C., Da Silva, F.Q.B., Appendices Of: Towards An Explanatory Theory of Motivation in Software Engineering: A Qualitative Case Study of A Government Organization, HASE Technical Report No. 2012-001, 2012, , http://goo.gl/Rs8AO; França, A.C.C., Carneiro, D.E.S., Da Silva, F.Q.B., Appendices Of: Towards An Explanatory Theory of Motivation in Software Engineering: A Qualitative Case Study of A Small Software Company, HASE Technical Report No. 2012-003, , http://goo.gl/1dGn4; Pritchard, R., Ashwood, E., (2008) Managing Motivation: A Manager's Guide to Diagnosing and Improving Motivation, , CRC Press; Latham, P., Ernst, C.T., Keys to motivating tomorrow's workforce (2006) Human Resource Management Review, 16 (2), pp. 181-198. , 10.1016/j.hrmr.2006.03.014; Bandura, A., Self-efficacy mechanism in human agency (1982) American Psychologist, 37, pp. 122-147; Katzell, R.A., Thompson, D.E., Work motivation: Theory and practice (1990) American Psychologist, 45 (2), pp. 144-153; Rogers, S., Ludington, J., Graham, S., (1997) Motivation & Learning: A Teacher's Guide to Building Excitement for Learning & Igniting the Drive for Quality, , third ed. Peak Learning Systems Evergreen; Steers, R.M., Mowday, R.T., Shapiro, D.L., The future of work motivation theory (2004) Academy of Management Review, 29 (3), pp. 379-387. , 10.5465/AMR.2004.13670978; Maslow, A.H., (1954) Motivation and Personality, , Harper and Roe New York; Herzberg, F., Mausner, B., Snyderman, B.B., (1959) Motivation to Work, , second ed. Wiley New York; McClelland, D.C., (1961) The Achieving Society, , D. Van Nostrand Co., Inc. Princeton, NJ; Skinner, B.F., Operant behavior (1963) American Psychologist; Vroom, V.H., (1964) Work and Motivation, , Wiley New York; Locke, E.A., Toward a theory of task motivation and incentives (1968) Organizational Behavior and Human Performance, 3, pp. 157-189; Guzzo, R.A., Types of rewards, cognitions, and work motivation (1979) The Academy of Management Review, 4 (1), pp. 75-86; Couger, J.D., Zawacki, R.A., (1980) Motivating and Managing Computer Personnel, , Wiley-Interscience; Beecham, S., Sharp, H., Baddoo, N., Hall, T., Robinson, H., (2007) Does the XP Environment Meet the Motivational Needs of the Software Developer An Empirical Study, , Proceedings of the AGILE 2007 (AGILE '07) IEEE Computer Society Washington DC, USA; Tessem, B., Maurer, F., Job satisfaction and motivation in a large agile team (2007) Proceedings of the 8th International Conference on Agile Processes in Software Engineering and Extreme Programming (XP'07). Lecture Notes in Computer Science, 4536, pp. 54-61. , 2007 doi:10.1007/978-3-540-73101-6-8; Sach, R., Sharp, H., Petre, M., Software engineers' Perceptions of factors in motivation (2011) Proceeding of International Symposium on Empirical Software Engineering and Measurement (ESEM), Banff, AB, pp. 368-371; Wright, B.E., Public-sector work motivation: A review of the current literature and a revised conceptual model (2001) Journal of Public Administration Research and Theory (J-PART), 11 (4), pp. 559-586; Perry, J.L., Poter, L.W., Factors affecting the context for motivation in public organizations (1982) The Academy of Management Review, 7 (1), pp. 89-98; Reid, M.F., Allen, M.W., Riemenschneider, C.K., Armstrong, D.J., Affective commitment in the public sector: The case of IT employees (2006) Proceedings of the 2006 ACM SIGMIS CPR Conference on Computer Personnel Research: Forty Four Years of Computer Personnel Research: Achievements, Challenges & the Future, , ACM New York, NY, USA; Merriam, S.B., (2009) Qualitative Research: A Guide to Design and Implementation, , Jossey-Bass San Francisco; Denzin, N.K., Lincoln, Y.S., The Sage Handbook of Qualitative Research, , third ed., Sage, Thousand Oaks, CA; Runeson, P., Höst, M., Guidelines for conducting and reporting case study research in software engineering (2008) Empirical Software Engineering, 14 (2), pp. 131-164; Yin, R.K., (2003) Case Study Research Design and Methods, , third ed. Sage London; Glaser, B.G., Strauss, A., (1967) The Discovery of Grounded Theory, , Aldine Chicago; Rieman, J., The diary study: A workplace-oriented research tool to guide laboratory efforts (1993) Proceedings of the INTERACT '93 and CHI '93 Conference on Human Factors in Computing Systems, , ACM New York, NY, USA; Dearman, D., Kellar, M., Truong, K.N., An examination of daily information needs and sharing opportunities (2008) Proceedings of the 2008 ACM Conference on Computer Supported Cooperative Work (CSCW'08), , ACM New York, NY, USA; Strauss, A.C., Corbin, J.M., (2007) Basics of Qualitative Research: Second Edition: Techniques and Procedures for Developing Grounded Theory, , third ed. Sage Publications Inc; Cruzes, D.S., Dybå, T., Synthesizing evidence in software engineering research (2010) Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement - ESEM '10, p. 1. , New York, New York, USA, ACM Press doi:10.1145/1852786.1852788; Sandelowski, M., Barroso, J., (2007) Handbook of Synthesizing Qualitative Research, , Springer Publishing Company New York; Noblit, G.W., Hare, R.D., (1988) Meta-Ethnography: Synthesizing Qualitative Studies (Qualitative Research Methods), , Sage Publications Inc; Britten, N., Campbell, R., Pope, C., Donovan, H., Morgan, M., Pill, R., Using meta ethnography to synthesise qualitative research: A worked example (2002) Journal of Health Services Research & Policy, 7 (4), pp. 209-215; Sjøberg, D.I.K., Dybå, T., Anda, B.C.D., Hannay, J.E., Building theories in software engineering (2008) Guide to Advanced Empirical Software Engineering, pp. 312-336. , F. Shull, J. Singer, D.I.K. Sjøberg, Springer Chapter 12; Dalton, G.W., Thompson, P.H., Price, R.L., The four stages of professional career - A new look at performance by professionals (1977) Organizational Dynamics, 6 (1), pp. 19-42; Yeatts, D.E., Hyten, C., (1998) High-Performing Self-Managed Work Teams, , Sage Publications Inc; Cohen, S.G., Designing Effective Self-Managing Work Teams (1993) Advances in Interdisciplinary Studies of Work Teams, 1 VOL.. , M. Beyerlein, Series of Self-managed Work Teams JAI Press Greeenwich, Connecticut; Lung, J., On the difficulty of replicating human subjects studies in software engineering (2008) ICSE'2008: Proceedings of the 13th International Conference on Software Engineering, , New York; Silva Da, B.F.Q., Suassuna, M., França, A.C.C., Grubb, A.M., Gouveia, T.B., Monteiro, C.V.F., Dos Santos, I.I., (2012) Replication of Empirical Studies in Software Engineering Research: A Systematic Mapping Study, Empir Software Eng, Springer, , doi:10.1007/s10664-012-9227-7; Davison, R.M., Martinsons, M.G., Kock, N., Principles of canonical action research (2004) Information Systems Journal, 14 (1), pp. 65-86; Hsu, M.K., Chen, H.G., Jiang, J.J., Klein, G., Career satisfaction for managerial and technical anchored is personnel in later career stages (2003) The DATA BASE for Advances in Information Systems, 34 (4), pp. 64-72},
  review                  = {{CS C12}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84888344448&doi=10.1016%2fj.infsof.2013.06.006&partnerID=40&md5=6960962a77a1e86eb1639e38a69b743d},
}

@Conference{Fucci2016,
  author              = {Fucci, D. and Scanniello, G. and Romano, S. and Shepperd, M. and Sigweni, B. and Uyaguari, F. and Turhan, B. and Juristo, N. and Oivo, M.},
  title               = {An External Replication on the Effects of Test-driven Development Using a Multi-site Blind Analysis Approach},
  year                = {2016},
  volume              = {08-09-September-2016},
  publisher           = {IEEE Computer Society},
  note                = {cited By 0; Conference of 10th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM 2016 ; Conference Date: 8 September 2016 Through 9 September 2016; Conference Code:123971},
  abbrev_source_title = {Int. Symp. Empir. Softw. Eng. Meas.},
  abstract            = {Context: Test-driven development (TDD) is an agile practice claimed to improve the quality of a software product, as well as the productivity of its developers. A previous study (i.e., baseline experiment) at the University of Oulu (Finland) compared TDD to a test-last development (TLD) approach through a randomized controlled trial. The results failed to support the claims. Goal: We want to validate the original study results by replicating it at the University of Basilicata (Italy), using a different design. Method: We replicated the baseline experiment, using a crossover design, with 21 graduate students. We kept the settings and context as close as possible to the baseline experiment. In order to limit researchers bias, we involved two other sites (UPM, Spain, and Brunel, UK) to conduct blind analysis of the data. Results: The Kruskal-Wallis tests did not show any significant difference between TDD and TLD in terms of testing effort (p-value = .27), external code quality (p-value = .82), and developers' productivity (p-value = .83). Nevertheless, our data revealed a difference based on the order in which TDD and TLD were applied, though no carry over effect. Conclusions: We verify the baseline study results, yet our results raises concerns regarding the selection of experimental objects, particularly with respect to their interaction with the order in which of treatments are applied. We recommend future studies to survey the tasks used in experiments evaluating TDD. Finally, to lower the cost of replication studies and reduce researchers' bias, we encourage other research groups to adopt similar multi-site blind analysis approach described in this paper.},
  affiliation         = {M-Group, University of Oulu, Oulu, Finland; University of Basilicata, Potenza, Italy; Brunel University, London, United Kingdom; Universidad Politécnica de Madrid, Madrid, Spain; M-Group, University of Oulu, Universidad Politécnica de Madrid, Spain},
  art_number          = {a3},
  author_keywords     = {blind analysis; external experiment replication; test-driven development},
  document_type       = {Conference Paper},
  doi                 = {10.1145/2961111.2962592},
  funding_details     = {Suomen Akatemia},
  funding_text        = {This research is supported in part by the Academy of Finland Project 278354.},
  isbn                = {9781450344272},
  issn                = {19493770},
  journal             = {International Symposium on Empirical Software Engineering and Measurement},
  keywords            = {Computer programming; Productivity; Software engineering; Students, blind analysis; Carry-over effects; external experiment replication; External replication; Graduate students; Kruskal-Wallis tests; Randomized controlled trial; Test driven development, Software testing},
  language            = {English},
  references          = {Baker, M., Over half of psychology studies fail reproducibility test (2015) Nature News, (27); Baldassarre, M.T., Carver, J., Dieste, O., Juristo, N., Replication types: Towards a shared taxonomy (2014) Proc. of International Conference on Evaluation and Assessment in Software Engineering, 181-184. , ACM; Bebarta, V., Luyten, D., Heard, K., Emergency medicine animal research: Does use of randomization and blinding aect the results (2003) Academic Emergency Medicine, 10 (6), pp. 67684-67687; Beck, K., (2003) Test-driven Development: By Example, , Addison-Wesley Professional; Carver, J., Jaccheri, L., Morasca, S., Shull, F., Issues in using students in empirical studies in software engineering education (2003) Proceedings of International Symposium on Software Metrics, pp. 239-251; Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) Proceedings of the 1st International Workshop on Replication in Software Engineering (RESER); Ciolkowski, M., What do we know about perspective-based reading an approach for quantitative aggregation in software engineering (2009) Proceedings of the 2009 3rd International Symposium on Empirical Software Engineering and Measurement, pp. 133-144. , IEEE Computer Society; Ciolkowski, M., Muthig, D., Rech, J., Using academic courses for empirical validation of software development processes (2004) EUROMICRO Conference, pp. 354-361; Da Silva, F.Q.B., Suassuna, M., Franca, A.C.C., Grubb, A.M., Gouveia, T.B., Monteiro, C.V.F., Dos Santos, I.E., Replication of empirical studies in software engineering research: A systematic mapping study (2014) Empirical Software Engineering, 19 (3); Erdogmus, H., Morisio, M., Torchiano, M., On the eectiveness of the test-rst approach to programming (2005) IEEE Transactions on Software Engineering, 31 (3), pp. 67226-67237. , Mar; Fowler, M., (2009) Refactoring: Improving the Design of Existing Code, , Pearson Education India; Fritz, C.O., Morris, P.E., Richler, J.J., Efect size estimates: Current use, calculations, interpretation (2012) Journal of Experimental Psychology: General, 141 (1), p. 2; Fucci, D., Turhan, B., A replicated experiment on the e-ectiveness of test-first development (2013) 2013 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM, pp. 103-112. , IEEE, Oct; Fucci, D., Turhan, B., On the role of tests in test-driven development: A di-erentiated and partial replication (2014) Empirical Software Engineering, 19 (2), pp. 277-302; Fucci, D., Turhan, B., Oivo, M., Conformance factor in test-driven development: Initial results from an enhanced replication (2014) Proc. of the 18th International Conference on Evaluation and Assessment in Software Engineering ACM; Fucci, D., Turhan, B., Oivo, M., Impact of process conformance on the e-ects of test-driven development (2014) The 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurements, pp. 1-10. , ACM Press; Fucci, D., Turhan, B., Oivo, M., On the efects of programming and testing skills on external quality and productivity in a test-driven development context (2015) Proc. of the 19th International Conference on Evaluation and Assessment in Software Engineering, EASE '15, , ACM; George, B., Williams, L., A structured experiment of test-driven development (2004) Information and Software Technology, 46 (5), pp. 67337-67342; Gfomez, O.S., Juristo, N., Vegas, S., Understanding replication of experiments in software engineering: A classi cation (2014) Information and Software Technology, 56 (8), pp. 1033-1048. , Aug; Hannay, J., Jfrgensen, M., The role of deliberate artifcial design elements in software engineering experiments (2008) IEEE Trans. on Soft. Eng., 34, pp. 67242-67259. , March; Hettmansperger, T.P., McKean, J.W., (2010) Robust Nonparametric Statistical Methods, , CRC Press; Ivarsson, M., Gorschek, T., A method for evaluating rigor and industrial relevance of technology evaluations (2010) Empirical Software Engineering, 16 (3), pp. 365-395. , Oct; Juristo, N., Vegas, S., Using diferences among replications of software engineering experiments to gain knowledge (2009) Empirical Software Engineering and Measurement, 2013 ACM/IEEE International Symposium on, pp. 356-366. , IEEE; Juristo, N., Vegas, S., Solari, M.N., Abrahao, S., A process for managing interaction between experimenters to get useful similar replications (2013) Information and Software Systems Journal; Kitchenham, B., The role of replications in empirical software engineering- A word of warning (2008) Empirical Software Engineering, 13 (2), pp. 67219-67221; MacCoun, R., Perlmutter, S., Blind analysis: Hide results to seek the truth (2015) Nature, 526, pp. 187-189; Madeyski, L., The impact of test-rst programming on branch coverage and mutation score indicator of unit tests: An experiment (2010) Information and Software Technology, 52 (2), pp. 169-184; Maximilien, E.M., Williams, L., Assessing test-driven development at IBM (2003) Proceedings of the 25th International Conference on Software Engineering, ICSE '03, pp. 564-569. , Washington, DC, USA IEEE Computer Society; Maxwell, S.E., Delaney, H.D., (2004) Designing Experiments and Analyzing Data: A Model Comparison Perspective, 1. , Psychology Press; Mendonca, M.G., Maldonado, J.C., De Oliveira, M.C.F., Carver, J., Fabbri, S.C.P.F., Shull, F., Travassos, G.H., Basili, V.R., A framework for software engineering experimental replications (2008) Proc. of International Conference on Engineering of Complex Computer Systems, pp. 203-212. , IEEE Computer Society; Muller, M.M., Hofer, A., The efect of experience on the test-driven development process (2007) Empirical Software Engineering, 12 (6), pp. 593-615; Munir, H., Moayyed, M., Petersen, K., Considering rigor and relevance when evaluating test driven development: A systematic review (2014) Information and Software Technology; Panfcur, M., Ciglarifc, M., Impact of test-driven development on productivity, code and tests: A controlled experiment (2011) Information and Software Technology, 53 (6), pp. 557-573. , June; Pearson, K., Note on regression and inheritance in the case of two parents (1895) Proceedings of the Royal Society of London, 58, pp. 240-242; Peeger, S.L., Menezes, W., Marketing technology to software practitioners IEEE Software, 17 (1), pp. 6727-6733; Rafque, Y., Misic, V.B., The efects of test-driven development on external quality and productivity: A meta-analysis (2013) Software Engineering IEEE Transactions on, 39 (6), pp. 835-856; Shepperd, M., Bowes, D., Hall, T., Researcher bias: The use of machine learning in software defect prediction (2014) IEEE Transactions on Software Engineering, 40 (6), pp. 603-616; Shull, F., Carver, J.C., Vegas, S., Juzgado, N.J., The role of replications in empirical software engineering (2008) Empirical Software Engineering, 13 (2), pp. 67211-67218; Shull, F., Melnik, G., Turhan, B., Layman, L., Diep, M., Erdogmus, H., What do we know about test-driven development (2010) IEEE Software, 27 (6), pp. 16-19; Sigweni, B., Shepperd, M., Using blind analysis for software engineering experiments (2015) Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering, p. 32; Turhan, B., Layman, L., Diep, M., Erdogmus, H., Shull, F., (2010) How E-ective Is Test-Driven Development, pp. 207-217. , Making Software: What Really Works Why We Believe It; Vegas, S., Apa, C., Juristo, N., Crossover designs in software engineering experiments: Bene-ts and perils (2016) IEEE Transactions on Software Engineering, 42 (2), pp. 67120-67135. , Feb; Vonesh, E., Chinchilli, V.M., (1996) Linear and Nonlinear Models for the Analysis of Repeated Measurements, , CRC press; Wellek, S., Blettner, M., On the proper use of the crossover design in clinical trials (2012) Deutsches Arztebllatt Intern, 109, pp. 276-281; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M.C., Regnell, B., Wesslen, A., (2012) Experimentation in Software Engineering, , Springer Science & Business Media},
  review              = {{E C11 C5}},
  source              = {Scopus},
  sponsors            = {ACM Special Interest Group on Software Engineering (SIGSOFT); IEEE CS},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991666654&doi=10.1145%2f2961111.2962592&partnerID=40&md5=33e4be68fee8b847004d6a75102452b5},
}

@Article{Fucci2014277,
  author                  = {Fucci, D. and Turhan, B.},
  title                   = {On the role of tests in test-driven development: A differentiated and partial replication},
  journal                 = {Empirical Software Engineering},
  year                    = {2014},
  volume                  = {19},
  number                  = {2},
  pages                   = {277-302},
  issn                    = {13823256},
  note                    = {cited By 6},
  abbrev_source_title     = {Empir Software Eng},
  abstract                = {Background: Test-Driven Development (TDD) is claimed to have positive effects on external code quality and programmers' productivity. The main driver for these possible improvements is the tests enforced by the test-first nature of TDD as previously investigated in a controlled experiment (i.e. the original study). Aim: Our goal is to examine the nature of the relationship between tests and external code quality as well as programmers' productivity in order to verify/ refute the results of the original study. Method: We conducted a differentiated and partial replication of the original setting and the related analyses, with a focus on the role of tests. Specifically, while the original study compared test-first vs. test-last, our replication employed the test-first treatment only. The replication involved 30 students, working in pairs or as individuals, in the context of a graduate course, and resulted in 16 software artifacts developed. We performed linear regression to test the original study's hypotheses, and analyses of covariance to test the additional hypotheses imposed by the changes in the replication settings. Results: We found significant correlation (Spearman coefficient = 0.66, with p-value = 0.004) between the number of tests and productivity, and a positive regression coefficient (p-value = 0.011). We found no significant correlation (Spearman coefficient = 0.41 with p-value = 0.11) between the number of tests and external code quality (regression coefficient p-value = 0.0513). For both cases we observed no statistically significant interaction caused by the subject units being individuals or pairs. Further, our results are consistent with the original study although there were changes in the timing constraints for finishing the task and the enforced development processes. Conclusions: This replication study confirms the results of the original study concerning the relationship between the number of tests vs. external code quality and programmer productivity. Moreover, this replication allows us to identify additional context variables, for which the original results still hold; namely the subject unit, timing constraint and isolation of test-first process. Based on our findings, we recommend practitioners to implement as many tests as possible in order to achieve higher baselines for quality and productivity. © 2013 Springer Science+Business Media New York.},
  affiliation             = {Department of Information Processing Science, University of Oulu, Oulu, Finland},
  author_keywords         = {Productivity; Replication; Software quality; Software testing; Test-driven development},
  coden                   = {ESENF},
  comment                 = {Los autores son solo 2 de los 9 del anterior "An External Replication". Abstract muy similar a "An External Replication"},
  correspondence_address1 = {Turhan, B.; Department of Information Processing Science, University of Oulu, Oulu, Finland; email: burak.turhan@oulu.fi},
  document_type           = {Article},
  doi                     = {10.1007/s10664-013-9259-7},
  keywords                = {Computer software selection and evaluation; Software testing; Students, Controlled experiment; Development process; Partial replication; Programmer productivity; Regression coefficient; Replication; Software Quality; Test driven development, Productivity},
  language                = {English},
  publisher               = {Kluwer Academic Publishers},
  references              = {Astels, D., (2003) Test-driven Development: A Practical Guide, , Prentice Hall Professional Technical Reference Astels D (2003) Test-driven development: a practical guide. Prentice Hall Professional Technical Reference; Beck, K., (2003) Test-driven Development: By Example, , The Addison-Wesley signature series. Addison-Wesley Beck K (2003) Test-driven development: by example. The Addison-Wesley signature series. Addison-Wesley; Bhadauria, V., (2009) To Test before or to Test After-an Experimental Investigation of the Impact of Test Driven Development, , PhD thesis, The University of Texas at Arlington Bhadauria V (2009) To test before or to test after-an experimental investigation of the impact of test driven development. PhD thesis, The University of Texas at Arlington; Bramel, D., Friend, R., Hawthorne, the myth of the docile worker, and class bias in psychology (1981) Am Psychol, 36 (8), p. 867. , 10.1037/0003-066X.36.8.867; Brooks, A., Roper, M., Wood, M., Daly, J., Miller, J., Replication's role in software engineering (2008) Guide to Advanced Empirical Software Engineering, pp. 365-379. , Brooks A, Roper M, Wood M, Daly J, Miller J (2008) Replication's role in software engineering. In: Guide to advanced empirical software engineering, pp 365-379; Carver, J., Towards reporting guidelines for experimental replications: A proposal (2010) Proceedings of the 1st International Workshop on Replication in Empirical Software Engineering Research, , Carver J (2010) Towards reporting guidelines for experimental replications: a proposal. In: Proceedings of the 1st international workshop on replication in empirical software engineering research; Cousineau, D., Chartier, S., Outliers detection and treatment: A review (2010) Int J Psychol Res, 3 (1), pp. 58-67; Dieste O, F., Hidden evidence behind useless replications (2010) Proceedings of the 1st International Workshop on Replication in Empirical Software Engineering Research, , Dieste O, Fernandez E, García R, Juristo N (2010) Hidden evidence behind useless replications. In: Proceedings of the 1st international workshop on replication in empirical software engineering research; Erdogmus, H., Morisio, M., Marco, T., On the effectiveness of the test-first approach to programming (2005) IEEE Trans Softw Eng, 31 (3), pp. 226-237. , 10.1109/TSE.2005.37; Flohr, T., Schneider, T., Lessons learned from an xp experiment with students: Test-first needs more teachings (2006) Product-focused Software Process Improvement, pp. 305-318. , J. Mnch M. Vierimaa (eds) Springer Berlin/Heidelberg 10.1007/11767718-26 Flohr T, Schneider T (2006) Lessons learned from an xp experiment with students: test-first needs more teachings. In: Mnch J, Vierimaa M (eds) Product-focused software process improvement. Lecture notes in computer science, vol 4034. Springer, Berlin/Heidelberg, pp 305-318; George, B., Williams, L., A structured experiment of test-driven development (2004) Inform Softw Technol, 46 (5), pp. 337-342. , 10.1016/j.infsof.2003.09.011; George, B., Williams, L., An initial investigation of test driven development in industry (2003) Proceedings of the 2003 ACM Symposium on Applied Computing, SAC '03, pp. 1135-1139. , ACM New York, NY, USA 10.1145/952532.952753 George B, Williams L (2003) An initial investigation of test driven development in industry. In: Proceedings of the 2003 ACM symposium on applied computing, SAC '03. ACM, New York, NY, USA, pp 1135-1139; Huang, L., (2007) Analysis and Quantification of Test First Programming, , PhD thesis, The University of Sheffield Huang L (2007) Analysis and quantification of test first programming. PhD thesis, The University of Sheffield; Janzen, D., Saiedian, H., A leveled examination of test-driven development acceptance (2007) 29th International Conference on Software Engineering, ICSE, pp. 719-722; Johnson, P., Kou, H., Automated recognition of test-driven development with zorro (2007) AGILE 2007. IEEE, pp. 15-25. , Johnson P, Kou H (2007) Automated recognition of test-driven development with zorro. In: AGILE 2007. IEEE, pp 15-25; Juristo, N., Vegas, S., Using differences among replications of software engineering experiments to gain knowledge (2009) Proceedings of the 2009 3rd International Symposium on Empirical Software Engineering and Measurement, ESEM '09, pp. 356-366. , IEEE Computer Society Washington, DC, USA 10.1109/ESEM.2009.5314236 Juristo N, Vegas S (2009) Using differences among replications of software engineering experiments to gain knowledge. In: Proceedings of the 2009 3rd international symposium on empirical software engineering and measurement, ESEM '09. IEEE Computer Society, Washington, DC, USA, pp 356-366; Keefe, K., Sheard, J., Dick, M., Adopting xp practices for teaching object oriented programming (2006) Proceedings of the 8th Australasian Conference on Computing Education. ACE '06, Vol 52, pp. 91-100. , Australian Computer Society, Inc Darlinghurst, Australia, Australia Keefe K, Sheard J, Dick M (2006) Adopting xp practices for teaching object oriented programming. In: Proceedings of the 8th Australasian conference on computing education. ACE '06, vol 52. Australian Computer Society, Inc. Darlinghurst, Australia, Australia, pp 91-100; Madeyski, L., (2010) Test-driven Development: An Empirical Evaluation of Agile Practice, , Springer-Verlag New York Inc Madeyski L (2010) Test-driven development: an empirical evaluation of agile practice. Springer-Verlag New York Inc; Marchenko, A., Abrahamsson, P., Ihme, T., Long-term effects of test-driven development a case study (2009) Agile Processes in Software Engineering and Extreme Programming, pp. 13-22. , Abrahamsson P, Marchesi M, Maurer F (eds) Lecture notes in business information processing, vol 31. Springer Berlin Heidelberg Marchenko A, Abrahamsson P, Ihme T (2009) Long-term effects of test-driven development a case study. In: Abrahamsson P, Marchesi M, Maurer F (eds) Agile processes in software engineering and extreme programming. Lecture notes in business information processing, vol 31. Springer Berlin Heidelberg, pp 13-22; Melnik, G., Maurer, F., A cross-program investigation of students' perceptions of agile methods (2005) Proceedings. 27th International Conference on Software Engineering, pp. 481-488. , ICSE; Müller, M., Höfer, A., The effect of experience on the test-driven development process (2007) Empir Softw Eng, 12 (6), pp. 593-615. , 10.1007/s10664-007-9048-2; Pančur, M., Ciglarič, M., Impact of test-driven development on productivity, code and tests: A controlled experiment (2011) Inf Softw Technol, 53 (6), pp. 557-573. , 10.1016/j.infsof.2011.02.002; Pedroso, B., Jacobi, R., Pimenta, M., TDD effects: Are we measuring the right things (2010) Agile Processes in Software Engineering and Extreme Programming, pp. 393-394. , Pedroso B, Jacobi R, Pimenta M (2010) TDD effects: are we measuring the right things? In: Agile processes in software engineering and extreme programming, pp 393-394; Philipp, M., (2009) Comparison of the Test-driven Development Processes of Novice and Expert Programmer Pairs, , Philipp M (2009) Comparison of the test-driven development processes Of novice and expert programmer pairs; Rafique, Y., Mišić, V.B., The effects of test-driven development on external quality and productivity: A meta-analysis (2013) IEEE Trans Softw Eng, 39 (6), pp. 836-856. , http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber= 6197200&isnumber=6519220, 10.1109/TSE.2012.28 10.1109/TSE.2012.28; Raubenheimer, D., Simpson, S., Analysis of covariance: An alternative to nutritional indices (1992) Entomol Exp Appl, 62 (3), pp. 221-231. , 10.1111/j.1570-7458.1992.tb00662.x; Sanchez, J.C., Williams, L., Maximilien, E.M., On the sustained use of a test-driven development practice at ibm (2007) Proceedings of the AGILE 2007, AGILE '07, pp. 5-14. , IEEE Computer Society Washington, DC, USA 10.1109/AGILE.2007.43 Sanchez JC, Williams L, Maximilien EM (2007) On the sustained use of a test-driven development practice at ibm. In: Proceedings of the AGILE 2007, AGILE '07. IEEE Computer Society, Washington, DC, USA, pp 5-14; Shull, F., Melnik, G., Turhan, B., Layman, L., Diep, M., Erdogmus, H., What do we know about test-driven development? (2010) IEEE Softw, 27 (6), pp. 16-19. , 10.1109/MS.2010.152; Turhan, B., Layman, L., Diep, M., Erdogmus, H., Shull, F., (2010) How Effective Is Test Driven Development? O'Reilly Media, , Turhan B, Layman L, Diep M, Erdogmus H, Shull F (2010) How effective is test driven development? O'Reilly Media; Wohlin, C., (2000) Experimentation in Software Engineering: An Introduction, 6. , Springer Wohlin C (2000) Experimentation in software engineering: an introduction, vol 6. Springer; Xu, S., Li, T., Evaluation of test-driven development: An academic case study (2009) Software Engineering Research, Management and Applications, pp. 229-238. , Xu S, Li T (2009) Evaluation of test-driven development: an academic case study. In: Software Engineering Research, Management and Applications, pp 229-238; Yenduri, S., Perkins, L., Impact of using test-driven development: A case study (2006) Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers, SERP0́6, 1. , Yenduri S, Perkins L (2006) Impact of using test-driven development: a case study. In: Proceedings of the 2006 international conference on software engineering research and practice and conference on programming languages and compilers, SERP0́6, 1},
  review                  = {{E C11 C5}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896395526&doi=10.1007%2fs10664-013-9259-7&partnerID=40&md5=f9cf27598b6c8afdce66f9df2635b59a},
}

@Conference{Fucci2013103,
  author                  = {Fucci, D. and Turhan, B.},
  title                   = {A replicated experiment on the effectiveness of test-first development},
  year                    = {2013},
  pages                   = {103-112},
  address                 = {Baltimore, MD},
  note                    = {cited By 5; Conference of 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM 2013 ; Conference Date: 10 October 2013 Through 11 October 2013; Conference Code:102346},
  abbrev_source_title     = {Int. Symp. Empir. Softw. Eng. Meas.},
  abstract                = {Background: Test-first development (TF) is regarded as a development practice that can lead to better quality of software products, as well as improved developer productivity. By implementing unit tests before the corresponding production code, the tests themselves are the main driver to such improvements. The role of tests on the effectiveness of TF has been studied in a controlled experiment by Erdogmus et al. (i.e. original study). Aim: Our goal is to examine the impact of test-first (TF) development on product quality and developer productivity, specifically the role that tests play in it. Method: We replicated the original study's controlled experiment by comparing an experimental group applying TF to a control group applying a test-last approach. We then carried out a correlation study in order to understand whether the number of tests is a good predictor for external quality and/or productivity. Results: Mann-Whitney tests did not show any significant difference between the two groups in terms of number of tests written (W=114.5, p=0.38), developers' productivity (W=90, p=0.82) and external quality (W=81.55, p=0.53). In addition, while a significant correlation exists between the number of tests and productivity (Spearman's ? = 0.57, p © 2013 IEEE.},
  affiliation             = {Department of Information Processing Science, University of Oulu, Oulu, Finland},
  art_number              = {6681343},
  author_keywords         = {experiment replication; productivity; software quality; test-driven development},
  comment                 = {Es una técnica distinta "Test-first development (TF) " antes en las 2 anteriores era "Test-Driven Development (TDD) "},
  correspondence_address1 = {Department of Information Processing Science, University of Oulu, Oulu, Finland},
  document_type           = {Conference Paper},
  doi                     = {10.1109/ESEM.2013.15},
  issn                    = {19493770},
  journal                 = {International Symposium on Empirical Software Engineering and Measurement},
  keywords                = {Controlled experiment; Correlation studies; Development practices; Quality of softwares; Replicated experiment; Software Quality; Test driven development; Test-first development, Computer software selection and evaluation; Experiments; Productivity; Software engineering, Software testing},
  language                = {English},
  references              = {Beck, K., Test-driven development: By example, ser (2003) The Addison-Wesley Signature Series, , Addison-Wesley; Astels, D., (2003) Test Driven Development: A Practical Guide, , Prentice Hall Professional Technical Reference; Shull, F., Melnik, G., Turhan, B., Layman, L., Diep, M., Erdogmus, H., What do we know about test-driven development (2010) Software, IEEE, 27 (6), pp. 16-19; Siniaalto, M., Abrahamsson, P., Does test-driven development improve the program code? Alarming results from a comparative case study (2008) Balancing Agility and Formalism in Software Engineering, pp. 143-156; Erdogmus, H., Morisio, M., Torchiano, M., On the effectiveness of the test-first approach to programming (2005) IEEE Transactions on Software Engineering, 31 (3), pp. 226-237; Juristo, N., Vegas, S., Using differences among replications of software engineering experiments to gain knowledge (2009) Proceedings of the 2009 3rd International Symposium on Empirical Software Engineering and Measurement, Ser. ESEM '09. Washington, DC, USA: IEEE Computer Society, pp. 356-366. , http://dx.doi.org/10.1109/ESEM.2009.5314236; Shull, F., Carver, J., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empirical Software Engineering, 13 (2), pp. 211-218; Turhan, B., Layman, L., Diep, M., Erdogmus, H., Shull, F., (2010) How Effective Is Test Driven Development, , O'Reilly Media; Rafique, Y., Misic, V., (2012) The Effects of Test-driven Development on External Quality and Productivity: A Meta-Analysis; Xu, L.T.S., Evaluation of test-driven development: An academic case study (2009) Studies in Computational Intelligence, 253, pp. 229-238; Bhadauria, V., (2009) To Test before or to Test After-An Experimental Investigation of the Impact of Test Driven Development, , Ph.D. dissertation, The University of Texas at Arlington; Yenduri, S., Perkins, L., Impact of using test-driven development: A case study (2006) Software Engineering Research and Practice, pp. 126-129; George, B., (2002) Analysis and Quantification of Test Driven Development Approach; Canfora, G., Cimitile, A., Garcia, F., Piattini, M., Visaggio, C.A., Evaluating advantages of test driven development: A controlled experiment with professionals (2006) Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering. ACM, pp. 364-371; George, B., Williams, L., A structured experiment of test-driven development (2004) Information and Software Technology, 46 (5), pp. 337-342; Madeyski, L., (2009) Test-driven Development: An Empirical Evaluation of Agile Practice, , Springer; Huang, L., (2007) Analysis and Quantification of Test First Programming, , Ph.D. dissertation, The University of Sheffield, Aug; Pancur, M., Ciglaric, M., Impact of test-driven development on productivity, code and tests: A controlled experiment (2011) INFORMATION and SOFTWARE TECHNOLOGY, 53 (6), pp. 557-573. , Jun; Maximilien, E.M., Williams, L., Assessing test-driven development at ibm (2003) Software Engineering, 2003. Proceedings. 25th International Conference On. IEEE, pp. 564-569; Bhat, T., Nagappan, N., Evaluating the efficacy of test-driven development: Industrial case studies (2006) Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering. ACM, pp. 356-363; Melnik, G., Maurer, F., A cross-program investigation of students' perceptions of agile methods (2005) Software Engineering, 2005. ICSE 2005. Proceedings. 27th International Conference On. IEEE, pp. 481-488; Janzen, D.S., Saiedian, H., A leveled examination of test-driven development acceptance (2007) Software Engineering, 2007. ICSE 2007. 29th International Conference On. IEEE, pp. 719-722; Flohr, T., Schneider, T., Lessons learned from an xp experiment with students: Test-first needs more teachings (2006) Product-Focused Software Process Improvement, pp. 305-318; Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) RESER2010: Proceedings of the 1st International Workshop on Replication in Empirical Software Engineering Research, Cape Town, South Africa, 4; Wohlin, C., (2000) Experimentation in Software Engineering: An Introduction, 6. , Springer; Sato, D.T., Corbucci, H., Bravo, M.V., Coding dojo: An environment for learning and sharing agile practices (2008) Agile, 2008. AGILE'08. Conference. IEEE, pp. 459-464; Lilliefors, H.W., On the kolmogorov-smirnov test for normality with mean and variance unknown (1967) Journal of the American Statistical Association, 62 (318), pp. 399-402; Mann, H.B., Whitney, D.R., On a test of whether one of two random variables is stochastically larger than the other (1947) The Annals of Mathematical Statistics, 18 (1), pp. 50-60; Fritz, C.O., Morris, J.J., Richler, P.E., Effect size estimates: Current use, calculations, and interpretation (2012) Journal of Experimental Psychology: General, 141, pp. 2-18; Kampenes, V.B., Dyba, T., Hannay, J.E., Sjøberg, D.I., A systematic review of effect size in software engineering experiments (2007) Information and Software Technology, 49 (11), pp. 1073-1086; Howell, D.C., (2012) Statistical Methods for Psychology, , Wadsworth Publishing Company; Pena, E.A., Slate, E.H., Global validation of linear model assumptions (2006) Journal of the American Statistical Association, 101 (473), pp. 341-354; Cook, T.D., Campbell, D.T., Day, A., (1979) Quasi-experimentation: Design &Analysis Issues for Field Settings, , Houghton Mifflin Boston; Adair, J.G., The hawthorne effect: A reconsideration of the methodological artifact (1984) Journal of Applied Psychology, 69 (2), p. 334; Fay, M.P., Proschan, M.A., Wilcoxon-mann-whitney or t-test? on assumptions for hypothesis tests and multiple interpretations of decision rules (2010) Statistics Surveys, 4, p. 1; Muller, M., Hofer, A., The effect of experience on the test-driven development process (2007) Empirical Software Engineering, 12 (6), pp. 593-615; Philipp, M., (2009) Comparison of the Test-Driven Development Processes of Novice and Expert Programmer Pairs; Maxwell, S.E., Delaney, H.D., (2004) Designing Experiments and Analyzing Data; Madeyski, L., The impact of test-first programming on branch coverage and mutation score indicator of unit tests: An experiment (2010) Inf. Softw. Technol., 52 (2), pp. 169-184. , http://dx.doi.org/10.1016/j.infsof.2009.08.007, Feb; Causevic, A., Sundmark, D., Punnekkat, S., Test case quality in test driven development: A study design and a pilot experiment (2012) Evaluation Assessment in Software Engineering (EASE 2012), 16th International Conference on, pp. 223-227; Johnson, P., Kou, H., Automated recognition of test-driven development with zorro (2007) AGILE 2007. IEEE, pp. 15-25},
  review                  = {{E C11 C5}},
  source                  = {Scopus},
  sponsors                = {Experimental Software Engi. Group at; COPPE/Federal University of Rio de Janeiro; Fraunhofer Center for Experimental Software Eng.; IEEE Software; Microsoft Research},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893312566&doi=10.1109%2fESEM.2013.15&partnerID=40&md5=1c7eb9bf73688875cff8c5e81ded95ce},
}

@Conference{Ghotra2015789,
  author              = {Ghotra, B. and McIntosh, S. and Hassan, A.E.},
  title               = {Revisiting the impact of classification techniques on the performance of defect prediction models},
  year                = {2015},
  volume              = {1},
  pages               = {789-800},
  publisher           = {IEEE Computer Society},
  note                = {cited By 22; Conference of 37th IEEE/ACM International Conference on Software Engineering, ICSE 2015 ; Conference Date: 16 May 2015 Through 24 May 2015; Conference Code:116104},
  abbrev_source_title = {Proc Int Conf Software Eng},
  abstract            = {Defect prediction models help software quality assurance teams to effectively allocate their limited resources to the most defect-prone software modules. A variety of classification techniques have been used to build defect prediction models ranging from simple (e.g., logistic regression) to advanced techniques (e.g., Multivariate Adaptive Regression Splines (MARS)). Surprisingly, recent research on the NASA dataset suggests that the performance of a defect prediction model is not significantly impacted by the classification technique that is used to train it. However, the dataset that is used in the prior study is both: (a) noisy, i.e., contains erroneous entries and (b) biased, i.e., only contains software developed in one setting. Hence, we set out to replicate this prior study in two experimental settings. First, we apply the replicated procedure to the same (known-to-be noisy) NASA dataset, where we derive similar results to the prior study, i.e., the impact that classification techniques have appear to be minimal. Next, we apply the replicated procedure to two new datasets: (a) the cleaned version of the NASA dataset and (b) the PROMISE dataset, which contains open source software developed in a variety of settings (e.g., Apache, GNU). The results in these new datasets show a clear, statistically distinct separation of groups of techniques, i.e., the choice of classification technique has an impact on the performance of defect prediction models. Indeed, contrary to earlier research, our results suggest that some classification techniques tend to produce defect prediction models that outperform others. © 2015 IEEE.},
  affiliation         = {Software Analysis and Intelligence Lab (SAIL), School of Computing, Queen's University, Canada, Canada},
  art_number          = {7194626},
  coden               = {PCSED},
  comment             = {Al leer paper completo esta claro que es un case study replicado},
  document_type       = {Conference Paper},
  doi                 = {10.1109/ICSE.2015.91},
  isbn                = {9781479919345},
  issn                = {02705257},
  journal             = {Proceedings - International Conference on Software Engineering},
  keywords            = {Computer software selection and evaluation; Defects; Forecasting; NASA; Open source software; Open systems; Quality assurance; Software engineering, Classification technique; Defect prediction models; Logistic regressions; Multivariate adaptive regression splines; Recent researches; Software modules; Software quality assurance, Classification (of information)},
  language            = {English},
  references          = {Arisholm, E., Briand, L.C., Predicting fault-prone components in a Java legacy system (2006) Proceedings of the 2006 ACM/ IEEE International Symposium on Empirical Software Engineering. ACM, pp. 8-17; Basili, V.R., Briand, L.C., Melo, W.L., A validation of object-oriented design metrics as quality indicators (1996) IEEE Transactions on Software Engineering, 22 (10), pp. 751-761; Bernstein, A., Ekanayake, J., Pinzger, M., Improving defect prediction using temporal features and non linear models (2007) Proceedings of the International Workshop on Principles of Software Evolution, pp. 11-18; Berson, A., Smith, S., Thearling, K., An overview of data mining techniques (2004) Building Data Mining Application for CRM; Bettenburg, N., Nagappan, M., Hassan, A.E., Think locally, act globally: Improving defect and effort prediction models (2012) Proceedings of the 9th IEEE Working Conference on Mining Software Repositories, pp. 60-69. , IEEE Press; Breiman, L., Bagging predictors (1996) Machine Learning, 24 (2), pp. 123-140; Briand, L.C., Wüst, J., Lounis, H., Replicated case studies for investigating quality factors in object-oriented designs (2001) Empirical Software Engineering, 6 (1), pp. 11-58; Buhmann, M.D., Radial basis functions (2000) Acta Numerica, 9 (2000), pp. 1-38; Chidamber, S., Kemerer, C., A metrics suite for object oriented design (1994) IEEE Transactions on Software Engineering, 20 (6), pp. 476-493; Cohen, W.W., Fast effective rule induction (1995) Proceedings of the International Conference on Machine Learning, pp. 115-123; Cover, T., Hart, P., Nearest neighbor pattern classification (1967) IEEE Transactions on Information Theory, 13 (1), pp. 21-27; D'Ambros, M., Lanza, M., Robbes, R., Evaluating defect prediction approaches: A benchmark and an extensive comparison (2012) Empirical Software Engineering, 17 (4-5), pp. 531-577; Demsar, J., Statistical comparisons of classifiers over multiple data sets (2006) The Journal of Machine Learning Research, 7, pp. 1-30; Dietterich, T.G., An experimental comparison of three methods for constructing ensembles of decision trees: Bagging, boosting, and randomization (2000) Machine learning, 40 (2), pp. 139-157; Erlikh, L., Leveraging legacy system dollars for ebusiness (2000) IT professional, 2 (3), pp. 17-23; Fraley, C., Raftery, A.E., Bayesian regularization for normal mixture estimation and model-based clustering (2007) Journal of Classification, 24 (2), pp. 155-181; Freund, Y., Schapire, R.E., Experiments with a New Boosting Algorithm (1996) Proceedings of the International Conference on Machine Learning, pp. 148-156; Gaines, B.R., Compton, P., Induction of ripple-down rules applied to modeling large databases (1995) Journal of Intelligent Information Systems, 5 (3), pp. 211-228; Goel, B., Singh, Y., Empirical investigation of metrics for fault prediction on object-oriented software (2008) Computer and Information Science, pp. 255-265. , Springer; Gyimothy, T., Ferenc, R., Siket, I., Empirical validation of object-oriented metrics on open source software for fault prediction (2005) IEEE Transactions on Software Engineering, 31 (10), pp. 897-910; Hall, T., Beecham, S., Bowes, D., Gray, D., Counsell, S., A systematic literature review on fault prediction performance in software engineering (2012) IEEE Transactions on Software Engineering, 38 (6), pp. 1276-1304; Hamerly, G., Elkan, C., Learning the k in k-means (2004) Advances in Neural Information Processing Systems, pp. 281-288; Hammouda, K., Karray, F., (2000) A Comparative Study of Data Clustering Techniques, , Fakhreddine Karray University of Waterloo, Ontario, Canada; Hassan, A.E., Predicting faults using the complexity of code changes (2009) Proceedings of the 31st International Conference on Software Engineering, pp. 78-88. , IEEE Computer Society; Ho, T.K., The random subspace method for constructing decision forests (1998) IEEE Transactions on Pattern Analysis and Machine Intelligence, 20 (8), pp. 832-844; Jelihovschi, E., Faria, J.C., Allaman, I.B., Scottknott: A package for performing the scott-knott clustering algorithm in r (2014) Trends in Applied and Computational Mathematics, 15 (1), pp. 003-017; Jiang, T., Tan, L., Kim, S., Personalized defect prediction (2013) Proceedings of the 28th IEEE/ACM International Conference on Automated Software Engineering (ASE), 2013. IEEE, pp. 279-289; Kaur, K., Minhas, K., Mehan, N., Kakkar, N., Static and dynamic complexity analysis of software metrics (2009) World Academy of Science, Engineering and Technology, 56, p. 2009; Khalid, H., Nagappan, M., Shihab, E., Hassan, A.E., Prioritizing the devices to test your app on: A case study of android game apps (2014) Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering. ACM, pp. 610-620; Koru, A.G., Zhang, D., El Emam, K., Liu, H., An investigation into the functional form of the size-defect relationship for software modules (2009) IEEE Transactions on Software Engineering, 35 (2), pp. 293-304; Kotsiantis, S., Supervised machine learning: A review of classification techniques (2007) Informatica, 31, pp. 249-268; Landwehr, N., Hall, M., Frank, E., Logistic model trees (2005) Machine Learning, 59 (1-2), pp. 161-205; Lemon, B., (2010) The Effect of Locality Based Learning on Software Defect Prediction, , Ph.D. dissertation, West Virginia University; Lessmann, S., Baesens, B., Mues, C., Pietsch, S., Benchmarking classification models for software defect prediction: A proposed framework and novel findings (2008) IEEE Transactions on Software Engineering, 34 (4), pp. 485-496; Menzies, T., Butcher, A., Marcus, A., Zimmermann, T., Cok, D., Local vs. Global models for effort estimation and defect prediction (2011) Proceedings of the 26th IEEE/ACM International Conference on Automated Software Engineering (ASE 2011). IEEE, pp. 343-351; Menzies, T., Di Stefano, J.S., Chapman, M., McGill, K., Metrics that matter (2002) Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop (SEW-27'02), p. 51. , IEEE Computer Society; Menzies, T., Greenwald, J., Frank, A., Data mining static code attributes to learn defect predictors (2007) IEEE Transactions on Software Engineering, 33 (1), pp. 2-13; Menzies, T., Milton, Z., Turhan, B., Cukic, B., Jiang, Y., Bener, A., Defect prediction from static code features: Current results, limitations, new approaches (2010) Automated Software Engineering, 17 (4), pp. 375-407; Mittas, N., Angelis, L., Ranking and clustering software cost estimation models through a multiple comparisons algorithm (2013) IEEE Transactions on Software Engineering, 39 (4), pp. 537-551; Moser, R., Pedrycz, W., Succi, G., A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction (2008) Proceedings of the 30th International Conference on Software Engineering. ACM, pp. 181-190; Nagappan, N., Ball, T., Static analysis tools as early indicators of pre-release defect density (2005) Proceedings of the 27th International Conference on Software Engineering. ACM, pp. 580-586; Use of relative code churn measures to predict system defect density (2005) Proceedings of the 27th International Conference on Software Engineering, pp. 284-292. , ACM; Nagappan, N., Ball, T., Zeller, A., Mining metrics to predict component failures (2006) Proceedings of the 28th International Conference on Software Engineering, pp. 452-461. , ACM; Ohlsson, N., Alberg, H., Predicting fault-prone software modules in telephone switches (1996) IEEE Transactions on Software Engineering, 22 (12), pp. 886-894; Oliveira, M.F., Redin, R.M., Carro, L., Wagner, F.R., Software quality metrics and their impact on embedded software (2008) Proceedings of the 5th International Workshop on Model-based Methodologies for Pervasive and Embedded Software, 2008, pp. 68-77. , IEEE Computer Society; Ostrand, T.J., Weyuker, E.J., Bell, R.M., Predicting the location and number of faults in large software systems (2005) IEEE Transactions on Software Engineering, 31 (4), pp. 340-355; Panichella, A., Oliveto, R., De Lucia, A., Crossproject defect prediction models: L' union fait la force (2014) Proceedings of the Software Evolution Week-IEEE Conference on Software Maintenance, Reengineering and Reverse Engineering (CSMR-WCRE). IEEE, pp. 164-173; Peters, F., Menzies, T., Marcus, A., Better cross company defect prediction (2013) Proceedings of the 10th Working Conference on Mining Software Repositories, pp. 409-418. , IEEE Press; Platt, J.C., Fast training of support vector machines using sequential minimal optimization (1999) Advances in kernel methods, pp. 185-208. , MIT Press; Quinlan, J.R., (1993) C4. 5: Programs for Machine Learning, 1. , Morgan kaufmann; Ratzinger, J., Sigmund, T., Gall, H.C., On the relation of refactorings and software defect prediction (2008) Proceedings of the 2008 International Working Conference on Mining Software Repositories, pp. 35-38. , ACM; Rodríguez, J., Kuncheva, L., Alonso, C., Rotation forest: A new classifier ensemble method (2006) IEEE Transactions on Pattern Analysis and Machine Intelligence, 28 (10), pp. 1619-1630; Sandhu, P.S., Kumar, S., Singh, H., Intelligence system for software maintenance severity prediction (2007) Journal of Computer Science, 3 (5), p. 281; Sehgal, L., Mohan, N., Sandhu, P.S., Quality prediction of function based software using decision tree approach (2012) Proceedings of the International Conference on Computer Engineering and Multimedia Technologies (ICCEMT), pp. 43-47; Shaik, A., Reddy, C., Manda, B., Prakashini, C., Deepthi, K., Metrics for object oriented design software systems: A survey (2010) Journal of Emerging Trends in Engineering and Applied Sciences, 1 (2), pp. 190-198; Shepperd, M., Bowes, D., Hall, T., Researcher bias: The use of machine learning in software defect prediction (2014) IEEE Transactions on Software Engineering, 40 (6), pp. 603-616; Shepperd, M., Song, Q., Sun, Z., Mair, C., Data quality: Some comments on the nasa software defect datasets (2013) IEEE Transactions on Software Engineering, (9), pp. 1208-1215; Shihab, E., (2012) An Exploration of Challenges Limiting Pragmatic Software Defect Prediction, , Ph.D. dissertation, Queens University; Singh, Y., Chauhan, A.S., Neural networks in data mining (2009) Journal of Theoretical and Applied Information Technology, 5 (6), pp. 36-42; Subramanyam, R., Krishnan, M., Empirical analysis of ck metrics for object-oriented design complexity: Implications for software defects (2003) IEEE Transactions on Software Engineering, 29 (4), pp. 297-310; Wang, T., Li, W., Shi, H., Liu, Z., Software defect prediction based on classifiers ensemble (2011) Journal of Information & Computational Science, 8 (16), pp. 4241-4254; Witten, I.H., Frank, E., (2005) Data Mining: Practical Machine Learning Tools and Techniques, , Morgan Kaufmann; Wu, S., Flach, P., (2005) A Scored Auc Metric for Classifier Evaluation and Selection; Zhou, Z.-H., Ensemble learning (2009) Encyclopedia of Biometrics, pp. 270-273. , Springer; Zimmermann, T., Premraj, R., Zeller, A., Predicting defects for eclipse (2007) Proceedings of the International Workshop on Predictor Models in Software Engineering},
  review              = {{CS C11}},
  source              = {Scopus},
  sponsors            = {Association for Computing Machinery Special Interest Group on Software Engineering (ACM SIGSOFT); IEEE Computer Society Technical Council on Software Engineering (TCSE)},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951805519&doi=10.1109%2fICSE.2015.91&partnerID=40&md5=1d0f3b6a7e246845a265cfb0bd908220},
}

@Article{Gómez2014343,
  author                  = {Gómez, M.N. and Acuña, S.T.},
  title                   = {A replicated quasi-experimental study on the influence of personality and team climate in software development},
  journal                 = {Empirical Software Engineering},
  year                    = {2014},
  volume                  = {19},
  number                  = {2},
  pages                   = {343-377},
  issn                    = {13823256},
  note                    = {cited By 3},
  abbrev_source_title     = {Empir Software Eng},
  abstract                = {This article reports a replication of a quasi-experimental study analyzing how personality factors and team climate influence software development team effectiveness, product quality and team member satisfaction. The replication was designed on the basis of the original quasi-experimental study, both of which were run in an academic setting. In the original study, data were collected from a sample of 35 three-member developer teams. All these teams used an adaptation of extreme programming (XP) to the academic environment to develop the same software system. In the replication, the data were collected from a sample of 34 three- or four-member developer teams working on the same software project. Student teams used a common object-oriented software development paradigm to solve the set problem and applied the Unified Process. In both studies all teams were formed at random, and their members were blind to the quasi-experimental conditions and hypotheses. The replication of this empirical study aims to verify the results of the original quasi-experiment. It examines, first, whether personality factors (neuroticism, extroversion, agreeableness, openness to experience and conscientiousness) are related to the quality of the developed software and team member satisfaction and, second, whether the preferences, perceptions and preferences-perceptions fit for the four team climate factors (participative safety, support for innovation, team vision and task orientation) are related to the quality of the developed software and team member satisfaction. The results of the replication corroborate some of the findings of the original study. On the one hand, the results revealed that there is a significant correlation between the extroversion personality factor and software quality, but no significant correlation between the extroversion personality factor and team satisfaction. Also, we found that the perception of team climate where participative safety is high is related to better quality software. We observed significant relationships between the perception of the four team climate factors and team member satisfaction. Additionally, the results showed a positive relationship between software quality and teams in which the real climate perception at the end of the project is better than preferences stated by team members at the outset of the project for the participative safety factor. Finally, we found that teams where the real climate is better than the stated preferences for the team orientation factor exhibit a direct and positive relationship to team member satisfaction. © 2013 Springer Science+Business Media New York.},
  affiliation             = {Escuela Politécnica Superior, Universidad CEU San Pablo, Campus de Monteprincipe, 28668 Boadilla del Monte, Madrid, Spain; Escuela Politécnica Superior, Universidad Autónoma de Madrid, Calle Francisco Tomás y Valiente 11, 28049 Madrid, Spain},
  author_keywords         = {Personality factors; Quasi-experimental replication; Software quality; Team building; Team climate; Team satisfaction},
  coden                   = {ESENF},
  correspondence_address1 = {Acuña, S.T.; Escuela Politécnica Superior, Universidad Autónoma de Madrid, Calle Francisco Tomás y Valiente 11, 28049 Madrid, Spain; email: silvia.acunna@uam.es},
  document_type           = {Article},
  doi                     = {10.1007/s10664-013-9265-9},
  keywords                = {Computer software selection and evaluation; Safety factor, Personality factors; Quasi-experimental replication; Software Quality; Team building; Team climate; Team satisfaction, Software design},
  language                = {English},
  publisher               = {Kluwer Academic Publishers},
  references              = {Acuña, S.T., Gómez, M., Juristo, N., Towards understanding the relationship between team climate and software quality - A quasi-experimental study (2008) Empir Softw Eng, 13 (4), pp. 401-434. , 10.1007/s10664-008-9074-8; Acuña, S.T., Gómez, M., Juristo, N., How do personality, team processes and task characteristics relate to job satisfaction and software quality? (2009) Inf Softw Technol, 51 (3), pp. 627-639. , 10.1016/j.infsof.2008.08.006; Anderson, N., Burch, G.J., (2003) The Team Selection Inventory, , ASE, NFER-Nelson Slough Anderson N, Burch GJ (2003) The team selection inventory. ASE, NFER-Nelson, Slough; Anderson, N., West, M., (1994) The Team Climate Inventory, , ASE, NFER-Nelson Windsor Anderson N, West M (1994) The team climate inventory. ASE, NFER-Nelson, Windsor; Anderson, N., West, M., Measuring climate for work group innovation: Development and validation of the team climate inventory (1998) J Organ Behav, 19 (3), pp. 235-258. , 10.1002/(SICI)1099-1379(199805)19:3<235: AID-JOB837>3.0.CO;2-C; Anderson, N., West, M., (1999) The Team Climate Inventory: User's Guide, , 2 ASE, NFER-Nelson Windsor Anderson N, West M (1999) The team climate inventory: user's guide, 2nd edn. ASE, NFER-Nelson, Windsor; Barrick, M.R., Mount, M.K., The Big Five personality dimensions and job performance: A meta-analysis (1991) Pers Psychol, 44 (1), pp. 1-26. , 10.1111/j.1744-6570.1991.tb00688.x; Barrick, M.R., Stewart, G.L., Neubert, M.J., Mount, M.K., Relating member ability and personality to work-team processes and team effectiveness (1998) J Appl Psychol, 83, pp. 377-391. , 10.1037/0021-9010.83.3.377; Barry, B., Stewart, G.L., Composition, process and performance in self-managed groups: The role of personality (1997) J Appl Psychol, 82 (1), pp. 62-78. , 10.1037/0021-9010.82.1.62; Beck, K., (1999) Extreme Programming Explained: Embrace Change, , Addison-Wesley Reading Beck K (1999) Extreme programming explained: embrace change. Addison-Wesley, Reading; Beck, K., Beedle, M., Cockburn, A., Cunnimgham, W., Fowler, M., (2001) Agile Manifesto, , http://agilemanifesto.org/, Beck K, Beedle M, Cockburn A, Cunnimgham W, Fowler M et al (2001) Agile Manifesto [ http://agilemanifesto.org/ ]; Bentley, J., (2000) Programming Pearls, , 2 Addison-Wesley Reading Bentley J (2000) Programming pearls, 2nd edn. Addison-Wesley, Reading; Boehm, B.W., Abts, C., Brown, W.A., Chulani, S., Clark, B.K., Horowitz, E., Madachy, R., Steece, B., (2000) Software Cost Estimation with COCOMO II, , Prentice Hall Upper Saddle River Boehm BW, Abts C, Brown WA, Chulani S, Clark BK, Horowitz E, Madachy R, Reifer DJ, Steece B (2000) Software cost estimation with COCOMO II. Prentice Hall, Upper Saddle River; Brooks, A., Rooper, M., Wood, M., Daly, J., Miller, J., Replication's role in software engineering (2008) Guide to Empirical Software Engineering (Chapter 14), , F. Shull J. Singer D. Sjberg (eds) Springer Heidelberg Brooks A, Rooper M, Wood M, Daly J, Miller J (2008) Replication's role in software engineering. In: Shull F, Singer J, Sjberg D (eds) Guide to empirical software engineering (chapter 14). Springer, Heidelberg; Burch, G.J., Anderson, N., Measuring person-team fit: Development and validation of the team selection inventory (2004) J Manag Psychol, 19 (4), pp. 406-426. , 10.1108/02683940410537954; Carver, J., Towards reporting guidelines for experimental replications: A proposal (2010) 1st International Workshop on Replication in Empirical Software Engineering Research (RESER 2010), , Carver J (2010) Towards reporting guidelines for experimental replications: a proposal. In: 1st International Workshop on Replication in Empirical Software Engineering Research (RESER 2010); Cook, T.D., Campbell, D.T., (1979) Quasi-experimentation Design and Analysis Issues for the Field Settings, , Houghton Mifflin Boston Cook TD, Campbell DT (1979) Quasi-experimentation design and analysis issues for the field settings. Houghton Mifflin, Boston; Costa, Jr.P.T., McCrae, R.R., (2002) Inventario de Personalidad NEO Revisado (NEO PI-R): Inventario NEO Reducido de Cinco Factores (NEO-FFI). Manual Profesional, , TEA Madrid, Spain Costa PT Jr, McCrae RR (2002) Inventario de Personalidad NEO Revisado (NEO PI-R): Inventario NEO Reducido de Cinco Factores (NEO-FFI). Manual profesional. TEA, Madrid, Spain; Ssjo, C., Silva Fqb, D., Monteiro, C., Santos, P., Rossilei, I., Personality in software engineering: Preliminary findings from a systematic literature review (2011) 15th Conference on Evaluation & Assessment in Software Engineering (EASE 2011), pp. 1-10. , Cruz SSJO, da Silva FQB, Monteiro C, Santos P, Rossilei I (2011) Personality in software engineering: preliminary findings from a systematic literature review. In: 15th Conference on Evaluation & Assessment in Software Engineering (EASE 2011), 1-10; Curral, L.A., Forrester, R.H., Dawson, J.F., West, M.A., It's what you do and the way that you do it: Team task, team size, and innovation-related group (2001) Eur J Work Organ Psychol, 10 (2), pp. 187-204. , 10.1080/13594320143000627; Dybå, T., Dingsøyr, T., Empirical studies of agile software development: A systematic review (2008) Inf Softw Technol, 50, pp. 833-859. , 10.1016/j.infsof.2008.01.006; Gladstein, D.L., Groups in context: A model of task group effectiveness (1984) Adm Sci Q, 29 (4), pp. 499-517. , 10.2307/2392936; Gómez, O.S., (2012) Tipología de Replicaciones Para la Síntesis de Experimentos en Ingeniería Del Software, , Ph.D. thesis. Madrid, Spain: Universidad Politécnica de Madrid Gómez OS (2012) Tipología de Replicaciones para la Síntesis de Experimentos en Ingeniería del Software. Ph.D. thesis. Madrid, Spain: Universidad Politécnica de Madrid; Goparaju, P.S., Ayesha, F., Sanghamitra, P., Soft factors affecting the performance of software development teams (2011) Team Perform Manag, 17 (3-4), pp. 187-205; Hackman, J.R., Oldham, G.R., (1980) Work Redesign, , Addison Wesley Reading Hackman JR, Oldham GR (1980) Work redesign. Addison Wesley, Reading; (2004) Guide to the Software Engineering Body of Knowledge-SWEBOK Version 2004, , IEEE IEEE Computer Society California IEEE (2004) Guide to the Software Engineering Body of Knowledge-SWEBOK version 2004. IEEE Computer Society, California; Jacobson, I., Booch, G., Rumbaugh, J., (1999) The Unified Software Process Development, , Addison Wesley Reading Jacobson I, Booch G, Rumbaugh J (1999) The unified software process development. Addison Wesley, Reading; Jehn, K.A., A multimethod examination of the benefits and detriments of intragroup conflict (1995) Adm Sci Q, 40, pp. 256-282. , 10.2307/2393638; Jehn, K.A., A qualitative analysis of conflict types and dimensions in organizational groups (1997) Adm Sci Q, 42, pp. 530-557. , 10.2307/2393737; Macias, F., Holcombe, M., Gheorghe, M., A formal experiment comparing extreme programming with traditional software construction (2003) Fourth Mexican International Conference on Computer Science (ENC 2003), pp. 73-80. , Macias F, Holcombe M, Gheorghe M (2003) A formal experiment comparing extreme programming with traditional software construction. In: Fourth Mexican International Conference on Computer Science (ENC 2003), 73-80; Mañas, M.A., González-Romá, V., Peiro, J.M., (1999) Work-group Climate. Determinants and Consequences, , Universidad de Almería, Instituto de Estudios Almerienses Almería Mañas MA, González-Romá V, Peiro JM (1999) Work-group climate. Determinants and consequences. Universidad de Almería, Instituto de Estudios Almerienses, Almería; Molleman, E., The modalities of self-management: The "must", "may", "can" and "will" of local decision making (2000) Int J Oper Prod Manag, 20 (8), pp. 889-910. , Molleman E (2000) The modalities of self-management: the "must", "may", "can" and "will" of local decision making. Int J Oper Prod Manag 20(8):889-910; Molleman, E., Nauta, A., Jehn, K.A., Person-job fit applied to teamwork: A multi-level approach (2004) Small Group Res, 35 (5), pp. 515-539. , 10.1177/1046496404264361; Peslak, A., The impact of personality on information technology team projects (2006) 2006 ACM SIGMIS CPR, pp. 273-279. , Claremont, California, USA Peslak A (2006) The impact of personality on information technology team projects. In: 2006 ACM SIGMIS CPR. Claremont, California, USA, 273-279; Pfleeger, S.L., (2001) Software Engineering: Theory and Practice, , 2 Prentice-Hall Upper Saddle River Pfleeger SL (2001) Software engineering: theory and practice, 2nd edn. Prentice-Hall, Upper Saddle River; Pfleeger, S.L., Soup or art? the role of evidential force in empirical software engineering (2005) IEEE Softw, 22 (1), pp. 66-73. , 10.1109/MS.2005.19; Selby, R., Empirical software engineering research roadmap: Discussion and summary (2007) Empirical Software Engineering Issues. Critical Assessment and Future Directions, 4336 Lecture Notes in Computer Science, pp. 184-187. , V. Basili D. Rombach K. Schneider B. Kitchenham D. Pfahl R. Selby (eds) Springer Heidelberg 10.1007/978-3-540-71301-2-54 Selby R (2007) Empirical software engineering research roadmap: discussion and summary. In: Basili V, Rombach D, Schneider K, Kitchenham B, Pfahl D, Selby R (eds) Empirical software engineering issues. Critical assessment and future directions, 4336 lecture notes in computer science. Springer, Heidelberg, pp 184-187; Sfetsos, P., Stamelos, I., Angelis, L., Deligiannis, I., An experimental investigation of personality types impact on pair effectiveness in pair programming (2009) Empir Softw Eng, 14, pp. 187-226. , 10.1007/s10664-008-9093-5; Stokes, J.P., Toward an understanding of cohesion in personal change groups (1983) Int J Group Psychother, 33, pp. 449-467; Van Der Vegt, G., Emans, B., Van De Vliert, E., Affective reactions to individual task interdependence in outcome interdependence groups (2001) Pers Psychol, 54, pp. 51-69. , 10.1111/j.1744-6570.2001.tb00085.x; Yang, H.-L., Tang, J.-H., Team structure and team performance in IS development: A social network perspective (2004) J Inf Manag, 41 (3), pp. 335-349. , 10.1016/S0378-7206(03)00078-8; Zander, A., (1994) Making Groups Effective, , 2 Jossey-Bass San Francisco Zander A (1994) Making groups effective, 2nd edn. Jossey-Bass, San Francisco},
  review                  = {{QE C11 C3 C4}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896390548&doi=10.1007%2fs10664-013-9265-9&partnerID=40&md5=4d018370dcc40ffe9044d7641aa19906},
}

@Article{Gravino201523,
  author                  = {Gravino, C. and Scanniello, G. and Tortora, G.},
  title                   = {Source-code comprehension tasks supported by UML design models: Results from a controlled experiment and a differentiated replication},
  journal                 = {Journal of Visual Languages and Computing},
  year                    = {2015},
  volume                  = {28},
  pages                   = {23-38},
  issn                    = {1045926X},
  note                    = {cited By 2},
  abbrev_source_title     = {J. Vis. Lang. Comput.},
  abstract                = {Objective: The main objective is to investigate whether the comprehension of object-oriented source-code increases when it is added with UML class and sequence diagrams produced in the software design phase.Methods: We conducted a controlled experiment and a differentiated replication with young software maintainers. In particular, groups of Bachelor and Master students were involved.Results: The results show that more experienced participants better comprehend source-code when added with UML design models. An average improvement (or benefit) of circa 12% was achieved when the participants accomplished the comprehension task with UML class and sequence diagrams. The results of an analysis on the time to accomplish comprehension tasks showed that less experienced participants significantly spent more time when comprehending source-code with UML design models. This kind of participants spent on average 44.8% of the time to accomplish the same task with source-code alone.Implications: It is useless to give UML design models to comprehend source-code in case maintainers are not adequately experienced with the UML. Furthermore, the less the experience of participants, the more the time to accomplish a comprehension task with UML diagram is. © 2014 Elsevier Ltd.},
  affiliation             = {DISTRA-MIT, University of Salerno, Italy; DiMIE - University of Basilicata, Italy},
  author_keywords         = {Controlled experiment; Design models; Source-code comprehension},
  coden                   = {JVLCE},
  correspondence_address1 = {Gravino, C.; DISTRA-MIT, University of SalernoItaly},
  document_type           = {Article},
  doi                     = {10.1016/j.jvlc.2014.12.004},
  language                = {English},
  publisher               = {Academic Press},
  references              = {Lehman, M.M., Programs, life cycles and laws of software evolution (1980) Proc. IEEE, 68 (9), pp. 1060-1076; Canfora, G., Di Penta, M., New frontiers of reverse engineering (2007), pp. 326-341. , in: Proceedings of the International Workshop on the Future of Software EngineeringOMG Unified Modeling Language (OMG UML) (2007), http://www.omg.org/spec/UML/2.1.2/Infrastructure/PDF, Infrastructure, v2.1.2, Technical Report, OMG. URL 〈〉, NovemberBudgen, D., Burn, A.J., Brereton, O.P., Kitchenham, B.A., Pretorius, R., Empirical evidence about the UML. a systematic literature review (2011) Software: Pract. Exp., 41 (4), pp. 363-392; Fernández-Sáez, A.M., Genero, M., Chaudron, M.R.V., Empirical studies concerning the maintenance of UML diagrams and their use in the maintenance of code. a systematic mapping study (2013) Inf. Softw. Technol., 55 (7), pp. 1119-1142; Abrãhao, S., Gravino, C., Pelozo, E.I., Scanniello, G., Tortora, G., Assessing the effectiveness of sequence diagrams in the comprehension of functional requirements. results from a family of five experiments (2013) IEEE Trans. Softw. Eng., 39 (3), pp. 327-342; Briand, L.C., Labiche, Y., Di Penta, M., Yan-Bondoc, H., An experimental investigation of formality in UML-based development (2005) IEEE Trans. Softw. Eng., 31 (10), pp. 833-849; Basili, V., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) IEEE Trans. Softw. Eng., 25 (4), pp. 456-473; Shull, F.J., Carver, J.C., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empir. Softw. Eng., 13 (2), pp. 211-218; Scanniello, G., Gravino, C., Tortora, G., Does the combined use of class and sequence diagrams improve the source code comprehension? results from a controlled experiment (2012), pp. 25-30. , in: Proceedings of the International Workshop on Experiences and Empirical Studies in Software Modelling, ACM, New York, NY, USAArisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance. an experimental evaluation (2006) IEEE Trans. Softw. Eng., 32, pp. 365-381; Dzidek, W.J., Arisholm, E., Briand, L.C., A realistic empirical evaluation of the costs and benefits of UML in software maintenance (2008) IEEE Trans. Softw. Eng., 34, pp. 407-432; Staron, M., Kuzniarz, L., Wohlin, C., Empirical assessment of using stereotypes to improve comprehension of UML models. a set of experiments (2006) J. Syst. Softw., 79 (5), pp. 727-742; Genero, M., Cruz-Lemus, J.A., Caivano, D., Abrahão, S.M., Insfrán, E., Carsí, J.A., Assessing the influence of stereotypes on the comprehension of UML sequence diagrams: a controlled experiment (2008), pp. 280-294. , in: Proceedings of Model Driven Engineering Languages and Systems, Lecture Notes in Computer Science, Springer Berlin, HeidelbergRicca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M., How developers[U+05F3] experience and ability influence Web application comprehension tasks supported by UML stereotypes. a series of four experiments (2010) IEEE Trans. Softw. Eng., 36 (1), pp. 96-118; Conallen, J., (2002) Building Web Applications with UML, , Addison-Wesley Publishing Company, Reading, MA; Scanniello, G., Gravino, C., Tortora, G., Investigating the role of UML in the software modeling and maintenance-a preliminary industrial survey (2010), pp. 141-148. , in: Proceedings of the International Conference on Enterprise Information SystemsGravino, C., Tortora, G., Scanniello, G., An empirical investigation on the relation between analysis models and source code comprehension (2010), pp. 2365-2366. , in: Proceedings of the International Symposium on Applied Computing, ACM, New York, USAScanniello, G., Gravino, C., Genero, M., Cruz-Lemus, J.A., Tortora, G., On the impact of UML analysis models on source code comprehensibility and modifiability (2014) ACM Trans. Softw. Eng. Methods, 23 (2). , 13:1-13:26; Juristo, N., Moreno, A., (2001) Basics of Software Engineering Experimentation, , Kluwer Academic Publishers, Englewood Cliffs, NJ; Kitchenham, B., Pfleeger, S., Pickard, L., Jones, P., Hoaglin, D., El Emam, K., Rosenberg, J., Preliminary guidelines for empirical research in software engineering (2002) IEEE Trans. Softw. Eng., 28 (8), pp. 721-734; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M., Regnell, B., Wesslén, A., (2000) Experimentation in Software Engineering -An Introduction, , Kluwer Academic Publishers, Norwell, MA, USA; Basili, V., Caldiera, G., Rombach, D.H., (1994) The Goal Question Metric Paradigm. Encyclopedia of Software Engineering, , John Wiley and Sons, Chichester, UK; Lauesen, S., (2002) Software Requirements: Styles and Techniques, , Addison-Wesley, Boston, USA; Aranda, J., Ernst, N., Horkoff, J., Easterbrook, S., A framework for empirical evaluation of model comprehensibility (2007), pp. 7-13. , in: Modeling in Software Engineering, ICSE Workshop, IEEE Computer Society Washington, DC, USACarver, J., Jaccheri, L., Morasca, S., Shull, F., Issues in using students in empirical studies in software engineering education (2003), pp. 239-249. , in: Proceedings of the International Symposium on Software Metrics, IEEE Computer Society, Washington, DC, USARicca, F., Scanniello, G., Torchiano, M., Reggio, G., Astesiano, E., Assessing the effect of screen mockups on the comprehension of functional requirements (2014) ACM Trans. Softw. Eng. Methodol., 24 (1), p. 1; Bruegge, B., Dutoit, A.H., (2003) Object-Oriented Software Engineering: Using UML, Patterns and Java, , Prentice-Hall, Upper Saddle River, NJ; Field, A., Hole, G., (2003) How to Design and Report Experiments, , http://books.google.at/books?id=72BsZFZmosoC, Sage Publications Limited, London, UK; Kampenes, V.B., Dybå, T., Hannay, J.E., Sjøberg, D.I.K., A systematic review of effect size in software engineering experiments (2007) Inf. Softw. Technol., 49 (11-12), pp. 1073-1086; Ellis, P., (2010) The Essential Guide to Effect Sizes: Statistical Power, Meta-Analysis, and the Interpretation of Research Results, , Cambridge University Press, New York, USA; Devore, J.L., Farnum, N., (1999) Applied Statistics for Engineers and Scientists, , Duxbury Pr, Richmond, TX, USA; Conover, W.J., (1998) Practical Nonparametric Statistics, , Wiley, Chichester, UK; Kitchenham, B., Al-Khilidar, H., Babar, M., Berry, M., Cox, K., Keung, J., Kurniawati, F., Zhu, L., Evaluating guidelines for reporting empirical software engineering studies (2008) Empir. Softw. Eng., 13, pp. 97-121; Dobing, B., Parsons, J., How UML is used (2006) Commun. ACM, 49 (5), pp. 109-113; Bruegge, B., Dutoit, A.H., (2000) Object-oriented Software Engineering: Conquering Complex and Changing Systems, , Prentice-Hall, Upper Saddle River, NJ; Ciolkowski, M., Muthig, D., Rech, J., Using academic courses for empirical validation of software development processes (2004), pp. 354-361. , in: Proceedings of the EUROMICRO Conference, IEEE Computer Society Washington, DC, USAHannay, J., Jørgensen, M., The role of deliberate artificial design elements in software engineering experiments (2008) IEEE Trans. Softw. Eng., 34, pp. 242-259. , http://dl.acm.org/citation.cfm?id=1399105.1399455, URL 〈; Erra, U., Scanniello, G., Assessing communication media richness in requirements negotiation (2010) IET Softw., 4 (2), pp. 134-148; Oppenheim, A.N., (1992) Questionnaire Design, Interviewing and Attitude Measurement, , Pinter, London; Costagliola, G., Deufemia, V., Ferrucci, F., Gravino, C., Constructing meta-case workbenches by exploiting visual language generators (2006) IEEE Trans. Softw. Eng., 32 (3), pp. 156-175; Kruchten, P., (2004) The Rational Unified Process: An Introduction, The Addison-Wesley Object Technology Series, , http://books.google.it/books?id=RYCMx6o47pMC, Addison-Wesley, Boston, USA; Zhu, Q., Lin, L., Kienle, H.M., Müller, H.A., Characterizing maintainability concerns in autonomic element design (2008), pp. 197-206. , in: Proceedings of International Conference on Software Maintenance, IEEE Computer SocietyColosimo, M., De Lucia, A., Scanniello, G., Tortora, G., Evaluating legacy system migration technologies through empirical studies (2009) Inf. Softw. Technol., 51 (12), pp. 433-447; Scanniello, G., Gravino, C., Tortora, G., An early investigation on the contribution of class and sequence diagrams in source code comprehension (2013), pp. 367-370. , in: Proceedings of Conference on Software Maintenance and Reengineering, IEEE Computer Society Washington, DC, USAGenero, M., Piattini, M., Chaudron, M.R.V., Quality of UML models (2009) Inf. Softw. Technol., 51 (12), pp. 1629-1630; Nugroho, A., Flaton, B., Chaudron, M.R.V., Empirical analysis of the relation between level of detail in UML models and defect density (2008), 5301, pp. 600-614. , in: Proceedings of Model Driven Engineering Languages and Systems, Lecture Notes in Computer Science, Springer, HeidelbergBeck, K., (1999) Extreme Programming Explained: Embrace Change, , Addison-Wesley, Boston, USA},
  review                  = {{E C2 C3}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920742499&doi=10.1016%2fj.jvlc.2014.12.004&partnerID=40&md5=055cb3c3ec56e7065238d3200b481686},
}

@Article{Grbac2016967,
  author                  = {Grbac, T.G. and Runeson, P. and Huljenić, D.},
  title                   = {A quantitative analysis of the unit verification perspective on fault distributions in complex software systems: an operational replication},
  journal                 = {Software Quality Journal},
  year                    = {2016},
  volume                  = {24},
  number                  = {4},
  pages                   = {967-995},
  issn                    = {09639314},
  note                    = {cited By 0},
  abbrev_source_title     = {Softw. Qual. J.},
  abstract                = {Unit verification, including software inspections and unit tests, is usually the first code verification phase in the software development process. However, principles of unit verification are weakly explored, mostly due to the lack of data, since unit verification data are rarely systematically collected and only a few studies have been published with such data from industry. Therefore, we explore the theory of fault distributions, originating in the quantitative analysis by Fenton and Ohlsson, in the weakly explored context of unit verification in large-scale software development. We conduct a quantitative case study on a sequence of four development projects on consecutive releases of the same complex software product line system for telecommunication exchanges. We replicate the operationalization from earlier studies, analyzed hypotheses related to the Pareto principle of fault distribution, persistence of faults, effects of module size, and quality in terms of fault densities, however, now from the perspective of unit verification. The patterns in unit verification results resemble those of later verification phases, e.g., regarding the Pareto principle, and may thus be used for prediction and planning purposes. Using unit verification results as predictors may improve the quality and efficiency of software verification. © 2015, Springer Science+Business Media New York.},
  affiliation             = {Faculty of Engineering, University of Rijeka, Rijeka, Croatia; Department of Computer Science, Lund University, Lund, Sweden; Ericsson Nikola Tesla, Zagreb, Croatia},
  author_keywords         = {Empirical research; Replication; Software fault distributions; Software metrics; Unit verification},
  correspondence_address1 = {Grbac, T.G.; Faculty of Engineering, University of RijekaCroatia; email: tihana.galinac@riteh.hr},
  document_type           = {Article},
  doi                     = {10.1007/s11219-015-9273-7},
  keywords                = {Computer software; Computer software selection and evaluation; Pareto principle; Software design; Software engineering; Software testing, Empirical research; Replication; Software fault; Software metrics; Unit verification, Verification},
  language                = {English},
  publisher               = {Springer New York LLC},
  references              = {Andersson, C., Runeson, P., A replicated quantitative analysis of fault distributions in complex software systems (2007) IEEE Transactions on Software Engineering, 33 (5), pp. 273-286; Aurum, A., Petersson, P., Wohlin, C., State-of-the-art: Software inspections after 25 years (2002) Software Test and Verification Reliability, 12 (3), pp. 133-154; Basili, V.R., Perricone, B.T., Software errors and complexity: An empirical investigation (1984) Communications of the ACM, 27 (1), pp. 42-52; Basili, V.R., Selby, R.W., Comparing the effectiveness of software testing strategies (1987) IEEE Transactions on Software Engineering, 13 (12), pp. 1278-1296; Bhat, T., Nagappan, N., Evaluating the efficacy of test-driven development: Industrial case studies (2006) In Proceedings of the International Symposium on Empirical Software Engineering, pp. 356-363; Biffl, S., Gutjahr, W.J., Using a reliability growth model to control software inspection (2002) Empirical Software Engineering, 7 (3), pp. 257-284; Briand, L.C., El Emam, K., Freimut, B.G., A comprehensive evaluation of capture-recapture models for estimating software defect content (2000) IEEE Transactions on Software Engineering, 26 (6), pp. 518-540; Briand, L., El Emam, K., Laitenberger, O., Fussbroich, T., Using simulation to build inspection efficiency benchmarks for development projects (1998) In Proceedings of the 20th International Conference on Software Engineering, pp. 340-349; Carver, J. (2010). Towards reporting guidelines for experimental replications: A proposal. In Proceedings of the 1st International Workshop on Replication in Empirical Software Engineering Research (RESER). Cape Town, South AfricaCatal, C., Diri, B., A systematic review of software fault prediction studies (2009) Expert Systems with Application, 36 (4), pp. 7346-7354; Concas, G., Marchesi, M., Murgia, A., Tonelli, R., Turnu, I., On the distribution of bugs in the eclipse system (2011) IEEE Transactions on Software Engineering, 37 (6), pp. 872-877; El Emam, K., Laitenberger, O., Harbich, T., The application of subjective estimates of effectiveness to controlling software inspections (2000) The Journal of Systems and Software, 54 (2), pp. 119-136; Engström, E., Runeson, P., A qualitative survey of regression testing practices (2010) Proceedings 11th international conference on product-focused software process improvement (PROFES), volume 6156 of lecture notes in computer science, pp. 3-16. , Ali Babar M, Vierimaa M, Oivo M, (eds), Springer, Berlin/Heidelberg; Fagan, M., (2002) Design and code inspections to reduce errors in program development, software pioneers, , Springer-verlag new york inc., New York; Fenton, N., Neil, M., A critique of software defect prediction models (1999) IEEE Transactions on Software Engineering, 25 (5), pp. 675-689; Fenton, N.E., Ohlsson, N., Quantitative analysis of faults and failures in a complex software system (2000) IEEE Transactions on Software Engineering, 26 (8), pp. 797-814; Galinac Grbac, T., Huljenić, D., Defect detection effectiveness and product quality in global software development. In Proceedings of the 12th International Conference Product-Focused Software Process Improvement (PROFES), Proceedings. Lecture Notes in Business Information Processing 6759, Springer: Torre Canne (2011) Italy. 20–22 June, p. 2011; Galinac Grbac, T., Huljenić, D., On the probability distribution of faults in complex software systems (2015) Information and Software Technology, 58, pp. 250-258; Galinac Grbac, T., Car, Z., Huljenić, D., Quantifying value of adding inspection effort early in the development process: A case study (2012) Software IET, 6 (3), pp. 249-259; Galinac Grbac, T., Car, Z., Huljenić, D., A quality cost reduction model for large-scale software development (2015) Software Quality Journal, 23, pp. 363-390; Galinac Grbac, T., Runeson, P., Huljenić, D., A second replicated quantitative analysis of fault distributions in complex software systems (2013) IEEE Transactions on Software Engineering, 39 (4), pp. 462-476; Gilb, T., Graham, D., (1993) Software inspection”, software pioneers, , Addison-Wesley, Boston; Gómez, O.S., Juristo, N., Vegas, S., Understanding replication of experiments in software engineering: A classification (2014) Information and Software Technology, 56 (8), pp. 1033-1048; Hall, T., Beecham, S., Bowes, D., Gray, D., Counsell, S., A systematic literature review on fault prediction performance in software engineering (2012) IEEE Transactions on Software Engineering, 38 (6), pp. 1276-1304; Hannay, J.E., Sjoberg, D.I.K., Dybå, T., A systematic review of theory use in software engineering experiments (2007) IEEE Transactions on Software Engineering, 33 (2), pp. 87-107; Hetzel, W.C., An experimental analysis of program verification methods (1976) Ph.D, , Dissertation: The University of North Carolina at Chapel Hill; Std, I.E.E.E., (1990) 610.12-1990, , Standard glossary of software engineering terminology, IEEE; Juristo, N., Moreno, A.M., Vegas, S., Reviewing 25 years of testing technique experiments (2004) Empirical Software Engineering, 9 (1), pp. 7-44; Juristo, N., Vegas, S., Solari, M., Abrahao, S., Ramos, I., Comparing the effectiveness of equivalence partitioning, branch testing and code reading by stepwise abstraction applied by subjects. In Proceedings of Fifth IEEE International Conference on Software Testing (2012) Verification and Validation, pp. 330-339; Juristo Juzgado, N., Vegas, S., Solari, M., Abrahaõ, S., Ramos, I., A process for managing interaction between experimenters to get useful similar replications (2013) Information and Software Technology, 55 (2), pp. 215-225; Koru, A.G., Zhang, D., El Emam, K., Liu, H., An investigation into the functional form of the size-defect relationship for software modules (2013) IEEE Transactions on Software Engineering, 35 (2), pp. 293-304; Kamsties, E., Lott, C.M., An empirical evaluation of three defect-detection techniques (1995) In Proceedings of the 5th European Software Engineering and Conference, pp. 362-383; Kitchenham, B.A., The role of replications in empirical software engineering: A word of warning (2008) Empirical Software Engineering, 13 (2), pp. 219-221; Mäntylä, M.V., Lassenius, C., What types of defects are really discovered in code reviews? (2009) IEEE Transactions on Software Engineering, 35 (3), pp. 430-448; Miller, J., Replicating software engineering experiments: A poisoned chalice or the holy grail (2005) Information and Software Technology, 47 (4), pp. 233-244; Munir, H., Moayyed, M., Petersen, K., (2014). Considering rigor and relevance when evaluating test driven development: A systematic review (2014) In Information and Software Technology, p. 13; Myers, G.J., A controlled experiment in program testing and code walkthroughs/inspections (1978) Communications of the ACM, 21 (9), pp. 13:1-13:31; Nagappan, N., Maximilien, E.M., Bhat, T., Williams, L., Realizing quality improvement through test driven development: Results and experiences of four industrial teams (2008) Empirical Software Engineering, 13 (3), pp. 289-302; Ohlsson, N., Alberg, H., Predicting fault-prone software modules in telephone switches (1996) IEEE Transactions on Software Engineering, 22 (12), pp. 886-894; Petersson, H., Thelin, T., Runeson, P., Wohlin, C., Capture-recapture in software inspections after 10 years research-theory, evaluation and application (2004) The Journal of Systems and Software, 72 (2), pp. 249-264; Runeson, P., A survey of unit testing practices (2006) IEEE Software, 23 (4), pp. 22-29; Runeson, P., Andersson, C., Thelin, T., Andrews, A., Berling, T., What do we know about defect detection methods (2006) IEEE Software, 23 (3), pp. 82-90; Runeson, P., Höst, M., Rainer, A., Regnell, B., (2012) Case study research in software engineering - guidelines and examples, , Wiley, New York; Runeson, P., Stefik, A., Andrews, A., Variation factors in the design and analysis of replicated controlled experiments: Three (dis)similar studies on inspections versus unit testing (2014) Empirical Software Engineering, 19 (6), pp. 1781-1808; Shull, F.J., Carver, J.C., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empirical Software Engineering, 13 (2), pp. 211-218; Siy, H., Votta, L., Does the modern code inspection have value? (2001) In Proceedings of the IEEE International Conference on Software Maintenance, pp. 281-289; Sjøberg, D.I.K., Dybå, T., Anda, B., Hannay, J.E., (2008) Building theories in software engineering, guide to advanced empirical software engineering, , Springer, New York; Strauss, S.H., Ebenau, R.G., (1994) Software inspection process, , McGraw-Hill, New York; Wohlin, C., & Runeson, P. (2006). Defect content estimations from review data, In Proceeding of the 20th International Conference on Software Engineering, pp. 400–409Wohlin, C., Runeson, P., Höst, M., Ohlsson, M.C., Regnell, B., Wesslén, A., (2012) Experimentation in software engineering, , Springer, New York; Wood, M., Roper, M., Brooks, A., Miller, J., Comparing and combining software defect detection techniques: A replicated empirical study (1997) SIGSOFT Software Engineering Notes, 22 (6), pp. 262-277; Zhang, H., On the distribution of software faults (2008) IEEE Transactions on Software Engineering, 34 (2), pp. 301-302},
  review                  = {{CS C11 C5}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925610743&doi=10.1007%2fs11219-015-9273-7&partnerID=40&md5=06a3c6fc1f779d20074176c121d7df1a},
}

@Conference{Haaranen2015428,
  author              = {Haaranen, L. and Ihantola, P. and Sorva, J. and Vihavainen, A.},
  title               = {In Search of the Emotional Design Effect in Programming},
  year                = {2015},
  volume              = {2},
  pages               = {428-434},
  publisher           = {IEEE Computer Society},
  note                = {cited By 0; Conference of 37th IEEE/ACM International Conference on Software Engineering, ICSE 2015 ; Conference Date: 16 May 2015 Through 24 May 2015; Conference Code:116104},
  abbrev_source_title = {Proc Int Conf Software Eng},
  abstract            = {A small number of recent studies have suggested that learning is enhanced when the illustrations in instructional materials are designed to appeal to the learners' emotions through the use of color and the personification of key elements. We sought to replicate this emotional design effect in the context of introductory object-oriented programming (OOP). In this preliminary study, a group of freshmen studied a text on objects which was illustrated using anthropomorphic graphics while a control group had access to abstract graphics. We found no significant difference in the groups' scores on a comprehension post-test, but the experimental group spent substantially less time on the task than the control group. Among those participants who had no prior programming experience, the materials inspired by emotional design were perceived as less intelligible and appealing and led to lower self-reported concentration levels. Although this result does not match the pattern of results from earlier studies, it shows that the choice of illustrations in learning materials matters and calls for more research that addresses the limitations of this preliminary study. © 2015 IEEE.},
  affiliation         = {Aalto University, Department of Computer Science, Finland; Tampere University of Technology, Department of Pervasive Computing, Finland; University of Helsinki, Department of Computer Science, Finland},
  art_number          = {7202993},
  author_keywords     = {Emotional design; Learning; Multimedia; Programming},
  coden               = {PCSED},
  document_type       = {Conference Paper},
  doi                 = {10.1109/ICSE.2015.175},
  isbn                = {9781479919345},
  issn                = {02705257},
  journal             = {Proceedings - International Conference on Software Engineering},
  keywords            = {Abstracting; Access control; Behavioral research; Design; Mathematical programming; Multimedia systems; Software engineering, Concentration levels; Emotional design; Experimental groups; Instructional materials; Learning; Multimedia; Objectoriented programming (OOP); Programming experience, Object oriented programming},
  language            = {English},
  references          = {Norman, D., (2004) Emotional Design: Why We Love (Or Hate) Everyday Things, , 1st ed. New York: Basic Books; Mayer, R.E., Estrella, G., Benefits of emotional design in multimedia instruction (2014) Learning and Instruction, 33, pp. 12-18; Um, E., Plass, J.L., Hayward, E.O., Homer, B.D., Emotional design in multimedia learning (2012) Journal of Educational Psychology, 104 (2), pp. 485-498; Plass, J.L., Heidig, S., Hayward, E.O., Homer, B.D., Um, E., Emotional design in multimedia learning: Effects of shape and color on affect and learning (2014) Learning and Instruction, 29, pp. 128-140; Mayer, R.E., (2009) Multimedia Learning, , 2nd ed. Cambridge University Press; Moreno, R., Mayer, R., Interactive multimodal learning environments (2007) Educational Psychology Review, 19 (3), pp. 309-326; Mayer, R.E., Incorporating motivation into multimedia learning (2014) Learning and Instruction, 29, pp. 171-173; Naps, T.L., JHAVé: Supporting algorithm visualization (2005) Computer Graphics and Applications, 25 (5), pp. 49-55; Hundhausen, C.D., Douglas, S.A., Stasko, J.T., A Meta-study of algorithm visualization effectiveness (2002) Journal of Visual Languages and Computing, 13 (3), pp. 259-290. , Jun; Naps, T.L., Rößling, G., Almstrum, V., Dann, W., Fleischer, R., Hundhausen, C., Korhonen, A., Velázquez-Iturbide, J.A., Exploring the role of visualization and engagement in computer science education (2003) SIGCSE Bulletin, 35 (2), pp. 131-152. , June; Sorva, J., Karavirta, V., Malmi, L., A review of generic program visualization systems for introductory programming education (2013) ACM Transactions on Computing Education, 13 (4), pp. 1-64. , Nov; Najjar, L.J., Principles of educational multimedia user interface design (1998) Human Factors, 40 (2), pp. 311-323; Mayer, R.E., Should there be a three-strikes rule against pure discovery learning? (2004) American Psychologist, 59 (1), pp. 14-19; Sorva, J., Notional machines and introductory programming education (2013) ACM Transactions on Computing Education, 13 (2), pp. 1-31. , Jul; Gries, D., A principled approach to teaching OO first (2008) SIGCSE Bulletin, 40 (1), pp. 31-35; Jiménez-Peris, R., Pareja-Flores, C., Patiño-Martínez, M., Velázquez-Iturbide, J.Á., The locker metaphor to teach dynamic memory (1997) SIGCSE Bulletin, 29 (1), pp. 169-173. , http://doi.acm.org/10.1145/268085.268144, Mar; Sajaniemi, J., Byckling, P., Gerdt, P., Animation metaphors for object-oriented concepts (2007) Electronic Notes in Theoretical Computer Science, 178, pp. 15-22; Jiménez-Díaz, G., Gómez-Albarrán, M., González-Calero, P.A., Role-play virtual environments: Recreational learning of software design (2008) Proceedings of the 3rd European Conference on Technology Enhanced Learning: Times of Convergence: Technologies Across Learning Contexts, Ser. EC-TEL'08, pp. 27-32. , Springer; McKay, E., Exploring the effect of graphical metaphors on the performance of learning computer programming concepts in adult learners: A pilot study (1999) Educational Psychology, 19 (4), pp. 471-487; Sajaniemi, J., Kuittinen, M., Tikansalo, T., A study of the development of students'visualizations of program state during an elementary object-oriented programming course (2008) Journal of Educational Resources in Computing, 7 (4), pp. 1-31; Stützle, T., Sajaniemi, J., An empirical evaluation of visual metaphors in the animation of roles of variables (2005) Informing Science Journal, 8, pp. 87-100},
  review              = {{E C4 C3}},
  source              = {Scopus},
  sponsors            = {Association for Computing Machinery Special Interest Group on Software Engineering (ACM SIGSOFT); IEEE Computer Society Technical Council on Software Engineering (TCSE)},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951767095&doi=10.1109%2fICSE.2015.175&partnerID=40&md5=c7a3f32ceee863c8d248c13a1f111f93},
}

@Article{Hadar20131823,
  author                  = {Hadar, I. and Reinhartz-Berger, I. and Kuflik, T. and Perini, A. and Ricca, F. and Susi, A.},
  title                   = {Comparing the comprehensibility of requirements models expressed in Use Case and Tropos: Results from a family of experiments},
  journal                 = {Information and Software Technology},
  year                    = {2013},
  volume                  = {55},
  number                  = {10},
  pages                   = {1823-1843},
  issn                    = {09505849},
  note                    = {cited By 7},
  abbrev_source_title     = {Inf Software Technol},
  abstract                = {Context Over the years, several modeling languages for requirements have been proposed. These languages employ different conceptual approaches, including scenario-based and goal-oriented ones. Empirical studies providing evidence about requirements model comprehensibility are rare, especially when addressing languages that belong to different modeling approaches. Objective This work aims to compare the comprehensibility of requirements models expressed in different but comparable modeling approaches from a requirements analysts' perspective. In particular, in this paper we compare the comprehensibility of requirements models expressed in two visual modeling languages: Use Case, which is scenario-based, and Tropos, which exploits goal-oriented modeling. We further compare the effort required for comprehending the different models, and the derived productivity in each case. Method Requirements model comprehensibility is measured here in the context of three types of tasks that analysts usually perform, namely mapping between textual description and the model elements, reading and understanding the model irrespectively of the original textual description, and modifying the model. This experimental evaluation has been conducted within a family of controlled experiments aiming at comparing the comprehensibility of Use Case and Tropos requirements models. Three runs of the experiment were performed, including a first experiment and two replications, involving 79 subjects overall (all of which were information systems students). The data for each experiment was separately analyzed, followed by a meta-analysis of the three experiments. Results The experimental results show that Tropos models seem to be more comprehensible with respect to the three types of requirements analysis tasks, although more time consuming than Use Case models. Conclusions Measuring model comprehensibility by means of controlled experiments is feasible and provides a basis for comparing Tropos and Use Case models, although these languages belong to different modeling approaches. Specifically, Tropos outperformed Use Case in terms of comprehensibility, but required more effort leading to a similar productivity of the two languages. © 2013 Elsevier B.V. All rights reserved.},
  affiliation             = {Department of Information Systems, University of Haifa, Carmel Mount, 31905 Haifa, Israel; Center of Information Technology (CIT-Irst) of FBK, Povo I-38123 Trento, Italy; Dipartimento Interscuola di Informatica, Bioingegneria, Robotica e Ingegneria Dei Sistemi (DIBRIS), University of Genova, Via Dodecaneso 35, 16146 Genova, Italy},
  author_keywords         = {Controlled experiment; Empirical studies; Model comprehension; Requirements models; Tropos; UML use case},
  coden                   = {ISOTE},
  correspondence_address1 = {Hadar, I.; Department of Information Systems, University of Haifa, Carmel Mount, 31905 Haifa, Israel; email: hadari@is.haifa.ac.il},
  document_type           = {Article},
  doi                     = {10.1016/j.infsof.2013.05.003},
  keywords                = {Controlled experiment; Empirical studies; Requirements Models; Tropos; UML use case, Object oriented programming; Productivity; Requirements engineering, Experiments},
  language                = {English},
  references              = {Agarwal Ritu, De Prabuddha, Sinha Atish, P., Comprehending object and process models: An empirical study (1999) IEEE Transactions on Software Engineering, 25 (4), pp. 541-556; Agarwal, R., Sinha, A., Tanniru, M., Cognitive fit in requirements modeling: A study of object and process method (1996) Journal of Management Information Systems, pp. 137-162; Amyot, D., Introduction to the user requirements notation: Learning by example. Computer networks (2003) ITU-T System Design Languages (SDL), 42 (3), pp. 285-301; Anda, B., Sjøberg, D., Jørgensen, M., Quality and understandability of Use Case models (2000) Proc. 13th European Conference on Object-Oriented Programming (ECOOP2001), pp. 402-428; Andrich, R., Botto, F., Gower, V., Leonardi, C., Mayora, O., Pigini, L., Revolti, V., Zancanaro, M., (2010) ACube: User-Centred and Goal-Oriented Techniques, , Fondazione Bruno Kessler - IRST, Tech. Rep; Aranda, J., Ernst, N., Horkoff, J., Easterbrook, S., A framework for empirical evaluation of model comprehensibility (2007) Proc. Modeling in Software Engineering (MISE), 2007, pp. 7-13. , ICSE Workshop 2007. IEEE CS; Ayala, C.P., Cares, C., Carvallo, J.P., Grau, G., Haya, M., Salazar, G., Franch, X., Quer, C., A comparative analysis of i*-based agent-oriented modeling languages (2005) Proceedings of the 17th International Conference on Software Engineering and Knowledge, Engineering (SEKE'2005), pp. 43-50; Basili Victor, R., Shull Forrest, Lanubile Filippo, Building knowledge through families of experiments (1999) IEEE Transactions on Software Engineering, 25 (4), pp. 456-473; Booch, G., Jacobson, I., Rumbaugh, J., (2005) The Unified Modeling Language User Guide, , second ed. Addison-Wesley; Bresciani, P., Perini, A., Giorgini, P., Giunchiglia, F., Mylopoulos, J., Tropos: An agent-oriented software development methodology (2004) Autonomous Agents and Multi-Agent Systems, 8 (3), pp. 203-236. , DOI 10.1023/B:AGNT.0000018806.20944.ef; Briand, L.C., Labiche, Y., Di Penta, M., Yan-Bondoc, H., An experimental investigation of formality in UML-based development (2005) IEEE Transactions on Software Engineering, 31 (10), pp. 833-849. , DOI 10.1109/TSE.2005.105; Budgen, D., Burn, A.J., Brereton, O.P., Kitchenham, B.A., Pretorius, R., Empirical evidence about the UML: A systematic literature review (2010) Software Practice and Experience, 41 (4), pp. 363-392; Burton-Jones, A., Meso, P., The effects of decomposition quality and multiple forms of information on novices' understanding of a domain from a conceptual model (2008) Journal of the AIS, 9 (12). , (article 1); Castro, J., Kolp, M., Mylopoulos, J., Towards requirements-driven information systems engineering: The Tropos project (2002) Information Systems, 27 (6), pp. 365-389. , DOI 10.1016/S0306-4379(02)00012-1, PII S0306437902000121; Cohen, J., (1988) Statistical Power Analysis for the Behavioral Sciences, , second ed. Lawrence Earlbaum Associates Hillsdale, NJ; Dahan, M., Shoval, P., Sturm, A., Comparing the impact of the OO-DFD and the Use Case methods for modeling functional requirements on comprehension and quality of models: A controlled experiment (2012) Requirements Engineering, pp. 1-17; Dardenne, A., Van Lamsweerde, A., Fickas, S., Goal-directed requirements acquisition (1993) Science of Computer Programming, 20 (1-2), pp. 3-50. , DOI 10.1016/0167-6423(93)90021-G; De Lucia, A., Gravino, C., Oliveto, R., Tortora, G., Data model comprehension: An empirical comparison of ER and UML class diagrams (2008) The 16th IEEE International Conference on Program Comprehension, pp. 93-102; De Lucia, A., Gravino, C., Oliveto, R., Tortora, G., An experimental comparison of ER and UML class diagrams for data modelling (2010) Empirical Software Engineering, 15 (5), pp. 455-492; Dobing, B., Parsons, J., How UML is used (2006) Communications of the ACM, 49 (5), pp. 109-113. , http://delivery.acm.org/10.1145/1130000/1125949/p109-dobing.pdf?key1= 1125949&key2=5621052511&coll=ACM&dl=ACM&CFID= 1144325&CFTOKEN=73813730, Two Decades of the Language-action Perspective; Falessi, D., Cantone, G., Grande, C., A comparison of structured analysis and object-oriented analysis: An experimental study (2007) International Conference on Software and Data Technologies (ICSOFT 2007); Gemino, A., Empirical comparisons of animation and narration in requirements validation (2004) Requirements Engineering, 9 (3), pp. 153-168; Gemino, A., Wand, Y., Complexity and clarity in conceptual modeling: Comparison of mandatory and optional properties (2005) Data and Knowledge Engineering, 55 (3), pp. 301-326. , DOI 10.1016/j.datak.2004.12.009, PII S0169023X04002332, Quality in Conceptual Modeling: Five Examples of the State of Art; Gemino, A., Wand, Y., A framework for empirical evaluation of conceptual modeling techniques (2004) Requirements Engineering, 9 (4), pp. 248-260. , DOI 10.1007/s00766-004-0204-6, Evaluation of Modeling Methods in Systems Analysis and Design; Gemino, A., Parker, D., Use case diagrams in support of use case modeling: Deriving understanding from the picture (2009) Journal of Data-base Management, 20 (1), pp. 1-24; Genero, M., Fernández, A.M., Nelson, H.J., Poels, G., Piattini, M., A systematic literature review on the quality of UML models (2011) Journal of Database Management, 22 (3), pp. 46-70; Glass, G.V., Primary, secondary and meta-analysis of research (1976) Educational Researcher, 10, pp. 3-8; Hadar, I., Hazzan, O., On the Contribution of UML diagrams to software system comprehension (2004) Journal of Object Technology, 3 (1), pp. 143-156. , http://www.jot.fm/issues/issue_2004_01/article3; Hadar, I., Kuflik, T., Perini, A., Reinhartz-Berger, I., Ricca, F., Susi, A., An empirical study of requirements model understanding: Use Case vs. Tropos models (2010) Proc. 25th Symposium on Applied Computing, ACM SAC 2010, , Switzerland, March; Hedges, L.V., Olkin, I., (1985) Statistical Methods for Meta-analysis, , Academic Press New York; Iversen, G., Norpoth, H., (1987) Analysis of Variance, , second ed. Sage Publications; Jedlitschka, A., Ciolkowski, M., Pfahl, D., (2008) Reporting Experiments in Software Engineering, Guide to Advanced Empirical Software Engineering, , Springer London pp. 201-228; Khatri, V., Vessey, I., Ramesh, V., Clay, P., Park, S.-J., Understanding conceptual schemas: Exploring the role of application and IS domain knowledge (2006) Information Systems Research, 17 (1), pp. 81-99. , http://www.extenza-eps.com/INF/doi/pdf/10.1287/isre.1060.0081, DOI 10.1287/isre.1060.0081; Kim, Y.G., March, S.T., Comparing data modeling formalisms (1995) Communications of the ACM, 38 (6), pp. 103-115; Kim, M., Park, S., Sugumaran, V., Yang, H., Managing requirements conflicts in software product lines: A goal and scenario based approach (2007) Data and Knowledge Engineering, 61 (3), pp. 417-432. , DOI 10.1016/j.datak.2006.06.009, PII S0169023X06001121; Kitchenham, B.A., Lawrence, S., Lesley, P., Pickard, M., Jones, P.W., Hoaglin, D.C., Emam, K.E., Preliminary guidelines for empirical research (2002) IEEE Transactions on Software Engineering, 28 (8), pp. 721-734; Kitchenham, B.A., Peeger, S.L., Personal opinion surveys (2008) Guide to Advanced Empirical Software Engineering, pp. 63-92. , F. Shull, J. Singer, D.I.K. Sjoberg, Springer London; Larkin, J.H., Simon, H.A., Why a diagram is (sometimes) worth ten thousand words (1987) Cognitive Science, 11, pp. 65-99; Manning, C.D., Raghavan, P., Schütze, H., (2008) Introduction to Information Retrieval, , Cambridge University Press; Moody, D.L., Theoretical and practical issues in evaluating the quality of conceptual models: Current state and future directions (2005) Data and Knowledge Engineering, 55 (3), pp. 243-276. , DOI 10.1016/j.datak.2004.12.005, PII S0169023X04002307, Quality in Conceptual Modeling: Five Examples of the State of Art; Morandini, M., Perini, A., Marchetto, A., Empirical evaluation of Tropos4AS modeling (2011) CEUR Proceedings of the 5th International i* Workshop (IStar 2011); Mylopoulos, J., Conceptual modeling and Telos (1992) Conceptual Modeling, Data-bases and Case: An Integrated View of Information Systems Development, , P. Loucopoulos, R. Zicari, Wiley NY pp. 49-68 (Chapter 2); Mylopoulos, J., Kolp, M., Castro, J., UML for Agent-Oriented Software Development: The Tropos Proposal (2001) Lecture Notes in Computer Science, (2185), pp. 422-441. , "UML" 2001 - The Unified Modeling Language. Modeling Languages, Concepts, and Tools. 4th International Conference Toronto, Canada, October 1-5, 2001 Proceedings; Nuseibeh, B., Easterbrook, S., Requirements engineering: A roadmap (2000) Proc. Conference on the Future Of, Software Engineering (ICSE'00), pp. 35-46; Peleg, M., Dori, D., The model multiplicity problem: Experimenting with real-time specification methods IEEE Transactions on Software Engineering, 26 (8-200), pp. 742-759; Phalp, K.T., Vincent, J., Cox, K., Improving the quality of use case descriptions: Empirical assessment of writing guidelines (2007) Software Quality Journal, 15 (4), pp. 383-399; Razali, R., Garratt, P.W., Measuring the comprehensibility of a UML-B Model and a B Model (2006) Enformatika Transactions on Engineering Computing and Technology, 16, pp. 338-343; Reinhartz-Berger, I., Dori, D., OPM vs. UML - Experimenting with comprehension and construction of web application models (2005) Empirical Software Engineering, 10 (1), pp. 57-79. , DOI 10.1023/B:EMSE.0000048323.40484.e0; Ricca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M., How developers' experience and ability influence web application comprehension tasks supported by UML stereotypes: A series of four experiments (2010) IEEE Transactions on Software Engineering, 36 (1), pp. 96-118; Rolland, C., Grosz, G., Kla, R., Experience with goal-scenario coupling in requirements engineering (1999) Proc. IEEE Int. Symp. on RE, pp. 74-81; Rolland, C., Guiding goal modeling using scenarios (1998) IEEE Transactions on Software Engineering, 24 (12), pp. 1055-1071; Shanks, G., Nuredini, J., Tobin, D., Moody, D., Weber, R., Representing things and properties in conceptual modeling: An empirical investigation (2003) Proc. 11th European Conference of Information Systems, , Naples, Italy, June; Staron, M., Kuzniarz, L., Wohlin, C., Empirical assessment of using stereotypes to improve comprehension of UML models: A set of experiments (2006) Journal of Systems and Software, 79 (5), pp. 727-742; Susi, A., Perini, A., Mylopoulos, J., Giorgini, P., The Tropos metamodel and its use (2005) Informatica (Ljubljana), 29 (4), pp. 401-408; Siau, K., Informational and computational equivalence in comparing information modeling methods (2004) Journal of Database Management, 15 (1), pp. 73-86; Siau, K., Rossi, M., Evaluation techniques for systems analysis and design modeling methods - A review and comprehensive analysis (2011) Information Systems Journal, 21, pp. 249-268; Shull, F., Carver, J.C., Vegas, S., Juristo, N., "The role of replications" in empirical software engineering (2008) Empirical Software Engineering, 13 (2), pp. 211-218; Sutcliffe, A., Scenario-based requirements engineering (2003) Proc. 11th IEEE Int. Conf. On, Requirements Engineering (RE'2003), pp. 320-329; Svahnberg, M., Aurum, A., Wohlin, C., Using students as subjects - An empirical evaluation (2008) Proc. Second ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, pp. 288-290. , October 09-10, 2008, Kaiserslautern, Germany; Torchiano, M., Ricca, F., Tonella, P., Empirical comparison of graphical and annotation-based re-documentation approaches (2010) IET-Software, 4 (1), pp. 15-31; Van Lamsweerde, A., Goal-oriented requirements engine ring: A roundtrip from research to practice (2004) Proceedings of the IEEE International Conference on Requirements Engineering, pp. 4-7. , Proceedings - 12th IEEE International Requirements Engineering Conference. RE 2004; Wohlin, C., The personal software process as a context for empirical studies (1998) IEEE TCSE Software Process Newsletter, (12), pp. 7-12. , Spring; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M., Regnell, B., Wesslén, A., (2000) Experimentation in Software Engineering - An Introduction, , Kluwer Academic Publishers; Yu, E., (1995) Modelling Strategic Relationships for Process Reengineering, , PhD Thesis, University of Toronto, Department of Computer Science},
  review                  = {{E C2}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880843740&doi=10.1016%2fj.infsof.2013.05.003&partnerID=40&md5=d4afa87497d73f17918d933c2722c302},
}

@Article{Harder20131063,
  author                  = {Harder, J. and Göde, N.},
  title                   = {Cloned code: Stable code},
  journal                 = {Journal of software: Evolution and Process},
  year                    = {2013},
  volume                  = {25},
  number                  = {10},
  pages                   = {1063-1088},
  issn                    = {20477481},
  note                    = {cited By 10},
  abbrev_source_title     = {J. Softw. Evol. Process},
  abstract                = {SUMMARY Code clones are said to threaten the maintainability of a system - especially when the system evolves and source code is changed. Whether clones increase maintenance effort can be analyzed by comparing the stability of cloned code with the stability of non-cloned code. A previous study found that cloned code is even more stable than non-cloned code and, thus, may require less maintenance effort - contrary to the frequently voiced assumption. In this paper, we partially replicate this study using a more fine-grained measurement. We furthermore extend the study to subject systems from academia and industry and evaluate the effect of different clone detection parameters on clone stability and how the stability changes over time. In general, we were able to confirm the findings of the previous study. Nevertheless, our results also show that clone stability varies depending on the clones' characteristics, the corresponding project environment, and over time. Copyright © 2012 John Wiley & Sons, Ltd. Redundancies in source code - clones - are believed to complicate software maintenance. This exploratory case study analyzes the stability of source code clones - that is, how often and how much code clones change. In general, redundancies in open-source, industrial, and academic software systems were found to change less than the non-cloned code. This contradicts the frequently voiced assumption that clones increase maintenance costs because they change more often than other code. Copyright © 2012 John Wiley & Sons, Ltd.},
  affiliation             = {Software Engineering Group, Faculty 03, University of Bremen, Germany},
  author_keywords         = {Code clones; Experimentation; Stability},
  correspondence_address1 = {Harder, J.; Software Engineering Group, Faculty 03, University of BremenGermany; email: harder@informatik.uni-bremen.de},
  document_type           = {Conference Paper},
  doi                     = {10.1002/smr.1551},
  funding_details         = {KO 2342/2-1, DFG, Deutsche Forschungsgemeinschaft},
  keywords                = {Codes (symbols); Convergence of numerical methods; Maintenance; Stability, Clone detection; Code clone; Experimentation; Maintenance efforts; Project environment; Source codes, Cloning},
  language                = {English},
  publisher               = {John Wiley and Sons Ltd},
  references              = {Krinke, J., Is cloned code more stable than non-cloned code? (2008) Proceedings of the 8th International Working Conference on Source Code Analysis and Manipulation, pp. 57-66. , IEEE; Göde, N., Harder, J., Clone stability (2011) Proceedings of the 15th European Conference on Software Maintenance and Reengineering, pp. 65-74. , IEEE Computer Society; Koschke, R., Survey of research on software clones (2007) Duplication, Redundancy, and Similarity in Software, , Koschke R. Merlo E. Walenstein A. (eds.). no. 06301 in Dagstuhl Seminar Proceedings, Internationales Begegnungs- und Forschungszentrum für Informatik (IBFI), Schloss Dagstuhl, Germany: Dagstuhl, Germany; Roy, C.K., Cordy, J.R., A survey on software clone detection research (2007) Technical Report, , Queens University at Kingston, Ontario, Canada; Hotta, K., Sano, Y., Higo, Y., Kusumoto, S., Is duplicate code more frequently modified than non-duplicate code in software evolution?: An empirical study on open source software (2010) Proceedings of the Joint Workshop on Software Evolution and International Workshop on Principles of Software Evolution, pp. 73-82. , ACM; Kim, M., Sazawal, V., Notkin, D., Murphy, G.C., An empirical study of code clone genealogies (2005) Proceedings of the Joint 10th European Software Engineering Conference and the 13th ACM SIGSOFT Symposium on the Foundations of Software Engineering, pp. 187-196. , ACM; Aversano, L., Cerulo, L., Di Penta, M., How clones are maintained: An empirical study (2007) Proceedings of the 11th European Conference on Software Maintenance and Reengineering, pp. 81-90. , IEEE; Göde, N., Evolution of type-1 clones (2009) Proceedings of the 9th International Working Conference on Source Code Analysis and Manipulation, pp. 77-86. , IEEE; Thummalapenta, S., Cerulo, L., Aversano, L., Di Penta, M., An empirical study on the maintenance of source code clones (2010) Empirical Software Engineering, 15 (1), pp. 1-34; Bakota, T., Ferenc, R., Gyimõthy, T., Clone smells in software evolution (2007) Proceedings of the 23rd International Conference on Software Maintenance, pp. 24-33. , IEEE; Bettenburg, N., Shang, W., Ibrahim, W., Adams, B., Zou, Y., Hassan, A.E., An empirical study on inconsistent changes to code clones at release level (2009) Proceedings of the 25th Working Conference on Reverse Engineering, pp. 85-94. , IEEE; Göde, N., Koschke, R., Frequency and risks of changes to clones (2011) Proceedings of the 33rd International Conference on Software Engineering, pp. 311-320. , ACM; Baker, B.S., On finding duplication and near-duplication in large software systems (1995) Proceedings of the 2nd Working Conference on Reverse Engineering, pp. 86-95. , IEEE; Baxter, I.D., Yahin, A., Moura, L., Sant'Anna, M., Bier, L., Clone detection using abstract syntax trees (1998) Proceedings of the International Conference on Software Maintenance, pp. 368-377. , IEEE; Johnson, J.H., Identifying redundancy in source code using fingerprints (1993) Proceedings of the Conference of the Centre for Advanced Studies on Collaborative Research, pp. 171-183. , IBM Press; Kamiya, T., Kusumoto, S., Inoue, K., CCFinder: A multilinguistic token-based code clone detection system for large scale source code (2002) IEEE Transactions on Software Engineering, 28 (7), pp. 654-670; Komondoor, R.V., Horwitz, S., Using slicing to identify duplication in source code (2001) Proceedings of the 8th International Symposium on Static Analysis, pp. 40-56. , Springer-Verlag; Bellon, S., Koschke, R., Antoniol, G., Krinke, J., Merlo, E., Comparison and evaluation of clone detection tools (2007) IEEE Transactions on Software Engineering, 33 (9), pp. 577-591; Göde, N., Koschke, R., Incremental clone detection (2009) Proceedings of the 13th European Conference on Software Maintenance and Reengineering, pp. 219-228. , IEEE; Göde, N., Koschke, R., Studying clone evolution using incremental clone detection (2010) Journal of Software Maintenance and Evolution: Research and Practice, , Published online; Nguyen, T.T., Nguyen, H.A., Al-Kofahi, J., Pham, N.H., Nguyen, T.N., Scalable and incremental clone detection for evolving software (2009) Proceedings of the International Conference on Software Maintenance, pp. 491-494. , IEEE; Hummel, B., Juergens, E., Heinemann, L., Conradt, M., Index-based code clone detection: Incremental, distributed, scalable (2010) Proceedings of the 26th International Conference on Software Maintenance, , IEEE; Harder, J., Göde, N., Modeling clone evolution (2009) Workshop Proceedings of the 13th European Conference on Software Maintenance and Reengineering, pp. 17-21; Ueda, Y., Kamiya, T., Kusumoto, S., Inoue, K., On detection of gapped code clones using gap locations (2002) Proceedings of the 9th Asia-Pacific Software Engineering Conference, pp. 327-336. , IEEE; Kapser, C., Godfrey, M., Cloning considered harmful" considered harmful (2006) Proceedings of the Working Conference on Reverse Engineering, pp. 19-28. , IEEE; Cordy, J.R., Comprehending reality - Practical barriers to industrial adoption of software maintenance automation (2003) Proceedings of the 11th IEEE International Workshop on Program Comprehension, pp. 196-205. , IEEE},
  review                  = {{E C6 C4}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898432792&doi=10.1002%2fsmr.1551&partnerID=40&md5=49ac4813372181a06e51c16abb1aee35},
}

@Article{Herbold20161,
  author                  = {Herbold, S. and Trautsch, A. and Grabowski, J.},
  title                   = {Global vs. local models for cross-project defect prediction: A replication study},
  journal                 = {Empirical Software Engineering},
  year                    = {2016},
  pages                   = {1-37},
  issn                    = {13823256},
  note                    = {cited By 0; Article in Press},
  abbrev_source_title     = {Empir Software Eng},
  abstract                = {Although researchers invested significant effort, the performance of defect prediction in a cross-project setting, i.e., with data that does not come from the same project, is still unsatisfactory. A recent proposal for the improvement of defect prediction is using local models. With local models, the available data is first clustered into homogeneous regions and afterwards separate classifiers are trained for each homogeneous region. Since the main problem of cross-project defect prediction is data heterogeneity, the idea of local models is promising. Therefore, we perform a conceptual replication of the previous studies on local models with a focus on cross-project defect prediction. In a large case study, we evaluate the performance of local models and investigate their advantages and drawbacks for cross-project predictions. To this aim, we also compare the performance with a global model and a transfer learning technique designed for cross-project defect predictions. Our findings show that local models make only a minor difference in comparison to global models and transfer learning for cross-project defect prediction. While these results are negative, they provide valuable knowledge about the limitations of local models and increase the validity of previously gained research results. © 2016 Springer Science+Business Media New York},
  affiliation             = {Institute of Computer Science, Georg-August-Universität Göttingen, Göttingen, Germany},
  author_keywords         = {Cross-project; Defect prediction; Local models},
  coden                   = {ESENF},
  correspondence_address1 = {Herbold, S.; Institute of Computer Science, Georg-August-Universität GöttingenGermany; email: herbold@cs.uni-goettingen.de},
  document_type           = {Article in Press},
  doi                     = {10.1007/s10664-016-9468-y},
  keywords                = {Defects, Cross-project; Data heterogeneity; Defect prediction; Homogeneous regions; Local model; Replication study; Research results; Transfer learning, Forecasting},
  language                = {English},
  publisher               = {Springer New York LLC},
  review                  = {{CS C11}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992223488&doi=10.1007%2fs10664-016-9468-y&partnerID=40&md5=5c27ff1dfe9467e8ef9c0eea69e2d9ff},
}

@Article{Howison201429,
  author              = {Howison, J. and Crowston, K.},
  title               = {Collaboration through open superposition: A theory of the open source way},
  journal             = {MIS Quarterly: Management Information Systems},
  year                = {2014},
  volume              = {38},
  number              = {1},
  pages               = {29-50},
  issn                = {02767783},
  note                = {cited By 27},
  abbrev_source_title = {MIS Quart Manage Inf Syst},
  abstract            = {This paper develops and illustrates the theory of collaboration through open superposition: the process of depositing motivationally independent layers of work on top of each other over time. The theory is developed in a study of community-based free and open source software (FLOSS) development, through a research arc of discovery (participant observation), replication (two archival case studies), and theorization. The theory explains two key findings: (1) the overwhelming majority of work is accomplished with only a single programmer working on any one task, and (2) tasks that appear too large for any one individual are more likely to be deferred until they are easier rather than being undertaken through structured team work. Moreover, the theory explains how working through open superposition can lead to the discovery of a work breakdown that results in complex, functionally interdependent, work being accomplished without crippling search costs. We identify a set of socio-technical contingencies under which collaboration through open superposition is likely to be effective, including characteristics of artifacts made from information as the objects being worked on. We demonstrate the usefulness of the theory by using it to analyze difficulties in learning from FLOSS in other domains of work and in the IS function of for-profit organizations.},
  affiliation         = {School of Information, University of Texas at Austin, 1616 Guadalupe Avenue, Austin, TX, United States; School of Information Studies, Syracuse University, 343 Hinds Hall, Syracuse, NY, United States},
  author_keywords     = {Collaboration; Coordination; Information systems development; Materiality; Open source; Socio-technical system},
  coden               = {MISQD},
  document_type       = {Article},
  keywords            = {Open systems; Software engineering, Collaboration; Coordination; Information systems development; Materiality; Open sources; Sociotechnical systems, Open source software},
  language            = {English},
  publisher           = {University of Minnesota},
  references          = {Agerfalk, P.J., Fitzgerald, B., Outsourcing to an unknown workforce: Exploring opensourcing as a global sourcing strategy (2008) MIS Quarterly, 32 (2), pp. 385-409; Bailey, D.E., Barley, S.R., Return to work: Towards post-industrial engineering (2005) IIE Transactions, 37 (8), pp. 737-752; Baldwin, C.Y., Clark, K.B., (2000) Design Rules: The Power of Modularity, , Cambridge, MA: Harvard Business School Press; Baldwin, C.Y., Clark, K.B., The architecture of participation: Does code architecture mitigate free riding in the open source development model? (2006) Management Science, 52 (7), pp. 1116-1127; Barley, S.R., Technology as an occasion for structuring: Observations on ct scanners and the social order of radiology departments (1986) Administrative Science Quarterly, 31 (1), pp. 78-108; Barley, S.R., Kunda, G., Bringing work back in (2001) Organization Science, 12 (1), pp. 76-95; Benkler, Y., Coase's penguin, or, linux and the nature of the firm (2002) Yale Law Journal, (112), pp. 369-446; Boudreau, K.J., Lacetera, N., Lakhani, K.R., Incentives and problem uncertainty in innovation contests: An empirical analysis (2011) Management Science, 57 (5), pp. 843-863; Bowker, G.C., Star, S.L., (2000) Sorting Things Out: Classification and its Consequences, , Cambridge, MA: MIT Press; Brand, S., (1995) How Buildings Learn: What Happens After They're Built, , New York: Penguin Books; Butler, B.S., Membership size, communication activity, and sustainability: The internal dynamics of networked social structures (2001) Information Systems Research, 12 (4), pp. 346-362; Capiluppi, A., Michlmayr, M., From the cathedral to the bazaar: An empirical study of the lifecycle of volunteer community projects (2007) Open Source Development, Adoption and Innovation, the International Federation for Information Processing (IFIP), pp. 31-44. , J. Feller, B. Fitzgerald, W. Scacchi, and A. Sillitti eds., New York: Springer; Colfer, L., Baldwin, C.Y., (2010) The Mirroring Hypothesis: Theory, Evidence and Exceptions, , Working Paper, Harvard Business School Finance; Conley, C.A., Sproull, L., Easier said than done: An empirical investigation of software design and quality in open source software development (2009) Proceedings of the 42nd Annual Hawaii International Conference on System Sciences, , Los Alamitos, CA: IEEE Computer Society Press; Crowston, K., Wade, M., Introduction to jais special issue on empirical research on free/libre open source software (2010) Journal of the Association for Information Systems, 11 (11), pp. i-v; Crowston, K., Wei, K., Howison, J., Wiggins, A., Free/libre open source software development: What we know and what we do not know (2012) ACM Computing Surveys, 44 (2); Dabbish, L., Stewart, C., Tsay, J., Herbsleb, J.D., Social coding in github: Transparency and collaboration in an open software repository (2011) Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work, pp. 1277-1286. , Seattle, WA, February 11-15; Daniel, S.L., Diamant, E.I., Network effects in OSS development: The impact of users and developers on project performance (2008) Proceedings of the 29th International Conference on Information Systems, , Paris, France, December 14-17, Paper 122; Dennis, A.R., Valacich, J.S., Fuller, R.M., Media, tasks, and communication processes: A theory of media synchronicity (2008) MIS Quarterly, 32 (3), pp. 575-600; De Sanctis, G., Poole, M.S., Capturing the complexity in advanced technology use: Adaptive structuration theory (1994) Organization Science, 5 (2), pp. 121-147; Dinkelacker, J., Garg, P.K., Miller, R., Nelson, D., Progressive open source (2002) Proceedings of the 24th International Conference on Software Engineering, pp. 177-184. , Orlando, FL, May 19-25; Dunlop, J.J., Balancing power: How to achieve a better balance between staff and volunteer influence (1990) Association Management, , January; Duval, J., (2010) Next Generation Democracy: What the Open-source Revolution Means for Power, , Politics, and Change, New York: Bloomsbury USA; Fitzgerald, B., The transformation of open source software (2006) MIS Quarterly, 30 (3), pp. 587-598; Fowler, M., Beck, K., (1999) Refactoring: Improving the Design of Existing Code, , Boston: Addison-Wesley Professional; Gallivan, M.J., Striking a balance between trust and control in a virtual organization: A content analysis of open source software case studies (2001) Information Systems Journal, 11 (4), pp. 277-304; Gaughan, G., Fitzgerald, B., Shaikh, M., An examination of the use of open source software processes as a global software development solution for commercial software engineering (2009) Proceedings of the 35th Euromicro Conference on Software Engineering and Advanced Applications, pp. 20-27. , Patras, Greece, August 27-29; Geiger, R.S., Ribes, D., Trace ethnography: Following coordination through documentary practices (2011) Proceedings of the 44th Hawaii International Conference on System Sciences, , Los Alamitos, CA: IEEE Computer Society Press; Gurbani, V.K., Garvert, A., Herbsleb, J.D., A case study of a corporate open source development model (2006) Proceedings of the 28th International Conference on Software Engineering, pp. 472-481. , Shanghai, China, May 20-28; Hahn, J., Moon, J.Y., Zhang, C., Emergence of new project teams from open source software developer networks: Impact of prior collaboration ties (2008) Information Systems Research, 19 (3), pp. 369-391; Handy, C., (1988) Understanding Voluntary Organizations, , New York: Penguin Books; Harvey, L.J., Myers, M.D., Scholarship and practice: The contribution of ethnographic research methods to bridging the gap (1995) Information Technology & People, 8 (3), pp. 13-27; Heller, M.A., Eisenberg, R.S., Can patents deter innovation? The anticommons in biomedical research (1998) Science, 280 (5364), pp. 698-701; Herbsleb, J.D., Mockus, A., Finholt, T.A., Grinter, R.E., An empirical study of global software development: Distance and speed (2001) Proceedings of the 23rd International Conference on Software Engineering, pp. 81-90. , Toronto, Ontario, Canada, May 12-19; Hertel, G., Motivating job design as a factor in open source governance (2007) Journal of Management and Governance, 11 (2), pp. 129-137; Hinds, P.J., Mortensen, M., Understanding conflict in geographically distributed teams: The moderating effects of shared identity, shared context, and spontaneous communication (2005) Organization Science, 16 (3), pp. 290-307; Ives, B., Hamilton, S., Davis, G.B., A framework for research in computer-based management information systems (1980) Management Science, 26 (9), pp. 910-934; Jarvenpaa, S.L., Leidner, D.E., Communication and trust in global virtual teams (1999) Organization Science, 10 (6), pp. 791-815; Ke, W., Zhang, P., The effects of extrinsic motivations and satisfaction in open source software development (2010) Journal of the Association for Information Systems, 11 (12), pp. 784-808; Kiggundu, M.N., Task interdependence and job design: Test of a theory (1983) Organizational Behavior and Human Performance, 31 (2), pp. 145-172; Kittur, A., Kraut, R.E., Harnessing the wisdom of crowds in wikipedia: Quality through coordination (2008) Proceedings of the 2008 ACM Conference on Computer-supported Cooperative Work, pp. 37-46. , San Diego, CA, November 8-12; Klein, H.J., Wesson, M.J., Hollenbeck, J.R., Alge, B.J., Goal commitment and the goal-setting process: Conceptual clarification and empirical synthesis (1999) Journal of Applied Psychology, 84 (6), pp. 885-896; Knorr-Cetina, K., (1999) Epistemic Communities, , Cambridge, MA: Harvard Education Press; Krishnamurthy, S., Cave or community: An empirical examination of 100 mature open source projects (2002) First Monday, 7 (6); Lakhani, K., Von Hippel, E., How open source software works: 'Free' user-to-user assistance (2003) Research Policy, 32 (6), pp. 923-943; Leonardi, P.M., Digital materiality? How artifacts without matter, natter (2010) First Monday, 15 (6-7); Leonardi, P.M., Barley, S.R., Materiality and change: Challenges to building better theory about technology and organizing (2008) Information and Organization, 18 (3), pp. 159-176; Lewis, I.M., (1985) Social Anthropology in Perspective: The Relevance of Social Anthropology, , Cambridge, UK: Cambridge University Press; Lipnack, J., Stamps, J., (1997) Virtual Teams: Reaching Across Space, Time and Organizations with Technology, , Hoboken, NJ: John Wiley and Sons, Inc; Locke, E.A., Latham, G.P., What should We do about motivation theory? Six recommendations for the twenty-first century (2004) Academy of Management Review, 29 (3), pp. 388-403; MacCormack, A., Rusnak, J., Baldwin, C.Y., Exploring the structure of complex software designs: An empirical study of open source and proprietary code (2006) Management Science, 52 (7), pp. 1015-1030; Malhotra, A., Majchrzak, A., How virtual teams use their virtual workspace to coordinate knowledge (2012) ACM Transactions on Management Information Systems, 3 (1), pp. 1-14; Malone, T.W., Crowston, K., The interdisciplinary theory of coordination (1994) ACM Computing Surveys, 26 (1), pp. 87-119; Michlmayr, M., Managing volunteer activity in free software projects (2004) Proceedings of the 2004 USENIX Annual Technical Conference, pp. 39-50. , FREENIX Track, Boston, June 27-July 2; Myers, M., Investigating information systems with ethnographic research (1999) Communications of the Association for Information Systems, (2); O'Mahony, S., Ferraro, F., Governance in collective production communities (2007) Academy of Management Journal, 50 (5), pp. 1079-1106; Olson, G.M., Olson, J.S., Distance matters (2000) Human-computer Interaction, 15 (2), pp. 139-179; Orlikowski, W.J., Learning from notes: Organizational issues in groupware implementation (1992) Proceedings of the 1992 ACM Conference on Computer-supported Cooperative Work, pp. 362-369. , Toronto, Canada, October 31-November 4; Orlikowski, W.J., Iacono, C.S., Research commentary: Desperately seeking the 'it' in it research: A call to theorizing the it artifact (2001) Information Systems Research, 12 (2), pp. 121-134; Orlikowski, W., Scott, S.V., Sociomateriality: Challenging the Separation of Technology, Work and Organization (2008) The Academy of Management Annals, 2 (1), pp. 433-474; Parnas, D.L., Clements, P.C., Weiss, D.M., The modular structure of complex systems (1981) IEEE Transactions on Software Engineering, 11 (3), pp. 259-266; Pentland, B.T., Building process theory with narrative: From description to explanation (1999) Academy of Management Review, 24 (4), pp. 711-724; Polanyi, M., The republic of science: Its political and economic theory (1962) Minerva, 1 (1), pp. 54-74; Powell, W.W., Neither market nor hierarchy: Network forms of organization (1990) Research in Organizational Behavior, (12), pp. 295-336; Rousseau, V., Aube, C., Savoie, A., Teamwork behaviors: A review and an integration of frameworks (2006) Small Group Research, 37 (5), pp. 540-570; Ryan, R.M., Deci, E.L., Intrinsic and extrinsic motivations: Classic definitions and new directions (2000) Contemporary Educational Psychology, 25 (1), pp. 54-67; Sarker, S., Sahay, S., Implications of space and time for distributed work: An interpretive study of us-norwegian systems development teams (2004) European Journal of Information Systems, 13 (1), pp. 3-20; Scacchi, W., Feller, J., Fitzgerald, B., Hissam, S., Lakhani, K., Guest editorial: Understanding free/open source software development processes (2006) Software Process: Improvement and Practice, (11), pp. 95-105; Shah, S.K., Motivation, governance, and the viability of hybrid forms in open source software development (2006) Management Science, 52 (7), pp. 1000-1014; Shirky, C., (2008) Here Comes Everybody: The Power of Organizing Without Organizations, , New York: Penguin Press; Stewart, K.J., Gosain, S., The impact of ideology on effectiveness in open source software development teams (2006) MIS Quarterly, 30 (2), pp. 291-314; Suchman, L.A., (1987) Plans and Situated Actions: The Problem of Human-machine Communication, , 2nd ed. Cambridge, UK: Cambridge University Press; Trist, E.L., Bamforth, K.W., Social and psychological consequences of the longwall method of coal-getting (1951) Human Relations, 4 (1), pp. 3-38; Van Maanen, J., (1988) Tales of the Field: On Writing Ethnography, , Chicago: University of Chicago Press; Von Krogh, G., Von Hippel, E., Editorial: Special issue on open source software development (2003) Research Policy, 32 (7), pp. 1149-1157; Von Krogh, G., Von Hippel, E., The promise of research on open source software (2006) Management Science, 52 (7), pp. 975-983; Wagstrom, P., (2009) Vertical Communication in Open Software Engineering Communities, , unpublished Ph. D. dissertation, Carnegie Mellon University; Wagstrom, P., Herbsleb, J.D., Kraut, R.E., Mockus, A., The impact of commercial organizations on volunteer participation in an online community (2010) Presentation at the Academy of Management Conference (OCIS Division), , Montréal, Canada, August 6-10; Walsham, G., Sahay, S., Gis for district-level administration in India: Problems and opportunities (1999) MIS Quarterly, 23 (1), pp. 39-65; Watson-Manheim, M.B., Chudoba, K.M., Crowston, K., Discontinuities and continuities: A new way to understand virtual work (2002) Information, Technology and People, 15 (3), pp. 191-209; Weick, K.E., Theory construction as disciplined imagination (1989) Academy of Management Review, 14 (4), pp. 516-531; Weick, K.E., What theory is not, theorizing is (1995) Administrative Science Quarterly, 40 (3), pp. 385-390; Weingart, L.R., Impact of group goals, task component complexity, effort, and planning on group performance (1992) Journal of Applied Psychology, 77 (5), pp. 682-693; Williamson, O.E., The economics of organization: The transaction cost approach (1981) The American Journal of Sociology, 87 (3), pp. 548-577; Yamauchi, Y., Shinohara, T., Ishida, T., Collaboration with lean media: How open-source software succeeds (2000) Proceedings of the 2000 ACM Conference on Computer Supported Cooperative Work, pp. 329-338. , Philadelphia, Pennsylvania, PA, December 2-6; Yates, J., Orlikowski, W.J., Genres of organizational communication: A structurational approach to studying communication and media (1992) The Academy of Management Review, 17 (2), pp. 299-326; Yin, R., (1994) Case Study Research: Design and Methods, , 2md ed. Newbury Park, CA: Sage Publications; Yoo, Y., Alavi, M., Emergent leadership in virtual teams: What do emergent leaders do? (2004) Information and Organization, 14 (1), pp. 27-58; Zammuto, R.F., Griffith, T.L., Majchrzak, A., Dougherty, D.J., Faraj, S., Information technology and the changing fabric of organizations (2007) Organization Science, 18 (5), pp. 749-762; Zuboff, S., (1988) The Age of the Smart Machine: The Future of Work and Power, , New York: Basic Books},
  review              = {{CS C4 C8}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905996125&partnerID=40&md5=bed13f0b473e17878914da71ad4c0ece},
}

@Conference{Huijgens201430,
  author              = {Huijgens, H. and Van Solingen, R.},
  title               = {A replicated study on correlating agile team velocity measured in function and story points},
  year                = {2014},
  pages               = {30-36},
  publisher           = {Association for Computing Machinery, Inc},
  note                = {cited By 2; Conference of 5th International Workshop on Emerging Trends in Software Metrics, WETSoM 2014 ; Conference Date: 3 June 2014; Conference Code:113295},
  abbrev_source_title = {Int. Workshop Emerg. Trends Softw. Metrics, WETSoM - Proc.},
  abstract            = {Since the rapid growth of agile development methods for software engineering, more and more organizations measure the size of iterations, releases, and projects in both function points and story points. In 2011 Santana et al. performed a case study on the relation between function points and story points, from data collected in a Brazilian Government Agency. In this paper we replicate this study, using data collected in a Dutch banking organization. Based on a statistical correlation test we find that a comparison between function points and story points as measured in our repository indicates a moderate negative linear relation, where Santana et al. concluded a strong positive linear relation between both size metrics in their case study. Based on the outcome of our study we conclude that it appears too early to make generic claims on the relation between function points and story points; in fact FSM-theory seems to underpin that such a relationship is a spurious one. Copyright 2014 ACM.},
  affiliation         = {Delft University of Technology, Netherlands; Delft University of Technology and Prowareness, Netherlands},
  author_keywords     = {Function Point; Function Point Analysis; Story Point},
  document_type       = {Conference Paper},
  doi                 = {10.1145/2593868.2593874},
  isbn                = {9781450328548},
  journal             = {5th International Workshop on Emerging Trends in Software Metrics, WETSoM 2014 - Proceedings},
  keywords            = {Agile development methods; Function point; Function point analysis; Government agencies; Linear relation; Size metrics; Statistical correlation; Story Point, Software engineering},
  language            = {English},
  references          = {Moløkken, K., Jørgensen, M., A review of surveys on software effort estimation (2003) IEEE Proceedings of the 2003 International Symposium on Empirical Software Engineering (ISESE'03); Minkiewicz, A.F., The evolution of software size: A search for value (2009) Software Engineering Technology, Vol. March/April, pp. 23-26; Schwaber, K., SCRUM development process (1997) Business Object Design and Implementation, pp. 117-134. , Springer-Verlag London Limited; Sutherland, J., Schoonheim, G., Rijk, M., Fully distributed scrum: Replicating local productivity and quality with offshore teams (2009) IEEE 42nd Hawaii International Conference on System Sciences; Sutherland, J., Schoonheim, G., Rustenburg, E., Rijk, M., Fully distributed scrum: The secret sauce for hyperproductive offshored development teams (2008) IEEE Agile 2008 Conference; Sulaiman, T., Barton, B., Blackburn, T., AgileEVM-earned value management in scrum projects (2006) IEEE AGILE 2006 Conference (AGILE'06); Santana, C., Leoneo, F., Vasconcelos, A., Gusmão, C., Using function points in agile projects (2011) Agile Processes in Software Engineering and Extreme Programming-Lecture Notes in Business Information Processing, 77, pp. 176-191. , Berlin Heidelberg, Springer-Verlag; Schmietendorf, A., Kunz, M., Dumke, R., Effort estimation for agile software development projects (2008) 5th Software Measurement European Forum, , Milan; Jones, C., (2008) Development Practices for Small Software Applications, , Software Productivity Research; Tengshe, A., Noble, S., Establishing the agile PMO: Managing variability across projects and portfolios (2007) IEEE Agile Conference; Fehlmann, T., Santillo, L., From story points to COSMIC function points in agile software development - A six sigma perspective (2010) Metrikon-Software Metrik Kongress; Bhalerao, S., Ingle, M., Incorporating vital factors in agile estimation through algorithmic method (2009) International Journal of Computer Science and Applications-Technomathematics Research Foundation, 6 (1), pp. 85-97; Fuqua, A., Using function points in XP-considerations (2003) Extreme Programming and Agile Processes in Software Engineering-Lecture Notes in Computer Science, 2675, pp. 340-342. , Springer-Verlag Berlin Heidelberg; Huijgens, H., Solingen, R.V., Measurement of best-in-class software releases (2013) IEEE Joint Conference of the 23nd International Workshop on Software Measurement and the Eighth International Conference on Software Process and Product Measurement (IWSM-MENSURA), , Ankara, Turkey; Kemerer, C.F., Porter, B.S., Improving the reliability of function point measurement: An empirical study (1992) IEEE Transactions on Software Engineering, 18 (11), pp. 1011-1024; (2009) IFPUG FSM Method: ISO/IEC 20926-Software and Systems Engineering-Software Measurement-IFPUG Functional Size Measurement Method, , IFPUG, New York: International Function Point User Group (IFPUG); (2004) NESMA Functional Size Measurement Method Conform ISO/IEC 24570, Version 2.2, , NESMA, Netherlands Software Measurement User Association (NESMA); (2006) Software Engineering-Software Life Cycle Processes-Maintenance (With Four Subtypes of Maintenance), , IFPUG, ISO/IEC 14764: International Function Point User Group (IFPUG), 2006; (2008) FPA According to NESMA and IFPUG; the Actual Situation (In Dutch), , www.nesma.nl, NESMA, Netherlands Software Metrics User Association (NESMA); Trudel, S., Buglione, L., Guideline for sizing agile projects with COSMIC (2010) IEEE International Workshop on Software Measurement (IWSM/MetriKon), , Stuttgart, Germany; Buglione, L., Abran, A., Improving estimations in agile projects: Issues and avenues (2007) Software Measurement European Forum (SMEF), , Rome, Italy; Abran, A., (2010) Software Metrics and Software Metrology, , Wiley-IEEE Computer Society Press; Cohn, M., (2006) Agile Estimating and Planning Upper Saddle River, , NY: Pearson Education; Buglione, L., Abran, A., Improving the user story agile technique using the INVEST criteria (2013) Joint Conference of the 23nd International Workshop on Software Measurement (IWSM) and the Eight International Conference on Software Process and Product Measurement (Mensura), , Ankara, Turkey; Chemuturi, M., (2009) Software Estimation Best Practices, Tools & Techniques: A Complete Guide for Software Project Estimators, , J. Ross Publishing; Marçal, A.S.C., De Freitas, B., Furtado Soares, F., Furtado, M., Maciel, T., Belchior, A., Blending Scrum practices and CMMI project management process areas (2008) Innovations in Systems and Software Engineering, 4, pp. 17-29. , Springer; Abbas, N., Gravell, A., Wills, G., The impact of organization, project and governance variables on software quality and project success (2010) IEEE Agile Conference},
  review              = {{CS C8 C4 C2}},
  source              = {Scopus},
  sponsors            = {ACM Special Interest Group on Software Engineering (SIGSOFT); IEEE Computer Society's Tech. Council on Software Engin. (TCSE)},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974623391&doi=10.1145%2f2593868.2593874&partnerID=40&md5=52ca42d82c62c1bc22fbb8f370ede00c},
}

@Conference{Idri2013207,
  author                  = {Idri, A. and Zahi, A.},
  title                   = {Software cost estimation by classical and Fuzzy Analogy for Web Hypermedia Applications: A replicated study},
  year                    = {2013},
  pages                   = {207-213},
  address                 = {Singapore},
  note                    = {cited By 4; Conference of 2013 IEEE Symposium on Computational Intelligence and Data Mining, CIDM 2013 - 2013 IEEE Symposium Series on Computational Intelligence, SSCI 2013 ; Conference Date: 16 April 2013 Through 19 April 2013; Conference Code:100021},
  abbrev_source_title     = {Proc. IEEE Symp. Comput. Intell. Data Min., CIDM - IEEE Symp. Ser. Comput. Intell., SSCI},
  abstract                = {The aim of this paper is to evaluate and to compare the Classical Analogy and Fuzzy Analogy for software cost estimation on a Web software dataset. Hence, the paper aims to replicate the results of our precedent experiments on this dataset. Moreover, questions regarding the estimates accuracy, the tolerance of imprecision and uncertainty of cost drivers, and the favorable context to use estimation by analogy are discussed. This study approved the usefulness of Fuzzy Analogy for software cost estimation. © 2013 IEEE.},
  affiliation             = {Department of Software Engineering, ENSIAS, Mohamed v University, Morocco},
  art_number              = {6597238},
  author_keywords         = {Estimation by Analogy; Fuzzy Logic; Genetic Algorithm},
  correspondence_address1 = {Department of Software Engineering, ENSIAS, Mohamed v UniversityMorocco},
  document_type           = {Conference Paper},
  doi                     = {10.1109/CIDM.2013.6597238},
  isbn                    = {9781467358958},
  journal                 = {Proceedings of the 2013 IEEE Symposium on Computational Intelligence and Data Mining, CIDM 2013 - 2013 IEEE Symposium Series on Computational Intelligence, SSCI 2013},
  keywords                = {Classical analogy; Cost drivers; Estimation by analogy; Fuzzy analogy; Software cost estimations; Web hypermedia; Web software, Application programs; Artificial intelligence; Cost estimating; Data mining; Data processing; Estimation; Fuzzy logic; Genetic algorithms; Uncertainty analysis; World Wide Web, Cost benefit analysis},
  language                = {English},
  references              = {Jørgensen, M., Shepperd, M., A systematic review of software development cost estimation studies (2007) IEEE Transactions on Software Engineering, 33 (1), pp. 33-53; Wen, J., Li, S., Lin, Z., Huc, Y., Huang, C., Systematic literature review of machine learning based software development effort estimation models (2012) Information and Software Technology, 54, pp. 41-59; Huang, S.J., Chiu, N.H., Applying fuzzy neural network to estimate software development effort (2009) Applied Intelligence, 30 (2), pp. 73-83; Kumar, K.V., Ravi, V., Carr, M., Kiran, N.R., Software development cost estimation using wavelet neural networks (2008) Journal of Systems and Software, 81, pp. 1853-1867; Park, H., Baek, S., An empirical validation of a neural network model for software effort estimation (2008) Expert Systems with Applications, 35 (3), pp. 929-937; Setiono, R., Dejaeger, K., Verbeke, W., Martens, D., Baesens, B., Software effort prediction using regression rule extraction from neural networks (2010) Proceedings of the 22nd International Conference on Tools with Artificial Intelligence, Arras, France, 2, pp. 45-52; Bibi, S., Stamelos, I., Angelis, L., Combining probabilistic models for explanatory productivity estimation (2008) Information and Software Technology, 50, pp. 656-669; Elish, M.O., Improved estimation of software project effort using multiple additive regression trees (2009) Expert Systems with Applications, 36 (7), pp. 10774-10778; Idri, A., Abran, A., Khoshgoftaar, T., Estimating software project effort by analogy based on linguistic values (2002) 8th IEEE International Software Metrics Symposium, Ottawa, pp. 21-30. , June; Keung, J., Kitchenham, B., Jeffery, D.R., Analogy-X: Providing statistical inference to analogy-based software cost estimation (2008) IEEE Transactions on Software Engineering, 34 (4), pp. 471-484; Li, J., Ruhe, G., Al-Emran, A., Richter, M., A flexible method for software effort estimation by analogy (2007) Empirical Software Engineering, 12, pp. 65-106; Mittas, N., Athanasiades, M., Angelis, L., Improving analogy-based software cost estimation by a resampling method (2008) Information and Software Technology, 50, pp. 221-230; Mittas, N., Angelis, L., LSEbA: Least squares regression and estimation by analogy in a semi-parametric model for software cost estimation (2010) Empirical Software Engineering, 15, pp. 523-555; Shepperd, M., Schofield, C., Estimating software project effort using analogies (1997) IEEE Transactions on Software Engineering, 23 (12), pp. 736-747; Vicinanza, S., Prietolla, M.J., Case-based reasoning in software effort estimation (1990) Proceedings of the 11th International Conference on Information Systems; Zadeh, L.A., Fuzzy sets (1965) Information and Control, 8, pp. 338-352; Boehm, B.W., (1981) Software Engineering Economics, , Prentice-Hall; Idri, A., Kjiri, L., Abran, A., COCOMO cost model using fuzzy logic (2000) Proceedings of the 7th International Conference on Fuzzy Set Theory and Technology, NJ, pp. 219-223; Idri, A., Amazal, F.A., Software cost estimation by fuzzy analogy for ISBSG repository (2012) Proceedings of the 10th International FLINS Conference on Uncertainty Modeling in Knowledge Engineering and Decision Making, , Istanbul, August 26-29; Mendes, E., Triggs, W.C., Mosley, N., Counsell, S., A comparison of development effort estimation techniques for web hypermedia applications (2002) 8th IEEE International Software Metrics Symposium, Ottawa, pp. 131-140; Idri, A., Zahi, A., Abran, A., Generating fuzzy term sets for software project attributes using fuzzy c-means and real coded genetic algorithms (2006) ICT4M, Malaysia, pp. 120-127. , November; Zadeh, L.A., From computing with numbers to computing with words-from manipulation of measurements to manipulation of perceptions (1999) IEEE Transactions on Circuits and Systems, 45, pp. 105-119; Bezdek, J.C., (1981) Pattern Recognition with Fuzzy Objective Function Algorithms, , Plenum Press, New York; Xie, X.L., Beni, G., A validity measure for fuzzy clustering (1991) IEEE Transactions on Pattern Analysis Machine Intelligence, 13 (8), pp. 841-847; Herrera, F., Loazano, M., Sanchez, A.M., A taxonomy for the crossover operator for real-coded genetic algorithms: An experimental study (2003) International Journal of Intelligent Systems, 18 (3), pp. 309-338; Mühlenbein, H., Schlierkamp-Voosen, D., Predictive models for the breeder genetic algorithm: I. Continuous parameter optimization (1993) Evolutionary Computation, 1 (1), pp. 25-49; Baker, J.E., Reducing bias and inefficiency in the selection algorithm (1987) Proc. ICGA, 2, pp. 14-21},
  review                  = {{E C8}},
  source                  = {Scopus},
  sponsors                = {IEEE Computational Intelligence Society},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885622172&doi=10.1109%2fCIDM.2013.6597238&partnerID=40&md5=a7c6b5315989675548f9310b89df6f32},
}

@Article{Itkonen2014303,
  author                  = {Itkonen, J. and Mäntylä, M.V.},
  title                   = {Are test cases needed? Replicated comparison between exploratory and test-case-based software testing},
  journal                 = {Empirical Software Engineering},
  year                    = {2014},
  volume                  = {19},
  number                  = {2},
  pages                   = {303-342},
  issn                    = {13823256},
  note                    = {cited By 7},
  abbrev_source_title     = {Empir Software Eng},
  abstract                = {Manual software testing is a widely practiced verification and validation method that is unlikely to fade away despite the advances in test automation. In the domain of manual testing, many practitioners advocate exploratory testing (ET), i.e., creative, experience-based testing without predesigned test cases, and they claim that it is more efficient than testing with detailed test cases. This paper reports a replicated experiment comparing effectiveness, efficiency, and perceived differences between ET and test-case-based testing (TCT) using 51 students as subjects, who performed manual functional testing on the jEdit text editor. Our results confirm the findings of the original study: 1) there is no difference in the defect detection effectiveness between ET and TCT, 2) ET is more efficient by requiring less design effort, and 3) TCT produces more false-positive defect reports than ET. Based on the small differences in the experimental design, we also put forward a hypothesis that the effectiveness of the TCT approach would suffer more than ET from time pressure. We also found that both approaches had distinctive issues: in TCT, the problems were related to correct abstraction levels of test cases, and the problems in ET were related to test design and logging of the test execution and results. Finally, we recognize that TCT has other benefits over ET in managing and controlling testing in large organizations. © 2013 Springer Science+Business Media New York.},
  affiliation             = {Department of Computer Science and Engineering, Aalto University, FI-00076 Aalto, Finland; Department of Computer Science, Lund University, Lund, Sweden},
  author_keywords         = {Effectiveness; Efficiency; Experiment; Exploratory testing; Manual testing; Software testing; Test cases},
  coden                   = {ESENF},
  correspondence_address1 = {Itkonen, J.; Department of Computer Science and Engineering, Aalto University, FI-00076 Aalto, Finland; email: juha.itkonen@aalto.fi},
  document_type           = {Article},
  doi                     = {10.1007/s10664-013-9266-8},
  keywords                = {Efficiency; Experiments; Software testing, Effectiveness; Exploratory testing; Large organizations; Manual software testing; Manual testing; Replicated experiment; Test case; Verification and validation methods, Testing},
  language                = {English},
  publisher               = {Kluwer Academic Publishers},
  references              = {Abran, A., Moore, J.W., Bourque, P., (2004) Guide to the Software Engineering Body of Knowledge 2004 Version, , IEEE Computer Society Los Alamitos Abran A, Moore JW, Bourque P et al (2004) Guide to the software engineering body of knowledge 2004 version. IEEE Computer Society, Los Alamitos; Andersson, C., Runeson, P., Verification and validation in industry - A qualitative survey on the state of practice (2002) Proceedings of International Symposium on Empirical Software Engineering, pp. 37-47. , Andersson C, Runeson P (2002) Verification and validation in industry - a qualitative survey on the state of practice. Proceedings of International Symposium on Empirical Software Engineering. pp 37-47; Bach, J., (1999) General Functionality and Stability Test Procedure for Certified for Microsoft Windows Logo, , http://www.satisfice.com/tools/procedure.pdf, Accessed 8 May 2013 Bach J (1999) General functionality and stability test procedure for certified for microsoft windows logo. http://www.satisfice. com/tools/procedure.pdf. Accessed 8 May 2013; Bach, J., Session-based test management (2000) Software Testing and Quality Engineering, , http://www.satisfice.com/articles/sbtm.pdf, Accessed 8 May 2013 Bach J (2000) Session-based test management. In: software testing and quality engineering. http://www.satisfice.com/articles/ sbtm.pdf. Accessed 8 May 2013; Bach, J., (2003) Exploratory Testing Explained, , http://www.satisfice.com/articles/et-article.pdf, Accessed 8 May 2013 Bach J (2003) Exploratory testing explained. http://www.satisfice.com/articles/et-article.pdf. Accessed 8 May 2013; Bach, J., Exploratory testing (2004) The Testing Practitioner, pp. 253-265. , E. van Veenendaal (eds) Second. UTN Publishers Den Bosch Bach J (2004) Exploratory testing. In: van Veenendaal E (ed) The testing practitioner. Second. UTN Publishers, Den Bosch, pp 253-265; Baeza-Yates, R., Ribeiro-Neto, B., (1999) Modern Information Retrieval, , Addison-Wesley Longman Publishing Co., Inc., New York, USA Baeza-Yates R, Ribeiro-Neto B (1999) Modern information retrieval. Addison-Wesley Longman Publishing Co. Inc. New York, USA; Basili, V.R., Selby, R.W., Comparing the effectiveness of software testing strategies (1987) IEEE Trans Softw Eng, 13, pp. 1278-1296. , 10.1109/TSE.1987.232881; Beizer, B., (1990) Software Testing Techniques, , Van Nostrand Reinhold New York Beizer B (1990) Software testing techniques. Van Nostrand Reinhold, New York; Berner, S., Weber, R., Keller, R.K., Observations and lessons learned from automated testing (2005) Proceedings of International Conference on Software Engineering, pp. 571-579. , Berner S, Weber R, Keller RK (2005) Observations and lessons learned from automated testing. Proceedings of International Conference on Software Engineering. pp 571-579; Bolton, M., Testing without a map (2005) Better Software, 7 (1). , Bolton M (2005) Testing without a map. Better Software 7(1); Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) 1st International Workshop on Replication in Empirical Software Engineering, , Carver JC (2010) Towards reporting guidelines for experimental replications: a proposal. 1st International Workshop on Replication in Empirical Software Engineering; Cohen, D.M., Dalal, S.R., Fredman, M.L., Patton, G.C., The AETG system: An approach to testing based on combinatorial design (1997) IEEE Trans Softw Eng, 23, pp. 437-444. , 10.1109/32.605761 10.1109/32.605761; Copeland, L., (2004) A Practitioner's Guide to Software Test Design, , Artech House Publishers Boston Copeland L (2004) A practitioner's guide to software test design. Artech House Publishers, Boston; Craig, R.D., Jaskiel, S.P., (2002) Systematic Software Testing, , Artech House Publishers Boston 1062.68042 Craig RD, Jaskiel SP (2002) Systematic software testing. Artech House Publishers, Boston; Crispin, L., Gregory, J., (2009) Agile Testing: A Practical Guide for Testers and Agile Teams, , Addison-Wesley Boston Crispin L, Gregory J (2009) Agile testing: A practical guide for testers and agile teams. Addison-Wesley, Boston; Nascimento Lho, D., Pdl, M., An experimental evaluation of approaches to feature testing in the mobile phone applications domain (2007) Proceedings of the Workshop on Domain Specific Approaches to Software Test Automation, pp. 27-33. , Do Nascimento LHO, Machado PDL (2007) An experimental evaluation of approaches to feature testing in the mobile phone applications domain. Proceedings of the Workshop on Domain Specific Approaches to Software Test Automation. pp 27-33; Ellis, P.D., (2010) The Essential Guide to Effect Sizes: Statistical Power, Meta-analysis, and the Interpretation of Research Results, , 1st edn. Cambridge University Press, New York, USA Ellis PD (2010) The essential guide to effect sizes: statistical power, meta-analysis, and the interpretation of research results, 1st edn. Cambridge University Press, New York, USA; Engström E, R., A qualitative survey of regression testing practices (2010) Proceedings of International Conference on Product-Focused Software Process Improvement, pp. 3-16. , Engström E, Runeson P (2010) A qualitative survey of regression testing practices. Proceedings of International Conference on Product-Focused Software Process Improvement. pp 3-16; Engström, E., Runeson, P., Test overlay in an emerging software product line - An industrial case study (2013) Inf Softw Technol, 55, pp. 581-594. , 10.1016/j.infsof.2012.04.009 10.1016/j.infsof.2012.04.009; Field, A., (2005) Discovering Statistics Using SPSS, , 2nd edn. Sage Publications Ltd, London, UK Field A (2005) Discovering statistics using SPSS, 2nd edn. Sage Publications Ltd, London, UK; Glass, R.L., Project retrospectives, and why they never happen (2002) IEEE Softw, 19, p. 112. , 10.1109/MS.2002.1032872; Grechanik, M., Jones, J.A., Orso, A., Van Der Hoek, A., Bridging gaps between developers and testers in globally-distributed software development (2010) Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, pp. 149-154. , ACM, New York, NY, USA Grechanik M, Jones JA, Orso A, van der Hoek A (2010) Bridging gaps between developers and testers in globally-distributed software development. Proceedings of the FSE/SDP workshop on Future of software engineering research. ACM, New York, NY, USA, pp 149-154; Houdek, F., Schwinn, T., Ernst, D., Defect detection for executable specifications - An experiment (2002) Int J Softw Eng Knowl Eng, 12, pp. 637-655. , 10.1142/S0218194002001128; Huang, L., Boehm, B., How much software quality investment is enough: A value-based approach (2006) IEEE Softw, 23, pp. 88-95. , 10.1109/MS.2006.127 10.1109/MS.2006.127; Itkonen, J., (2008) Do Test Cases Really Matter? An Experiment Comparing Test Case Based and Exploratory Testing, , Licentiate Thesis, Helsinki University of Technology Itkonen J (2008) Do test cases really matter? An experiment comparing test case based and exploratory testing. Licentiate Thesis, Helsinki University of Technology; Itkonen, J., (2013) ET Vs. TCT Experiment Replication Dataset, , http://dx.doi.org/10.6084/m9.figshare.689809, Figshare.com Accessed 29 Apr 2013 Itkonen J (2013) ET vs. TCT Experiment replication dataset. In: Figshare.com. http://dx.doi.org/10.6084/m9.figshare. 689809. Accessed 29 Apr 2013; Itkonen, J., Rautiainen, K., Exploratory testing: A multiple case study (2005) Proceedings of International Symposium on Empirical Software Engineering, pp. 84-93. , Itkonen J, Rautiainen K (2005) Exploratory testing: a multiple case study. Proceedings of International Symposium on Empirical Software Engineering. pp 84-93; Itkonen J, M., Defect detection efficiency: Test case based vs. Exploratory testing (2007) Proceedings of International Symposium on Empirical Software Engineering and Measurement, pp. 61-70. , Itkonen J, Mäntylä MV, Lassenius C (2007) Defect detection efficiency: test case based vs. exploratory testing. Proceedings of International Symposium on Empirical Software Engineering and Measurement. pp 61-70; Itkonen J, M., Mäntylä, M.V., Lassenius, C., How do testers do it? An exploratory study on manual testing practices (2009) Empirical Software Engineering and Measurement, pp. 494-497. , ESEM 2009. 3rd International Symposium on Itkonen J; Itkonen, J., Mäntylä, M.V., Lassenius, C., The role of the tester's knowledge in exploratory software testing (2013) IEEE Trans Softw Eng, 39, pp. 707-724. , 10.1109/TSE.2012.55 10.1109/TSE.2012.55; Juristo, N., Moreno, A.M., (2001) Basics of Software Engineering Experimentation, , Kluwer Academic Publishers Boston 10.1007/978-1-4757-3304-4 0973.68656 Juristo N, Moreno AM (2001) Basics of software engineering experimentation. Kluwer Academic Publishers, Boston; Juristo, N., Moreno, A.M., Vegas, S., Reviewing 25 years of testing technique experiments (2004) Empir Softw Eng, 9, pp. 7-44. , 10.1023/B:EMSE.0000013513.48963.1b; Juristo, N., Vegas, S., Solari, M., Comparing the effectiveness of equivalence partitioning, branch testing and code reading by stepwise abstraction applied by subjects (2012) Proceedings of Fifth International Conference on Software Testing, Verification and Validation, pp. 330-339. , Juristo N, Vegas S, Solari M et al (2012) Comparing the effectiveness of equivalence partitioning, branch testing and code reading by stepwise abstraction applied by subjects. Proceedings of Fifth International Conference on Software Testing, Verification and Validation. pp 330-339; Kamsties, E., Lott, C.M., An empirical evaluation of three defect-detection techniques (1995) Proceedings of ESEC'95, pp. 362-383. , Schäfer W, Botella P (eds) Springer Berlin Heidelberg Kamsties E, Lott CM (1995) An empirical evaluation of three defect-detection techniques. In: Schäfer W, Botella P (eds) Proceedings of ESEC'95. Springer Berlin Heidelberg, pp 362-383; Kaner, C., Falk, J., Nguyen, H.Q., (1999) Testing Computer Software, , Wiley New York Kaner C, Falk J, Nguyen HQ (1999) Testing computer software. Wiley, New York; Kaner, C., Bach, J., Pettichord, B., (2002) Lessons Learned in Software Testing, , Wiley New York Kaner C, Bach J, Pettichord B (2002) Lessons learned in software testing. Wiley, New York; Kitchenham, B., The role of replications in empirical software engineering - A word of warning (2008) Empir Softw Eng, 13, pp. 219-221. , 10.1007/s10664-008-9061-0 10.1007/s10664-008-9061-0; Lyndsay, J., Van Eeden, N., (2003) Adventures in Session-based Testing, , http://www.workroom-productions.com/papers/AiSBTv1.2.pdf, Accessed 20 Jun 2012 Lyndsay J, van Eeden N (2003) Adventures in session-based testing. http://www.workroom-productions.com/papers/AiSBTv1.2.pdf. Accessed 20 Jun 2012; Mäntylä, M.V., Itkonen, J., More testers - The effect of crowd size and time restriction in software testing (2013) Inf Softw Technol, 55, pp. 986-1003. , 10.1016/j.infsof.2012.12.004 10.1016/j.infsof.2012.12.004; Mäntylä Mv, V., Software deployment activities and challenges - A case study of four software product companies (2011) Proceedings of the 15th European Conference on Software Maintenance and Reengineering, pp. 131-140. , Mäntylä MV, Vanhanen J (2011) Software deployment activities and challenges - a case study of four software product companies. Proceedings of the 15th European Conference on Software Maintenance and Reengineering. pp 131-140; Martin, D., Rooksby, J., Rouncefield, M., Sommerville, I., "Good" organisational reasons for "bad" software testing: An ethnographic study of testing in a small software company (2007) Proceedings of International Conference on Software Engineering, pp. 602-611. , Martin D, Rooksby J, Rouncefield M, Sommerville I (2007) "Good" organisational reasons for "bad" software testing: an ethnographic study of testing in a small software company. Proceedings of International Conference on Software Engineering. pp 602-611; McConnell, S., (2004) Code Complete, , Microsoft Press, Redmond, WA, USA McConnell S (2004) Code complete. Microsoft Press, Redmond, WA, USA; McDaniel, L.S., The effects of time pressure and audit program structure on audit performance (1990) J Account Res, 28, pp. 267-285. , 10.2307/2491150 10.2307/2491150; Mouchawrab, S., Briand, L.C., Labiche, Y., Di Penta, M., Assessing, comparing, and combining state machine-based testing and structural testing: A series of experiments (2011) IEEE Trans Softw Eng, 37, pp. 161-187. , 10.1109/TSE.2010.32 10.1109/TSE.2010.32; Myers, G.J., A controlled experiment in program testing and code walkthroughs/ inspections (1978) Commun ACM, 21, pp. 760-768. , 10.1145/359588.359602 10.1145/359588.359602; Myers, G.J., (1979) The Art of Software Testing, , Wiley New York Myers GJ (1979) The art of software testing. Wiley, New York; Ng, S.P., Murnane, T., Reed, K., A preliminary survey on software testing practices in Australia (2004) Proceedings of the Australian Software Engineering Conference, pp. 116-125. , Ng SP, Murnane T, Reed K, et al (2004) A preliminary survey on software testing practices in Australia. Proceedings of the Australian Software Engineering Conference. pp 116-125; Page, A., Johnston, K., Rollison, B., (2008) How We Test Software at Microsoft, , Microsoft Press, Redmond, WA, USA A, Johnston K, Rollison B (2008) How we test software at microsoft. Microsoft Press, Redmond, WA, USA; Pichler, J., Ramler, R., How to test the intangible properties of graphical user interfaces (2008) Proceedings of 1st International Conference on Software Testing, pp. 494-497. , Verification, and Validation Pichler J, Ramler R (2008) How to test the intangible properties of graphical user interfaces? Proceedings of 1st International Conference on Software Testing, Verification, and Validation. pp 494-497; Rafi, D.M., Krk, M., Petersen, K., Mantyla, M.V., Benefits and limitations of automated software testing: Systematic literature review and practitioner survey (2012) 2012 7th International Workshop on Automation of Software Test (AST), pp. 36-42. , Rafi DM, Moses KRK, Petersen K, Mantyla MV (2012) Benefits and limitations of automated software testing: Systematic literature review and practitioner survey. 2012 7th International Workshop on Automation of Software Test (AST). pp 36-42; Ramasubbu, N., Balan, R.K., The impact of process choice in high maturity environments: An empirical analysis (2009) Proceedings of 31st International Conference on Software Engineering, pp. 529-539. , Ramasubbu N, Balan RK (2009) The impact of process choice in high maturity environments: An empirical analysis. Proceedings of 31st International Conference on Software Engineering. pp 529-539; Runeson, P., Andersson, C., Thelin, T., What do we know about defect detection methods? (2006) IEEE Softw, 23, pp. 82-90. , 10.1109/MS.2006.89 10.1109/MS.2006.89; Sma, S., Morisio, M., Torchiano, M., The impact of process maturity on defect density (2012) Proceedings of International Symposium on Empirical Software Engineering and Measurement, pp. 315-318. , ACM, New York, NY, USA Shah SMA, Morisio M, Torchiano M (2012) The impact of process maturity on defect density. Proceedings of International symposium on empirical software engineering and measurement. ACM, New York, NY, USA, pp 315-318; Shoaib, L., Nadeem, A., Akbar, A., An empirical evaluation of the influence of human personality on exploratory software testing (2009) Proceedings of IEEE International Multitopic Conference, pp. 1-6. , Shoaib L, Nadeem A, Akbar A (2009) An empirical evaluation of the influence of human personality on exploratory software testing. Proceedings of IEEE International Multitopic Conference. pp 1-6; Shull, F.J., Carver, J.C., Vegas, S., Juristo, N., The role of replications in Empirical Software Engineering (2008) Empir Softw Eng, 13, pp. 211-218. , 10.1007/s10664-008-9060-1 10.1007/s10664-008-9060-1; Spolsky, J., Big Macs vs. The naked chef (2001) Joel on Software, , http://www.joelonsoftware.com/articles/fog0000000024.html, Accessed 28 Jun 2012 Spolsky J (2001) Big Macs vs. the naked chef. In: Joel on Software. http://www.joelonsoftware.com/articles/fog0000000024.html. Accessed 28 Jun 2012; Tichy, W.F., Hints for reviewing empirical work in software engineering (2000) Empir Softw Eng, 5, pp. 309-312. , 10.1023/A:1009844119158 10.1023/A:1009844119158 1770449; Tinkham, A., Kaner, C., Exploring exploratory testing (2003) Proceedings of the Software Testing Analysis & Review Conference, p. 9. , Tinkham A, Kaner C (2003a) Exploring exploratory testing. Proceedings of the Software Testing Analysis & Review Conference. p 9; Tinkham, A., Kaner, C., Learning styles and exploratory testing (2003) Proceedings of the Pacific Northwest Software Quality Conference, , Tinkham A, Kaner C (2003b) Learning styles and exploratory testing. Proceedings of the Pacific Northwest Software Quality Conference; Tsang, E.W.K., Kwan, K.-M., Replication and theory development in organizational science: A critical realist perspective (1999) Acad Manag Rev, 24, pp. 759-780; Tuomikoski, J., Tervonen, I., Absorbing software testing into the scrum method (2009) Proceedings of 10th International Conference on Product-Focused Software Process Improvement 32 LNBIP, , Tuomikoski J, Tervonen I (2009) Absorbing software testing into the scrum method. Proceedings of 10th International Conference on Product-Focused Software Process Improvement 32 LNBIP; Våga, J., Amland, S., Managing high-speed web testing (2002) Software Quality and Software Testing in Internet Times, pp. 23-30. , D. Meyerhoff B. Laibarra R. van der Pouw Kraan A. Wallet (eds) Springer Berlin 10.1007/978-3-642-56333-1-2 Våga J, Amland S (2002) Managing high-speed web testing. In: Meyerhoff D, Laibarra B, van der Pouw Kraan R, Wallet A (eds) Software quality and software testing in internet times. Springer, Berlin, pp 23-30; Vegas, S., Juristo, N., Moreno, A., Analysis of the influence of communication between researchers on experiment replication (2006) Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering, pp. 28-37. , ACM, New York, NY, USA Vegas S, Juristo N, Moreno A et al (2006) Analysis of the influence of communication between researchers on experiment replication. Proceedings of the 2006 ACM/IEEE international symposium on Empirical Software Engineering. ACM, New York, NY, USA, pp 28-37; Whittaker, J.A., (2003) How to Break Software A Practical Guide to Testing, , Addison Wesley Boston Whittaker JA (2003) How to break software a practical guide to testing. Addison Wesley, Boston; Whittaker, J.A., (2009) Exploratory Software Testing: Tips, Tricks, Tours, and Techniques to Guide Test Design, , Addison-Wesley Professional, Boston, MA, USA Whittaker JA (2009) Exploratory software testing: tips, tricks, tours, and techniques to guide test design. Addison-Wesley Professional, Boston, MA, USA; Wohlin, C., Runeson, P., Höst, M., (2000) Experimentation in Software Engineering: An Introduction, , Kluwer Academic Publishers Boston 10.1007/978-1-4615-4625-2 Wohlin C, Runeson P, Höst M et al (2000) Experimentation in software engineering: An introduction. Kluwer Academic Publishers, Boston; Wood, B., James, D., Applying session-based testing to medical software (2003) Med Device Diagn Ind, 25, p. 90; Wood, M., Roper, M., Brooks, A., Miller, J., Comparing and combining software defect detection techniques: A replicated empirical study (1997) ACM SIGSOFT Softw Eng Notes, 22, pp. 262-277. , 10.1145/267895.267915 10.1145/267896.267915; Yatani, K., Statistics for HCI Research: Mann-Whitney's U test (2010) Statistics for HCI Research, , http://yatani.jp/HCIstats/MannWhitney, Accessed 28 Jun 2012 Yatani K (2010) Statistics for HCI Research: Mann-Whitney's U test. In: Statistics for HCI research. http://yatani.jp/ HCIstats/MannWhitney. Accessed 28 Jun 2012},
  review                  = {{E C5}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896390487&doi=10.1007%2fs10664-013-9266-8&partnerID=40&md5=43864013ded8b7e26b77e76062b6da22},
}

@Conference{Javed2014215,
  author              = {Javed, M.A. and Zdun, U.},
  title               = {The supportive effect of traceability links in architecture-level software understanding: Two controlled experiments},
  year                = {2014},
  pages               = {215-224},
  address             = {Sydney, NSW},
  publisher           = {IEEE Computer Society},
  note                = {cited By 9; Conference of 11th Working IEEE/IFIP Conference on Software Architecture, WICSA 2014 ; Conference Date: 7 April 2014 Through 11 April 2014; Conference Code:106031},
  abbrev_source_title = {Proc. - Working IEEE/IFIP Conf. Softw. Archit., WICSA},
  abstract            = {The advocates of architecture traceability approaches regularly cite advantages like easier understanding of architectural designs and support for software quality control and maintenance. However, the lack of published empirical data on the usefulness of architecture traceability is one of the reasons that prevents the wide adoption of traceability approaches in industrial settings. This paper reports on two controlled experiments performed with different participants to investigate whether the use of architecture traceability can significantly support architecture-level understanding activities. The replications with different participants allowed us to investigate whether the participants' experience plays a significant role in the understanding of software architectures with or without traceability information. In particular, we designed twelve typical questions aimed at gaining an architecture-level understanding of a representative subject system and measured how a control group (provided with no traceability information) and an experiment group (provided with traceability information) answered these questions in terms of the solutions' correctness and the participants' experience. Our findings show that the correctness of the answers of the participants in the experiment group is significantly higher than in the control group, whereas no significant differences with regard to the experience of the participants are observed. © 2014 IEEE.},
  affiliation         = {Software Architecture Research Group, University of Vienna, Austria},
  art_number          = {6827121},
  author_keywords     = {Architecture traceability; Architecture understanding; Controlled experiment; Empirical software engineering; Software architecture},
  document_type       = {Conference Paper},
  doi                 = {10.1109/WICSA.2014.43},
  isbn                = {9781479934126},
  journal             = {Proceedings - Working IEEE/IFIP Conference on Software Architecture 2014, WICSA 2014},
  keywords            = {Computer software selection and evaluation; Experiments, Controlled experiment; Empirical data; Empirical Software Engineering; Industrial settings; Software quality control; Software understanding; Traceability information; Traceability links, Software architecture},
  language            = {English},
  references          = {Han, J., Experience with designing a requirements and architecture management tool (2000) Proceedings of the International Conference on Software Methods and Tools (SMT'00, p. 179. , http://dl.acm.org/citation.cfm?id=555920.830363, ser. SMT '00. Washington, DC, USA IEEE Computer Society Online]. Available; Cysneiros, G.A.A., Andrea, F., Spanoudakis, Z.G., Traceability approach for i and uml models (2003) Proceedings of 2nd International Workshop on Software Engineering for Large-Scale Multi-Agent Systems (SELMAS03, , http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.124.1309, Online]. Available; Tang, A., Han, J., Architecture rationalization: A methodology for architecture verifiability, traceability and completeness (2005) Proceedings of the 12th IEEE International Conference and Workshops on Engineering of Computer-Based Systems, ser, pp. 135-144. , http://dx.doi.org/10.1109/ECBS.2005.17, ECBS '05. Washington, DC, USA: IEEE Computer Society Online]. Available; Tran, H., Zdun, U., Dustdar, S., Vbtrace: Using view-based and model-driven Development to support traceability in process-driven soas (2011) Softw. Syst. Model, 10 (1), pp. 5-29. , http://dx.doi.org/10.1007/s10270-009-0137-0, Feb Online]. Available; Buchgeher, G., Weinreich, R., Automatic tracing of decisions to architecture and implementation (2011) Proceedings of the 2011 Ninth Working IEEE/IFIP Conference on Software Architecture, Ser. WICSA '11, pp. 46-55. , http://dx.doi.org/10.1109/WICSA.2011.16, Washington, DC, USA: IEEE Computer Society Online]. Available; Ubayashi, N., Kamei, Y., Architectural point mapping for design traceability (2012) Proceedings of the Eleventh Workshop on Foundations of Aspect-Oriented Languages, ser, pp. 39-44. , http://doi.acm.org/10.1145/2162010.2162022, FOAL '12. New York, NY, USA ACM Online]. Available; Murta, L.G.P., Hoek Der A.Van, Werner, C.M.L., Archtrace: Policy-based support for managing evolving architecture-To-implementation traceability links (2006) Proceedings of the 21st IEEE/ACM International Conference on Automated Software Engineering, ser, pp. 135-144. , http://dx.doi.org/10.1109/ASE.2006.16, ASE '06. Washington, DC, USA: IEEE Computer Society [Online]. Available; Shahin, M., Liang, P., Khayyambashi, M.R., Rationale visualization of software architectural design Decision using compendium Proceedings of the 2010 ACM Symposium on Applied Computing, Ser. SAC '10, (2010), pp. 2367-2368. , http://doi.acm.org/10.1145/1774088.1774577, New York, NY, USA: ACM Online] Available; Pacione, M.J., Roper, M., Wood, M., A novel software visualisation model to support software comprehension (2004) Proceedings of the 11th Working Conference on Reverse Engineering, ser, pp. 70-79. , http://dl.acm.org/citation.cfm?id=1038267.1039039, WCRE '04. Washington, DC, USA IEEE Computer Society Online]. Available; Shahin, M., Liang, P., Li, Z., Architectural design Decision visualization for architecture design: Preliminary results of a controlled experiment (2011) Proceedings of the 5th European Conference on Software Architecture: Companion Volume, Ser. ECSA '11, (2), pp. 1-22. , http://doi.acm.org/10.1145/2031759.2031762, New York, NY, USA ACM 8 [Online] Available; Cornelissen, B., Zaidman, A., Van Deursen, A., A controlled experiment for program comprehension through trace visualization Software Engineering (2011) IEEE Transactions on, 37 (3), pp. 341-355. , http://dx.doi.org/10.1109/TSE.2010.47, [Online] Available; Cornelissen, B., Holten, D., Zaidman, A., Moonen, L., Van Wijk, J., Van Deursen, A., Understanding execution traces using massive sequence and circular bundle views Program Comprehension 2007. ICPC '07. 15th IEEE International Conference on, 2007, pp. 49-58. , http://dx.doi.org/10.1109/ICPC.2007.39, Online] Available; Mader, P., Egyed, A., Assessing the effect of requirements traceability for software maintenance (2012) Software Maintenance (ICSM 2012 28th IEEE International Conference on, pp. 171-180. , http://dx.doi.org/10.1109/ICSM.2012.6405269, Online] Available; De Lucia, A., Oliveto, R., Zurolo, F., Di Penta, M., Improving comprehensibility of source code via traceability information: A controlled experiment (2006) Proceedings of the 14th IEEE International Conference on Program Comprehension, Ser. ICPC '06, pp. 317-326. , http://dx.doi.org/10.1109/ICPC.2006.28, Washington, DC, USA: IEEE Computer Society [Online]. Available; De Lucia, A., Oliveto, R., Tortora, G., Assessing ir-based traceability recovery tools through controlled experiments (2009) Empirical Softw. Engg, 14 (1), pp. 57-592. , http://dx.doi.org/10.1007/s10664-008-9090-8, Feb [Online]. Available; De Lucia, A., Oliveto, R., Tortora, G., Adams re-Trace: Traceability link recovery via latent semantic indexing (2008) Proceedings of the 30th International Conference on Software Engineering, Ser. ICSE '08, pp. 839-842. , http://doi.acm.org/10.1145/1368088.1368216, New York, NY, USA ACM Online]. Available; Qusef, A., Bavota, G., Oliveto, R., De Lucia, A., Binkley, D., Scotch: Test-To-code traceability using slicing and conceptual coupling (2011) Software Maintenance (ICSM 2011 27th IEEE International Conference on, pp. 63-72. , http://dx.doi.org/10.1109/ICSM.2011.6080773, Online] Available; Qusef, A., Bavota, G., Oliveto, R., Lucia, A.D., Binkley, D., Evaluating test-To-code traceability recovery methods through controlled experiments (2012) Journal of Software: Evolution and Process N/a-nn/a, , http://dx.doi.org/10.1002/smr.1573, Online]. Available; Kitchenham, B.A., Pfleeger, S.L., Pickard, L.M., Jones, P.W., Hoaglin, D.C., El Emam, K., Rosenberg, J., Reliminary guidelines for empirical research in software engineering Software Engineering (2002) IEEE Transactions on, 28 (8), pp. 721-7734. , http://dx.doi.org/10.1109/TSE.2002.1027796, Aug Online]. Available; Wohlin, C., Experimentation in software engineering: An introduction: An introduction ser (2000) The Kluwer International Series in Software Engineering, , http://books.google.es/books?id=nG2UShV0wAEC, Kluwer Academic Online]. Available; Jedlitschka, A., Hamann, D., Göhlert, T., Schröder, A., Adapting profes for use in an agile process: An industry experience report (2005) PROFES, pp. 502-516. , http://dx.doi.org/10.1109/ISESE.2005.1541818, Online]. Available; Baeza-Yates, R.A., Ribeiro-Neto, B.A., (1999) Modern Information Retrieval. ACM Press Addison-Wesley, , http://www.dcc.ufmg.br/irbook/, Online]. Available; Frakes, W.B., Baeza-Yates, R., (1992) Information Retrieval, pp. 363-392. , NJ, USA Prentice-Hall, Inc. ch. Ranking algorithms Online] Available htt//dlacmorg/citationcfm?id=129687129701; Boehm, B., Basili, V., Rombach, H., Zelkowitz, M., (2005) Foundations of Empirical Software Engineering: The Legacy of Victor R, , http://books.google.at/books?id=ski1Ms57pScC, Basili. Springer Online]. Available; Shapiro, S.S., Wilk, M.B., An analysis of variance test for normality (complete samples (1965) Biometrika, 52 (3-4), pp. 591-611. , http://www.jstor.org/stable/2333709, Online]. Available; Mann, H., Whitney, D., On a test of whether one of two random variables is stochastically larger than the other (1947) Institute of Mathematical Statistics, , http://books.google.at/books?id=9fvePgAACAAJ, [Online]. Available; Cook, T., Campbell, D., (1979) Quasi-experimentation: Design & Analysis Issues for Field Settings, , http://books.google.at/books?id=9Up-AAAAIAAJ, Houghton Mifflin Online]. Available},
  review              = {{E C3 C4}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903718331&doi=10.1109%2fWICSA.2014.43&partnerID=40&md5=4d11cef2809c73f4b75aab3ba1948a02},
}

@Conference{Jung2013223,
  author                  = {Jung, J. and Hoefig, K. and Domis, D. and Jedlitschka, A. and Hiller, M.},
  title                   = {Experimental comparison of two safety analysis methods and its replication},
  year                    = {2013},
  pages                   = {223-232},
  address                 = {Baltimore, MD},
  note                    = {cited By 4; Conference of 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM 2013 ; Conference Date: 10 October 2013 Through 11 October 2013; Conference Code:102346},
  abbrev_source_title     = {Int. Symp. Empir. Softw. Eng. Meas.},
  abstract                = {(Background) Empirical Software Engineering (SE) strives to provide empirical evidence about the pros and cons of SE approaches. This kind of knowledge becomes relevant when the issue is whether to change from a currently employed approach to a new one or not. An informed decision is required and is particularly important in the development of safety-critical systems. For example, for the safety analysis of safety-critical embedded systems, methods such as Failure Mode and Effect Analysis (FMEA) and Fault Tree Analysis (FTA) are used. With the advent of model-based systems and software development, the question arises whether safety engineering methods should also be adopted. New technologies such as Component Integrated Fault Trees (CFT) come into play. Industry demands to know the benefits of these new methods over established ones such as Fault Trees (FT). (Methods) For the purpose of comparing CFT and FT with regard to the capabilities of the safety analysis methods (such as quality of the results) and to the participants' rating of the consistency, clarity, and maintainability of the methods, we designed a comparative study as a controlled experiment using a within-subject design. The experiment was run with seven academic staff members working towards their PhD. The study was replicated with eleven domain experts from industry. (Results) Although the analysis of the tasks' solutions showed that the use of CFT did not yield a significantly different number of correct or incorrect solutions, the participants rated the modeling capacities of CFT higher in terms of model consistency, clarity, and maintainability. (Conclusion) From this first evidence, we conclude that CFT have the potential of being beneficial for companies looking for a safety analysis approachfor projects using model-based development. © 2013 IEEE.},
  affiliation             = {Fraunhofer IESE, 67663 Kaiserslautern, Germany; University of Kaiserslautern, 67663 Kaiserslautern, Germany; ABB Corporate Research Germany, Industrial Software Systems Program, 68526 Ladenburg, Germany; Cassidian, 89077 Ulm, Germany},
  art_number              = {6681355},
  author_keywords         = {model-driven development; safety analysis methods; fault trees analysis; component integrated fault trees; avionics; experiment; replication},
  correspondence_address1 = {Fraunhofer IESE, 67663 Kaiserslautern, Germany},
  document_type           = {Conference Paper},
  doi                     = {10.1109/ESEM.2013.59},
  issn                    = {19493770},
  journal                 = {International Symposium on Empirical Software Engineering and Measurement},
  keywords                = {Empirical Software Engineering; Experimental comparison; Failure mode and effect analysis; Fault tree analyses (FTA); Fault-trees; Model based development; Safety critical systems; Safety-critical embedded systems, Experiments; Fault tree analysis; Forestry; Maintainability; Safety engineering; Software engineering; Systems analysis, Quality control, Computer Programs; Quality Control; Safety; Systems Engineering},
  language                = {English},
  references              = {SAE International, Guidelines for Development of Civil Aircraft and Systems. ARP4754A, 2010(2012) Radio Technical Commission for Aeronautics Software, , Considerations in Airborne Sys-tems and Equipment Certification. DO-178C; (2003) Commission Regulation (EC), Official Journal of the European Union, , 1702/2003 of 24 September; (2012) Certification Specifications and Acceptable Means of Compliance for Large Aeroplanes CS25, , European Aviation Safety Agency; (2006) International Electrotechnical Commission, , Fault tree analysis (FTA), IEC 61025 ed2.0, 13 Dec; Ericson, C.A., Fault tree analysis-A history (1999) Proceedings of 17th Intern. System Safety Conference Orlando; De Miguel, M.A., Briones, J.F., Silva, J.P., Alonso, A., Integration of safety analysis in model-driven software development (2008) Software, IET, 2 (3), pp. 260-280; Damm, W., Votintseva, A., Metzner, A., Josko, B., Peikenkamp, T., Böde, E., (2005) Boosting Re-use of Embedded Automotive Applications Through Rich Components, , Elsevier's Electronic Notes in Theoretical Computer Science, Elsevier Science B.V; Papadopoulos, Y., McDermid, J.A., (1999) Hierarchically Performed Hazard Origin and Propagation Studies, , Computer Safety, Reliability and Security; Kaiser, B., Liggesmeyer, P., Mäckel, O., A new component concept for fault trees (2003) SCS '03: Proceedings of the 8th Australian Workshop on Safety Critical Systems and Software, pp. 37-46. , Darlinghurst, Australia. Australian Computer Society, Inc; Adler, R., Domis, D., Hoefig, K., Kemmann, S., Kuhn, T., Schwinn, J., Trapp, M., Integration of Component Fault Trees into the UML. Nonfunctional System Properties in Domain Specific Modeling Languages (2010) (NFPinDSML'10), Workshop at ACM/IEEE 13th Intern. Conf. on Model Driven Engineering Languages and Systems, , Oslo, Norway; Domis, D., Hoefig, K., Trapp, M., A consistency check algorithm for component-based refinements of fault trees (2010) Proc. 21st IEEE Intern. Symposium on Software Reliability Engineering (ISSRE), pp. 171-180. , San Jose CA, USA; Stålhane, T., Sindre, G., A comparison of two approaches to safety analysis based on use cases (2007) Lecture Notes in Computer Science, 4801, pp. 423-437. , DOI: 10.1007/978-3-540-75563-0-29; Stålhane, T., Sindre, G., Safety hazard identification by misuse cases: Experimental comparison of text and diagrams (2008) Proc. of the 11th Int. Conf. on Model Driven Engineering Languages and Systems (MoDELS '08), Springer Lecture Notes in Computer Science, 5301, pp. 721-735. , DOI: 10.1007/978-3-540-87875-9-50; Stålhane, T., Sindre, G., Du Bousquet, L., Comparing safety analysis based on sequence diagrams and textual use cases (2010) Proc. of the 22nd Intern. Conf. on Advanced Inf. Systems Engineering (CAiSE'10), pp. 165-179. , Barbara Pernici (Ed.). Springer-Verlag, Berlin, Heidelberg; Stålhane, T., Sindre, G., Identifying safety hazards: An experimental comparison of system diagrams and textual use cases (2012) Enterprise, Business-Process and Information Systems Modeling Lecture Notes in Business Information Processing, 113, pp. 378-392. , DOI: 10.1007/978-3-642-31072-0-26; Davis, F.D., Perceived usefulness, perceived ease of use, and user acceptance of information technology (1989) MIS Quarterly, 13 (3), pp. 319-340; Opdahl, A.L., Sindre, G., Experimental comparison of attack trees and misuse cases for security threat identification (2009) Information and Software Technology, 51 (5), pp. 916-932; Briand, L., Falessi, D., Nejati, S., Sabetzadeh, M., Yue, T., (2010) Traceability and SysML Design Slices to Support Safety Inspections: A Controlled Experiment, , Technical Report, Simula Research Laboratory, August; Pai, G.J., Dugan, J.B., Empirical analysis of software fault content and fault proneness using bayesian methods (2007) IEEE Trans. Software Eng., 33 (10), pp. 675-686; (2011) International Organization for Standardization, , ISO26262: Road vehicles-Functional safety; Paivio, A., (2006) Mind and Its Evolution: A Dual Coding Theoretical Approach, , Lawrence Erlbaum: Mahwah, N.J; Johnson-Laird, P.N., (1983) Mental Models. Towards A Cognitive Science of Language, Interference, and Consciousness, , Cambridge, England: Cambridge University Press; Schnotz, W., On the relation between dual coding and mental models in graphics comprehension (1993) Learning and Instruction, 3, pp. 247-249; Shadish, W.R., Cook, T.D., Campbell, D.T., (2002) Experimental and Quasi-Experimental Designs for Generalized Causal Inference, , Boston: Houghton Mifflin; Likert, R., A technique for the measurement of attitudes (1932) Archives of Psychology, 140, pp. 1-55; McNemar, Q., Note on the sampling error of the difference between correlated proportions or percentages (1947) Psychometrika, 12 (2), pp. 153-157. , June 18, DOI:10.1007/BF02295996; Wilcoxon, F., Individual comparisons by ranking methods (1945) Biometrics Bulletin, 1 (6), pp. 80-83. , Dec; Cronbach, L., Coefficient alpha and the internal structure of tests (1951) Psychometrika, 16, pp. 297-334; Field, A., (2009) Discovering Statistics Using SPSS, , London, England: Sage Publications; Brewer, M., Design, R., Of Validity, I., (2000) Handbook of Research Methods in Social and Personality Psychology, , Cambridge:Cambridge University Press},
  review                  = {{E C11 C8}},
  source                  = {Scopus},
  sponsors                = {Experimental Software Engi. Group at; COPPE/Federal University of Rio de Janeiro; Fraunhofer Center for Experimental Software Eng.; IEEE Software; Microsoft Research},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893316747&doi=10.1109%2fESEM.2013.59&partnerID=40&md5=400148a1b03c7614087d4058043b5cb5},
}

@Article{Juristo2013215,
  author                  = {Juristo, N. and Vegas, S. and Solari, M. and Abrahão, S. and Ramos, I.},
  title                   = {A process for managing interaction between experimenters to get useful similar replications},
  journal                 = {Information and Software Technology},
  year                    = {2013},
  volume                  = {55},
  number                  = {2},
  pages                   = {215-225},
  issn                    = {09505849},
  note                    = {cited By 6},
  abbrev_source_title     = {Inf Software Technol},
  abstract                = {Context: A replication is the repetition of an experiment. Several efforts have been made to adopt replication as a common practice in software engineering. There are different types of replications, depending on their purpose. Similar replications keep the experimental conditions as alike as possible to the original ones. External similar replications, where the replicating experimenters are not the same people as the original experimenters, have been a stumbling block. Several attempts at combining the results of replications have resulted in failure. Software engineering does not appear to be well suited to such replications, because it works with complex experimentally immature contexts. Software engineering settings have a large number of variables, and the role that many of them play is unknown. A successful (or useful) similar replication helps to better understand the phenomenon under study by verifying results and/or identifying contextual variables that could influence (or not) the results, through the combination of experimental results. Objective: To be able to get successful similar replications, there needs to be interaction between original and replicating experimenters. In this paper, we propose an interaction process for achieving successful similar replications. Method: This process consists of: an adaptation meeting, where experimenters tailor the experiment to the new setting; querying, to settle occasional inquiries while the experiment is being run; and a combination meeting, where experimenters meet to discuss the combination of replication outcomes with previous results. To check its effectiveness, the process has been tested on three different replications of the same experiment. Results: The proposed interaction process has helped to identify new contextual variables that could potentially influence (or not) the experimental results in the three replications run. Additionally, the interaction process has helped to uncover certain problems and deviations that occurred during some of the replications that we would have not been aware of otherwise. Conclusions: There are signs that suggest that it is possible to get successful similar replications in software engineering experimentation, when there is appropriate interaction among experimenters. © 2012 Elsevier B.V. All rights reserved.},
  affiliation             = {Universidad Politécnica de Madrid, Campus de Montegancedo s/n, 28660 Madrid, Spain; Universidad ORT Uruguay, Cuareim 1451, Montevideo, Uruguay; Universidad Politécnica de Valencia, Camino de Vera s/n, 46022 Valencia, Spain; Universidad de Sevilla, Avda. Reina Mercedes s/n, 41012 Sevilla, Spain},
  author_keywords         = {Combination of experiment results; Empirical studies; Experimentation; Replication},
  coden                   = {ISOTE},
  correspondence_address1 = {Vegas, S.; Universidad Politécnica de Madrid, Campus de Montegancedo s/n, 28660 Madrid, Spain; email: svegas@fi.upm.es},
  document_type           = {Conference Paper},
  doi                     = {10.1016/j.infsof.2012.07.016},
  keywords                = {Combination of experiment results; Contextual variables; Empirical studies; Experimental conditions; Experimentation; Interaction process; Replication; Stumbling blocks, Software engineering, Experiments},
  language                = {English},
  references              = {Basili, V.R., Green, S., Laitenberger, O., Lanubile, F., Shull, F., Soerumgaard, S., Zelkowitz, M.V., The empirical investigation of perspective-based reading (1996) Empirical Software Engineering, 1 (2), pp. 133-164; Basili, V.R., Selby, R.W., Comparing the Effectiveness of Software Testing Strategies Technical Report TR-1501, , Department of Computer Science, University of Maryland College Park, May 1985; Basili, V.R., Selby, R.W., Comparing the effectiveness of software testing strategies (1987) IEEE Transactions on Software Engineering, 13 (12), pp. 1278-1296; Beizer, B., (1990) Software Testing Techniques, , second ed. International Thomson Computer Press; Ciolkowski, M., Differding, C., Laitenberger, O., Muench, J., Empirical investigation of perspective-based reading: A replicated experiment (1997) ISERN Technical, Report, ISERN-97-13; Gómez, O.S., Replication types in experimental disciplines (2010) International Symposium on Empirical Software Engineering and Measurement (ESEM'10), pp. 19-28. , September 16-17 Bolzano, Italy; Gómez, O., Replication, reproduction and re-analysis: Three ways for verifying experimental findings in software engineering (2010) 1st International Workshop on Replication in Empirical Software Engineering Research (RESER'10), , May 4, Cape Town, South, Africa; Jedlitschka, A., Ciolkowski, M., Pfahl, D., Reporting controlled experiments in software engineering (2008) Guide to Advanced Empirical Software Engineering, , F. Shull, J. Singer, D. Sjoberg, Springer Chapter 8; Juristo, N., Moreno, A.M., Vegas, S., Reviewing 25 years of testing technique experiments (2004) Empirical Software Engineering, 9 (1), pp. 7-44; Juristo, N., Vegas, S., Functional testing, structural testing and code reading: What fault type do they each detect? (2003) Empirical Methods and Studies in Software Engineering- Experiences from ESERNET, 2785, pp. 235-261. , Springer-Verlag (Chapter 12); Juristo, N., Vegas, S., The role of non-exact replications in software engineering experiments (2011) Empirical Software Engineering, 16 (3), pp. 295-324; Juristo, N., Vegas. Solari M, S., Abrahao, S., Ramos, I., Equivalence partitioning, branch testing and code review: Comparing their effectiveness applied by subjects (2012) Proceedings of the Fifth International Conference on Software Testing, Verification and Validation (ICST'12), , Montreal, April 17-21; Kamsties, E., Lott, C., An empirical evaluation of three defect detection techniques Technical Report ISERN 95-02, , Dept. Computer Science, University of Kaiserslautern, May 1995; Kamsties, E., Lott, C.M., An empirical evaluation of three defect-detection techniques Proceedings of the Fifth European Software Engineering Conference, , Sitges, Spain, September 1995; Laitenberger, O., Rombach, H.D., (2003) (Quasi-)Experimental Studies in Industrial Settings: Lecture Notes on Empirical Software Engineering, , World Scientific Publishing; Linger, R.C., (1979) Structured Programming: Theory and Practice (The Systems Programming Series), , Addison-Wesley; Lung, J., Aranda, J., Easterbrook, S.M., Wilson, G.V., On the difficulty of replicating human subjects studies in software engineering (2008) Proceedings of the 30th International Conference on Software Engineering (ICSE'08), , May 10-18 Leipzig, Germany; Miller, J., Applying meta-analytical procedures to software engineering experiments (2000) Journal of Systems and Software, 54 (1), pp. 29-39; Myers, G.J., Badgett, T., Sandler, C., (2004) The Art of Software Testing, , Wiley-Interscience Second edition; Porter, A., Johnson, P., Assessing software review meetings: Results of a comparative analysis of two experimental studies (1997) IEEE Transactions on Software Engineering, 23 (3), pp. 129-145; Roper, M., Wood, M., Miller, J., An empirical evaluation of defect detection techniques (1997) Information and Software Technology, 39, pp. 763-775; Runeson, P., Andersson, C., Thelin, T., Amschler-Andrews, A., Berling, T., What do we know about defect detection methods? (2006) IEEE Software, 23 (3), pp. 82-90; Shull, F., Carver, J., Travassos, G.H., Maldonado, J.C., Conradi, R., Basili, V.R., Replicated studies: Building a body of knowledge about software reading techniques (2003) Lecture Notes on Empirical Software Engineering, World Scientific, pp. 39-84. , (Chapter 2); Shull, F., Mendoça, M., Basili, V., Carver, J., Maldonado, J.C., Fabbri, S., Travassos, G.H., Ferreira, M.C., Knowledge-sharing issues in experimental software engineering (2004) Empirical Software Engineering, 9 (12), pp. 111-137; Sjoberg, D., Hannay, J., Hansen, O., Kampenes, V., Karahasanovic, A., Liborg, N., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE Transactions on Software Engineering, 31 (9), pp. 733-753; Solari, M., Vegas, S., Classifying and analyzing replication packages for software engineering experimentation (2006) Proceedings of the 4th International Workshop Series on Empirical Software Engineering (WSESE'06), pp. 19-24. , Amsterdam, June; Vegas, S., Juristo, N., Moreno, A.M., Solari, M., Letelier, P., Analysis of the Influence of Communication between Researchers on Experiment Replication (2006) Proceedings of the International Symposium on Empirical Software Engineering (ISESE'06), pp. 28-37. , Río de Janeiro, Brazil, September; Wood, M., Roper, M., Brooks, A., Miller, J., Comparing and combining software defect detection techniques: A replicated empirical study Proceedings of the 6th European Software Engineering Conference, , Zurich, Switzerland, September 1997},
  review                  = {{E C12}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869887964&doi=10.1016%2fj.infsof.2012.07.016&partnerID=40&md5=431eb0712f0fd7d896a4e6268b21e2cd},
}

@Article{Kalinowski201663,
  author                  = {Kalinowski, M. and Felderer, M. and Conte, T. and Spínola, R. and Prikladnicki, R. and Winkler, D. and Fernández, D.M. and Wagner, S.},
  title                   = {Preventing incomplete/hidden requirements: Reflections on survey data from Austria and Brazil},
  journal                 = {Lecture Notes in Business Information Processing},
  year                    = {2016},
  volume                  = {238},
  pages                   = {63-78},
  issn                    = {18651348},
  note                    = {cited By 1; Conference of 8th International Conference on Software Quality Days, SWQD 2016 ; Conference Date: 18 January 2016 Through 21 January 2016; Conference Code:159299},
  abbrev_source_title     = {Lect. Notes Bus. Inf. Process.},
  abstract                = {[Context] Many software projects fail due to problems in requirements engineering (RE). [Goal] The goal of this paper is analyzing a specific and relevant RE problem in detail: incomplete/hidden requirements. [Method] We replicated a global family of RE surveys with representatives of software organizations in Austria and Brazil. We used the data to (a) characterize the criticality of the selected RE problem, and to (b) analyze the reported main causes and mitigation actions. Based on the analysis, we discuss how to prevent the problem. [Results] The survey includes 14 different organizations in Austria and 74 in Brazil, including small, medium and large sized companies, conducting both, plan-driven and agile development processes. Respondents from both countries cited the incomplete/hidden requirements problem as one of the most critical RE problems. We identified and graphically represented the main causes and documented solution options to address these causes. Further, we compiled a list of reported mitigation actions. [Conclusions] From a practical point of view, this paper provides further insights into common causes of incomplete/hidden requirements and on how to prevent this problem. © Springer International Publishing Switzerland 2016.},
  affiliation             = {Computing Institute, Universidade Federal Fluminense, Av. Milton Tavares de Souza s/n, Campus Praia Vermelha, Niterói, Brazil; Institute of Computer Science, University of Innsbruck, Technikerstr. 21a, Innsbruck, Austria; Computing Institute, Universidade Federal do Amazonas, Av. Rodrigo Otávio 6200 Campus Universitário Senador Arthur Virgílio Filho, Manaus, Brazil; Universidade Salvador, Alameda das Espatódias 912, Salvador, Brazil; Pontifícia Universidade Católica do Rio Grande do Sul, Av. Ipiranga 6681, Porto Alegre, Brazil; Institute of Software Technology and Interactive Systems, Vienna University of Technology, Favoritenstr. 9/188, Vienna, Austria; Institut für Informatik, Technische Universität München, Boltzmannstr. 3, Garching, Germany; Institut für Softwaretechnologie, University of Stuttgart, Universitätsstraße 38, Stuttgart, Germany},
  author_keywords         = {Causal analysis; Defect prevention; Hidden requirements; Implicit requirements; Incomplete requirements; NaPiRE; Requirements engineering; Survey},
  correspondence_address1 = {Kalinowski, M.; Computing Institute, Universidade Federal Fluminense, Av. Milton Tavares de Souza s/n, Campus Praia Vermelha, Brazil; email: kalinowski@ic.uff.br},
  document_type           = {Conference Paper},
  doi                     = {10.1007/978-3-319-27033-3_5},
  editor                  = {Winkler D., Biffl S., Bergsmann J.},
  isbn                    = {9783319270326},
  keywords                = {Computer software selection and evaluation; Requirements engineering; Surveying; Surveys, Causal analysis; Defect prevention; Hidden requirements; Implicit requirements; Incomplete requirements; NaPiRE, Software design},
  language                = {English},
  publisher               = {Springer Verlag},
  references              = {Broy, M., Requirements engineering as a key to holistic software quality (2006) ISCIS 2006, 4263, pp. 24-34. , Levi, A., Savaş, E., Yenigün, H., Balcısoy, S., Saygın, Y. (eds.), LNCS, Springer, Heidelberg; Méndez Fernández, D., Wagner, S., Lochmann, K., Baumann, A., de Carne, H., Field study on requirements engineering: Investigation of artefacts, project parameters, and execution strategies (2012) Inf. Softw. Technol, 54, pp. 162-178; Hall, T., Beecham, S., Rainer, A., Requirements problems in twelve software companies: An empirical analysis (2003) Empirical Softw. Eng, 8, pp. 7-42; Khankaew, S., Riddle, S., A review of practice and problems in requirements engineering in small and medium software enterprises in Thailand (2014) International Workshop on Empirical Requirements Engineering (EmpiRE), pp. 1-8; Méndez Fernández, D., Wagner, S., Naming the pain in requirements engineering: A design for a global family of surveys and first results from Germany (2015) Inf. Softw. Technol, 57, pp. 616-643; Kalinowski, M., Card, D.N., Travassos, G.H., Evidence-based guidelines to defect causal analysis (2012) IEEE Softw, 29 (4), pp. 16-18; Kalinowski, M., Mendes, E., Travassos, G.H., An industry ready defect causal analysis approach exploring bayesian networks (2014) SWQD 2014. LNBIP, 166, pp. 12-33. , Winkler, D., Biffl, S., Bergsmann, J. (eds.), Springer, Heidelberg; Kalinowski, M., Spínola, R.O., Conte, T., Prickladnicki, R., Méndez Fernández, D., Wagner, S., Towards building knowledge on causes of critical requirements engineering problems (2015) International Conference on Software Engineering and Knowledge Engineering (SEKE), 6p. , (accepted for publication); Eveleens, J., Verhoef, T., The rise and fall of the chaos report figures (2010) IEEE Softw, 27, pp. 30-36; Solemon, B., Sahibuddin, S., Ghani, A.A.A., Requirements engineering problems and practices in software companies: An industrial survey (2009) ASEA 2009. CCIS, 59, pp. 70-77. , Ślęzak, D., Kim, T.-h., Kiumi, A., Jiang, T., Verner, J., Abrahão, S. (eds.), Springer, Heidelberg; Liu, L., Li, T., Peng, F., Why requirements engineering fails: A survey report from China (2010) International Conference on Requirements Engineering (RE), pp. 317-322; Khankaew, S., Riddle, S., A review of practice and problems in requirements engineering in small and medium software enterprises in Thailand (2014) International Workshop on Empirical Requirements Engineering (EmpiRE), pp. 1-8; Méndez Fernández, D., Wagner, S., Naming the pain in requirements engineering: Design of a global family of surveys and first results from Germany (2013) International Conference on Evaluation and Assessment in Software Engineering (EASE), pp. 183-194; Kalinowski, M., Weber, K., Franco, N., Duarte, V., Santos, G., Travassos, G., Results of 10 years of software process improvement in Brazil based on the MPS-SW Model (2014) International Conference on the Quality in Information and Communications Technology (QUATIC), pp. 28-37; (2012) Softex: Software e Serviços de TI: A Indústria Brasileira em Perspectiva, 2. , Observatório Softex; Ishikawa, K., (1976) Guide to Quality Control, , Asian Productivity Organization, Tokyo; Kalinowski, M., Travassos, G.H., Card, D.N., Towards a defect prevention based process improvement approach (2008) Euromicro Conference on Software Engineering and Advanced Applications (SEAA), pp. 199-206; Kalinowski, M., Mendes, E., Travassos, G.H., Automating and evaluating the use of probabilistic cause-effect diagrams to improve defect causal analysis (2011) International Conference on Product Focused Software Development and Process Improvement (PROFES). Lecture Notes in Computer Science, 6759, pp. 232-246. , Caivano, D., Oivo, M., Baldassarre, M.T., Visaggio, G. (eds.), Springer, Heidelberg},
  review                  = {{S C2}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952661573&doi=10.1007%2f978-3-319-27033-3_5&partnerID=40&md5=107c7577155813062c4ba5c5330ecb78},
}

@Conference{Kalinowski20151,
  author              = {Kalinowski, M. and Spínola, R.O. and Conte, T. and Prikladnicki, R. and Fernández, D.M. and Wagner, S.},
  title               = {Towards building knowledge on causes of critical requirements engineering problems},
  year                = {2015},
  volume              = {2015-January},
  pages               = {1-6},
  publisher           = {Knowledge Systems Institute Graduate School},
  note                = {cited By 1; Conference of 27th International Conference on Software Engineering and Knowledge Engineering, SEKE 2015 ; Conference Date: 6 July 2015 Through 8 July 2015; Conference Code:121351},
  abbrev_source_title = {Proc. Int. Conf. Softw. Eng. Knowl. Eng., SEKE},
  abstract            = {[Context] Many software projects fail due to problems in requirements engineering (RE). [Objective] The goal of this paper is to gather information on relevant RE problems and to represent knowledge on their most common causes. [Method] We replicated a global family of RE surveys in Brazil and used the data to identify critical RE problems and to build probabilistic causeeffect diagrams to represent knowledge on their common causes. [Results] The survey was answered by 74 different organizations, including small, medium and very large sized companies, conducting both, plan-driven and agile development. The most critical RE problems, according to those organizations, are related to communication and to incomplete or underspecified requirements. We provide the full probabilistic cause-effect diagrams with knowledge on common causes of the most critical identified RE problems online. [Conclusion] We believe that the knowledge presented in the diagrams can be helpful to support organizations in conducting causal analysis sessions by providing an initial understanding on what usually causes critical RE problems. Copyright © 2015 by KSI Research Inc. and Knowledge Systems Institute Graduate School.},
  affiliation         = {UFF, Niterói, Brazil; UNIFACS/Fraunhofer, Salvador, Brazil; UFAM, Manaus, Brazil; PUC-RS, Porto Alegre, Brazil; Technische Universität München, München, Germany; University of Stuttgart, Stuttgart, Germany},
  author_keywords     = {Causal Analysis; Causes; Knowledge Building; NaPiRE; Problems; Requirements Engineering; Survey},
  document_type       = {Conference Paper},
  doi                 = {10.18293/SEKE2015-220},
  isbn                = {1891706373},
  issn                = {23259000},
  journal             = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  keywords            = {Knowledge engineering; Requirements engineering; Societies and institutions; Surveying; Surveys, Causal analysis; Causes; Knowledge building; NaPiRE; Problems, Software engineering},
  language            = {English},
  references          = {Pfleeger, S.L., (2009) Software Engineering: Theory and Practice, , 4th edition. Prentice-Hall; Broy, M., Requirements engineering as a key to holistic software quality (2006) International Symposium on Computer and Information Sciences (ISCIS 2006, pp. 24-34; Méndez Fernández, D., Wagner, S., Lochmann, K., Baumann, A., De Carne, H., Field study on requirements engineering: Investigation of artefacts, project parameters, and execution strategies (2012) Information and Software Technology, 54, pp. 162-178; Hall, T., Beecham, S., Rainer, A., Requirements problems in twelve software companies: An empirical analysis (2003) Empirical Software Engineering, 8, pp. 7-42; Khankaew, S., Riddle, S., A review of practice and problems in requirements engineering in small and medium software enterprises in Thailand (2014) International Workshop on Empirical Requirements Engineering (EmpiRE, pp. 1-8; Méndez Fernández, D., Wagner, S., Naming the pain in requirements engineering: A design for a global family of surveys and frst results from Germany (2015) Information and Software Technology, 57, pp. 616-643; Méndez Fernández, D., Wagner, S., Naming the pain in requirements engineering: Design of a global family of surveys and first results from Germany (2013) International Conference on Evaluation and Assessment in Software Engineering (EASE, pp. 183-194; Kalinowski, M., Card, D.N., Travassos, G.H., Evidence-Based Guidelines to Defect Causal Analysis (2012) IEEE Software, 29 (4), pp. 16-18; Kalinowski, M., Mendes, E., Travassos, G.H., An industry ready defect causal analysis approach exploring Bayesian networks (2014) Software Quality Days, pp. 12-33; Kovalenko, O., Winkler, D., Kalinowski, M., Serral, E., Biffl, S., Engineering process improvement in heterogeneous multi-disciplinary environments with defect causal analysis (2014) European Conference on System, Software & Service Process Improvement (EuroSPI); Kalinowski, M., Spínola, R.O., Dias-Neto, A.C., Bott, A., Travassos, G.H., Inspeções de Requisitos de Software em Desenvolvimento Incremental: Uma Experiência Prática (2007) VI Simpósio Brasileiro de Qualidade Software (SBQS), Porto de Galinhas, Brazil; Kalinowski, M., Travassos, G.H., Card, D.N., Towards a defect prevention based process improvement approach (2008) Euromicro Conference on Software Engineering and Advanced Applications (SEAA, pp. 199-206; Kalinowski, M., Travassos, G.H., Mendes, E., Card, D.N., Applying DPPI: A defect causal analysis approach using Bayesian networks (2010) International Conference on Product Focused Software Development and Process Improvement (PROFES, pp. 92-106; Kalinowski, M., Mendes, E., Travassos, G.H., Automating and evaluating the use of probabilistic cause-effect diagrams to improve defect causal analysis (2011) International Conference on Product Focused Software Development and Process Improvement (PROFES, pp. 232-246; Eveleens, J., Verhoef, T., The rise and fall of the chaos report figures (2010) IEEE Software, 27, pp. 30-36; Solemon, B., Sahibuddin, S., Abd Ghani, A.A., Requirements engineering problems and practices in software companies: An industrial survey (2009) Advances in Software Engineering, 59, pp. 70-77; Liu, L., Li, T., Peng, F., Why requirements engineering fails: A survey report from China (2010) International Conference on Requirements Engineering (RE, pp. 317-322; Ishikawa, K., (1976) Guide to Quality Control, , Asian Productivity Organization, Tokyo; Kalinowski, M., Weber, K., Franco, N., Duarte, V., Santos, G., Travassos, G., Results of 10 years of software process improvement in Brazil based on the MPS-SW model (2014) Int. Conf. on the Quality in Information and Communications Technology (QUATIC, pp. 28-37; Software e Serviços de TI: A Indústria Brasileira em Perspectiva (2012) Observatório Softex, 2. , Softex; Seaman, C.B., Qualitative methods in Empirical Studies of Software Engineering (1999) IEEE Transactions on Software Engineering (TSE), 25 (4), pp. 557-572; Biffl, S., Kalinowski, M., Rabiser, R., Ekaputra, F.J., Winkler, D., Systematic knowledge engineering: Building bodies of knowledge from published research (2014) International Journal on Software Engineering and Knowledge Engineering (IJSEKE), 24 (10), pp. 1-39},
  review              = {{S C2}},
  source              = {Scopus},
  sponsors            = {Knowledge Systems Institute Graduate School; KSI Research Inc.},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969772211&doi=10.18293%2fSEKE2015-220&partnerID=40&md5=bfd9eea87ac9f7a1e01cd2e3c140e80b},
}

@Article{Krein2016302,
  author              = {Krein, J.L. and Prechelt, L. and Juristo, N. and Nanthaamornphong, A. and Carver, J.C. and Vegas, S. and Knutson, C.D. and Seppi, K.D. and Eggett, D.L.},
  title               = {A Multi-Site Joint Replication of a Design Patterns Experiment Using Moderator Variables to Generalize across Contexts},
  journal             = {IEEE Transactions on Software Engineering},
  year                = {2016},
  volume              = {42},
  number              = {4},
  pages               = {302-321},
  issn                = {00985589},
  note                = {cited By 1},
  abbrev_source_title = {IEEE Trans Software Eng},
  abstract            = {Several empirical studies have explored the benefits of software design patterns, but their collective results are highly inconsistent. Resolving the inconsistencies requires investigating moderators-i.e., variables that cause an effect to differ across contexts. Objectives. Replicate a design patterns experiment at multiple sites and identify sufficient moderators to generalize the results across prior studies. Methods. We perform a close replication of an experiment investigating the impact (in terms of time and quality) of design patterns (Decorator and Abstract Factory) on software maintenance. The experiment was replicated once previously, with divergent results. We execute our replication at four universities-spanning two continents and three countries-using a new method for performing distributed replications based on closely coordinated, small-scale instances ('joint replication'). We perform two analyses: 1) a post-hoc analysis of moderators, based on frequentist and Bayesian statistics; 2) an a priori analysis of the original hypotheses, based on frequentist statistics. Results. The main effect differs across the previous instances of the experiment and across the sites in our distributed replication. Our analysis of moderators (including developer experience and pattern knowledge) resolves the differences sufficiently to allow for cross-context (and cross-study) conclusions. The final conclusions represent 126 participants from five universities and 12 software companies, spanning two continents and at least four countries. Conclusions. The Decorator pattern is found to be preferable to a simpler solution during maintenance, as long as the developer has at least some prior knowledge of the pattern. For Abstract Factory, the simpler solution is found to be mostly equivalent to the pattern solution. Abstract Factory is shown to require a higher level of knowledge and/or experience than Decorator for the pattern to be beneficial. © 2015 IEEE.},
  affiliation         = {Department of Computer Science, Brigham Young University, Provo, UT, United States; Ironwood Experts, LLC, Alpine, UT, United States; Institut Fur Informatik, Freie Universitat Berlin, Germany; Computing School, Technical University of Madrid, Spain; University of Oulu, Finland; Department of Information and Communication Technology, Prince of Songkla University, Phuket Campus, Thailand; Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States; Department of Statistics, Brigham Young University, Provo, UT, United States},
  art_number          = {7294706},
  author_keywords     = {Controlled experiment; Design patterns; joint replication; moderator variables; multi-site; software maintenance},
  coden               = {IESED},
  document_type       = {Article},
  doi                 = {10.1109/TSE.2015.2488625},
  keywords            = {Computer software maintenance; Maintenance; Software design, Bayesian statistics; Controlled experiment; Design Patterns; Empirical studies; Frequentist statistics; Multi-site; Software company; Software design patterns, Moderators},
  language            = {English},
  publisher           = {Institute of Electrical and Electronics Engineers Inc.},
  references          = {Beck, K., Coplien, J.O., Crocker, R., Dominick, L., Meszaros, G., Paulisch, F., Vlissides, J.M., Industrial experience with design patterns (1996) Proc. Int. Conf. Softw. Eng., pp. 103-114; Budinsky, F.J., Finnie, M.A., Vlissides, J.M., Yu, P.S., Automatic code generation from design patterns (1996) IBM Syst. J, 35 (2), pp. 151-171; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-Oriented Software Architecture: A System of Patterns, , Chichester U.K.: Wiley; Florijn, G., Meijers, M., Van Winsen, P., Tool support for object-oriented patterns (1997) Proc. Eur. Conf. Object-Oriented Program., pp. 472-495; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Reading MA USA: Addison-Wesley; Aversano, L., Cerulo, L., Penta, M.D., Relationship between design patterns defects and crosscutting concern scattering degree: An empirical study (2009) IET Softw, 3 (5), pp. 395-409. , Oct; Garzas, J., Garca, F., Piattini, M., Do rules and patterns affect design maintainability? (2009) J. Comput. Sci. Technol, 24 (2), pp. 262-272; Jeanmart, S., Gueheneuc, Y.-G., Sahraoui, H., Habra, N., Impact of the visitor pattern on program comprehension and maintenance (2009) Proc. Int. Symp. Empir. Softw. Eng. Meas., pp. 69-78; Ng, T.H., Cheung, S.C., Chan, W.K., Yu, Y.T., Work experience versus refactoring to design patterns: A controlled experiment (2006) Proc ACM SIGSOFT Symp. Found. Softw. Eng., pp. 12-22; Prechelt, L., Unger, B., Tichy, W.F., Brossler, P., Votta, L.G., A controlled experiment in maintenance comparing design patterns to simpler solutions (2001) IEEE Trans. Softw. Eng, 27 (12), pp. 1134-1144. , Dec; Wendorff, P., Assessment of design patterns during software reengineering: Lessons learned from a large commercial project (2001) Proc. Eur. Conf. Softw. Maintenance Reeng., pp. 77-84; Zhang, C., Budgen, D., What do we know about the effectiveness of software design patterns (2012) IEEE Trans. Softw. Eng, 38 (5), pp. 1213-1231. , Sep./Oct; Ampatzoglou, A., Charalampidou, S., Stamelos, I., Research state of the art on GoF design patterns: A mapping study (2013) J. Syst. Softw, 86 (7), pp. 1945-1964; Salkind, N.J., (2007) Encyclopedia of Measurement and Statistics, , Thousand Oaks, CA USA: Sage; Baron, R.M., Kenny, D.A., The moderator-mediator variable distinction in social psychological research: Conceptual, strategic, statistical considerations (1986) J. Pers. Soc. Psychol, 51 (6), pp. 1173-1182; Diesing, P., (1991) How Does Social Science Work Reflections on Practice, , Pittsburgh, PA, USA: Univ. Pittsburgh; Solomon, P., Cavanaugh, M.M., Draine, J., (2009) Randomized Controlled Trials: Design and Implementation for Community-Based Psychosocial Interventions, , Oxford U.K.: Oxford Univ; Sjøberg, D.I.K., Dyba, T., Jørgensen, M., The future of empirical methods in software engineering research (2007) Proc. Future Softw. Eng., pp. 358-378; Prechelt, L., Unger-Lamprecht, B., Philippsen, M., Tichy, W.F., Two controlled experiments assessing the usefulness of design pattern documentations in program maintenance (2002) IEEE Trans. Softw. Eng, 28 (6), pp. 595-606. , Jun; Vokac, M., Tichy, W.F., Sjøberg, D.I.K., Arisholm, E., Aldrin, M., A controlled experiment comparing the maintainability of programs designed with and without design patterns: A replication in a real programming environment (2004) Empir. Softw. Eng, 9 (3), pp. 149-195; Krein, J.L., Knutson, C.D., Prechelt, L., Juristo, N., Report from the 2nd International Workshop on Replication in Empirical Software Engineering Research (RESER 2011) (2012) ACM SIGSOFT Softw. Eng. Notes, 37 (1), pp. 27-30; (2011) 2nd International Workshop on Replication in Empirical Software Engineering Research, , http://sequoia.cs.byu.edu/reser2011, RESER Workshop [Online]. Available last accessed: Apr. 2014; (2011) Replication of 'Patmain, , http://www.inf.fu-berlin.de/w/SE/PatmainReplicationInfo, Freie Universitat Berlin [Online]. Available last accessed: Apr. 2014; Juristo, N., Vegas, S., Design patterns in software maintenance: An experiment replication at UPM (2011) Proc. Int. Workshop Replication Empir. Softw. Eng. Research, pp. 7-14; Krein, J.L., Pratt, L.J., Swenson, A.B., MacLean, A.C., Knutson, C.D., Eggett, D.L., Design patterns in software maintenance: An experiment replication at Brigham Young University (2011) Proc. Int. Workshop Replication Empir. Softw. Eng. Res., pp. 25-34; Nanthaamornphong, A., Carver, J.C., Design patterns in software maintenance: An experiment replication at University of Alabama (2011) Proc. Int. Workshop Replication Empir. Softw. Eng. Res., pp. 15-24; Prechelt, L., Liesenberg, M., Design patterns in software maintenance: An experiment replication at Freie Universitat Berlin (2011) Proc. Int. Workshop Replication Empir. Softw. Eng. Res., pp. 1-6; Krein, J.L., Prechelt, L., Juristo, N., Seppi, K.D., Nanthaamornphong, A., Carver, J.C., Vegas, S., Knutson, C.D., A method for generalizing across contexts in software engineering experiments (2015) IEEE Trans. Softw. Eng., , to be published; Prechel, L., PatmainPackage, T., (2013), http://page.mi.fu-berlin.de/prechelt/Biblio/#package, [Online]. Available last accessed: Apr. 2014Schmidt, D., Stal, M., Rohnert, H., Buschmann, F., (2000) Pattern-Oriented Software Architecture: Patterns for Concurrent and Networked Objects, , Chichester U.K.: Wiley; Ramsey, F.L., Schafer, D.W., (2002) The Statistical Sleuth: A Course in Methods of Data Analysis, 2nd Ed, , Pacific Grove, CA, USA: Duxbury; Surowiecki, J., (2005) The Wisdom of Crowds, , New York NY USA: Anchor Books; DeGroot, M.H., Schervish, M.J., (2012) Probability and Statistics, 4th Ed, , Boston, MA, USA: Addison-Wesley; Felt, P., (2012) Improving the Effectiveness of Machine-assisted Annotation, , Master's thesis, Dept. Comput. Sci., Brigham Young University, Provo, UT, USA; McLean, R.A., Sanders, W.L., Stroup, W.W., A unified approach to mixed linear models (1991) Am. Stat, 45 (1), pp. 54-64; Charmaz, K., (2006) Constructing Grounded Theory: A Practical Guide Through Qualitative Analysis, 1st Ed, , London, U.K.: Sage; Cook, T.D., Campbell, D.T., (1979) Quasi-Experimentation: Design & Analysis Issues for Field Settings, , Boston MA USA: Houghton Mifflin; Wohlin, C., Runeson, P., Host, M., Ohlsson, M.C., Regnell, B., Wesslen, A., (2012) Experimentation in Software Engineering, , New York, NY, USA: Springer; Dormann, C.F., Elith, J., Bacher, S., Buchmann, C., Carl, G., Carr-E, G., Marqu-Ez, J.R.G., Lautenbach, S., Collinearity: A review ofmethods to dealwith it and a simulation study evaluating their performance (2013) Ecography, 36 (1), pp. 27-46; Farrar, D.E., Glauber, R.R., Multicollinearity in regression analysis: The problem revisited (1967) Rev. Econ. Stat, 49 (1), pp. 92-107; Efron, B., Tibshirani, R.J., (1993) An Introduction to the Bootstrap Series Monographs on Statistics and Applied Probability, , London U.K.: Chapman & Hall/CRC Press; Carver, J.C., Towards reporting guidelines for experimental Replications: A proposal (2010) Proc. Int. Workshop Replication Empir. Softw. Eng. Res., pp. 1-4},
  review              = {{E C6 C3}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84968750638&doi=10.1109%2fTSE.2015.2488625&partnerID=40&md5=7584a4914c141ce1f5e8ac602485f694},
}

@Article{Lenarduzzi2015105,
  author                  = {Lenarduzzi, V. and Lunesu, I. and Matta, M. and Taibi, D.},
  title                   = {Functional size measures and effort estimation in agile development: A replicated study},
  journal                 = {Lecture Notes in Business Information Processing},
  year                    = {2015},
  volume                  = {212},
  pages                   = {105-116},
  issn                    = {18651348},
  note                    = {cited By 1; Conference of 16th International Conference on Agile Software Development, XP 2015 ; Conference Date: 25 May 2015 Through 29 May 2015; Conference Code:142639},
  abbrev_source_title     = {Lect. Notes Bus. Inf. Process.},
  abstract                = {To help developers during the Scrum planning poker, in our previous work we ran a case study on a Moonlight Scrum process to understand if it is possible to introduce functional size metrics to improve estimation accuracy and to measure the accuracy of expert-based estimation. The results of this original study showed that expert-based estimations are more accurate than those obtained by means of models, calculated with functional size measures. To validate the results and to extend them to plain Scrum processes, we replicated the original study twice, applying an exact replication to two plain Scrum development processes. The results of this replicated study show that the accuracy of the effort estimated by the developers is very accurate and higher than that obtained through functional size measures. In particular, SiFP and IFPUG Function Points, have low predictive power and are thus not help to improve the estimation accuracy in Scrum. © Springer International Publishing Switzerland 2015.},
  affiliation             = {Università degli Studi dell'Insubria, Varese, Italy; Università degli Studi di Cagliari, Piazza d'Armi, Cagliari, Italy; Free University of Bolzano, Piazza Domenicani 3, Bolzano, Italy},
  correspondence_address1 = {Matta, M.; Università degli Studi di Cagliari, Piazza d'Armi, Italy},
  document_type           = {Conference Paper},
  doi                     = {10.1007/978-3-319-18612-2_9},
  editor                  = {Dingsoyr T., Lassenius C., Paasivaara M.},
  isbn                    = {9783319186115},
  keywords                = {Object oriented programming; Software design, Agile development; Development process; Effort Estimation; Function point; Functional size; Functional size measure; Predictive power, Software engineering},
  language                = {English},
  publisher               = {Springer Verlag},
  references              = {Lenarduzzi, V., Taibi, D., Can functional size measure improve effort estimation in SCRUM? (2014) ICSEA - International Conference on Software Engineering and Advances, Nice, France; Basili, V.R., Caldiera, G., Rombach, H.D., The goal question metric approach (1994) Encyclopedia of Software Engineering, pp. 528-532; Carver, J., Towards reporting guidelines for experimental replications: A proposal (2010) Proceedings of the 1St International Workshop on Replication in Empirical Software Engineering Research (RESER) (Held during ICSE 2010), , Cape Town, South Africa, May 4; Shull, F., Carver, J., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empirical Software Engineering, 13 (2), pp. 211-218; Jamieson, D., Vinsen, K., Callender, G., Agile procurement to support agile software development (2005) Proceedings of the 35Th IEEE International Conference on Industrial Informatics, pp. 419-424; Sulaiman, T., Barton, B., Blackburn, T., AgileEVM - earned value management in SCRUM projects (2006) Proceedings of AGILE Conference, pp. 10-16; Haugen, N.C., An empirical study of using planning poker for user story estimation (2006) Proceedings of AGILE Conference, pp. 9-34; Cao, L., Estimating agile software project effort: An empirical study (2008) Americas Conference on Information Systems (AMCIS), 401p; Basili, V.R., Caldiera, G., Rombach, H.D., The goal question metric approach (1994) Encyclopedia of Software Engineering, pp. 528-532; Buglione, L., Abran, A., Improving estimations in agile projects: Issues and avenues (2007) Proceedings of the 4Th Software Measurement European Forum (SMEF) Rome, Italy; Taibi, D., Diebold, P., Lampasona, C., Moonlighting SCRUM: An agile method for distributed teams with part-time developers working during non-overlapping hours (2013) Proceedings of the Eighth International Conference on Software Engineering (ICSEA), pp. 318-323; Meli, R., Simple function point: A new functional size measurement method fully compliant with IFPUG 4.x (2011) Software Measurement European Forum; Mahnic, V., A case study on agile estimating and planning using SCRUM (2008) Americas Conference on Information Systems (AMCIS), pp. 123-128; Diebold, P., Dieudonné, L., Taibi, D., Process configuration framework tool (2014) Euromicro Conference on Software Engineering and Advanced Applications; (2004) Function Point Counting Practices Manual; Willeke, M., Agile in academics: Applying agile to instructional design (2011) Agile Conference (AGILE). IEEE; Lavazza, L., Meli, R., An evaluation of simple function point as a replacement of IFPUG function point (2014) In: IWSM - Mensura 2014, , Rotterdam, October; Cook, R.D., Weisberg, S., (1982) Residuals and Influence in Regression, , Chapman and Hall, London; Schwaber, K., Sutherland, J., (2001) The Scrum Guide, , www.scrumguides.org; Huijgens, H., Solingen, R.V., A replicated study on correlating agile team velocity measured in function and story points (2014) Proceedings of the 5Th International Workshop on Emerging Trends in Software Metrics (Wetsom 2014)},
  review                  = {{CS C8}},
  source                  = {Scopus},
  sponsors                = {Aalto University; Ericsson; et al; Nitor; Nokia; Reaktor},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942790957&doi=10.1007%2f978-3-319-18612-2_9&partnerID=40&md5=7df7a435ec0750ce6df7edb251512624},
}

@Conference{Marcolino201369,
  author              = {Marcolino, A. and Oliveira Jr., E. and Gimenes, I. and Conte, T.U.},
  title               = {Towards validating complexity-based metrics for software product line architectures},
  year                = {2013},
  pages               = {69-79},
  address             = {Brasilia},
  publisher           = {IEEE Computer Society},
  note                = {cited By 0; Conference of 7th Brazilian Symposium on Software Components, Architectures and Reuse, SBCARs 2013 - In Conjunction with the 4th Brazilian Conference on Software: Theory and Practice, CBSoft 2013 ; Conference Date: 29 September 2013 Through 4 October 2013; Conference Code:102387},
  abbrev_source_title = {Proc. - Braz. Symp. Softw. Components, Archit. Reuse, SBCARs - Conjunction CBSoft - Braz. Conf. Softw.: Theory Pract.},
  abstract            = {Software product line (PL) is an approach that focuses on software reuse and has been successfully applied for specific domains. The PL architecture (PLA) is one of the most important assets, and it represents commonalities and variabilities of a PL. The analysis of the PLA, supported by metrics, can be used as an important indicator of the PL quality and return on investment (ROI). This paper presents the replication of a controlled experiment for validating complexity metrics for PLAs. In particular, in this replication we are focused on evaluating how subjects less-qualified than the subjects from the original experiment evaluate complexity of a PLA by means of generated specific products. It was applied a PLA variability resolution model of a given PL to a sample of subjects from at least basic knowledge on UML modeling, PL and variability management. Apart of the selection of different subjects, the same original experiment conditions were kept. The proposed PLA complexity metrics were experimentally validated based on their application to a set of 35 derived products from the Arcade Game Maker (AGM) PL. Normality tests were applied to the metrics observed values, thus, pointing out their non-normality. Therefore, the non-parametric Spearman's correlation ranking technique was used to demonstrate the correlation between the CompPLA metric and the complexity rate given by the subjects to each derived product. Such a correlation was strong and positive. The results obtained in this replication shown that even less-qualified subjects, compared to the subjects from the original experiment, are able to rate the complexity of a PLA by means of its generated products, thus corroborating the results of the original experiment and providing more evidence that the composed metric for complexity (CompPLA) can be used as a relevant indicator for measuring the complexity of PLA based on their derived products. © 2013 IEEE.},
  affiliation         = {Informatics Department, State University of Maringá, Maringá-PR, Brazil; Institute of Computing, Federal University of Amazonas, Manaus-AM, Brazil},
  art_number          = {6685792},
  author_keywords     = {Correlation analysis; Emprical validation; Metrics; Replication; Software product line architecture},
  document_type       = {Conference Paper},
  doi                 = {10.1109/SBCARS.2013.18},
  isbn                = {9780769551562},
  journal             = {Proceedings - 7th Brazilian Symposium on Software Components, Architectures and Reuse, SBCARs 2013 - In Conjunction with CBSoft 2013 - 4th Brazilian Conference on Software: Theory and Practice},
  keywords            = {Computational complexity; Computer software reusability; Experiments; Software architecture, Correlation analysis; Emprical validation; Metrics; Replication; Software product line architecture, Quality control},
  language            = {English},
  references          = {Basili, V.R., Rombach, H.D., The TAME project: Towards improvement-oriented software environments (1988) Trans. Software Eng., 14 (6), pp. 758-773; Basili, V.R., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) Trans. Software Eng., 25, pp. 456-473; Bockle, G., Clements, P., McGregor, J.D., Muthig, D., Schmid, K., Calculating ROI for software product lines (2004) IEEE Softw., 21 (3), pp. 23-31; Chidamber, S.R., Kemerer, C.F., A metrics suite for object oriented design (1994) Trans. Softw. Eng., 20 (6), pp. 476-493; Clements, P., Kazman, R., Klein, M., (2002) Evaluating Software Architectures: Methods and Case Studies, , Addison-Wesley Longman Publishing Co., Inc., Boston, MA, USA; Dincel, E., Medvidovic, N., Van Der Hoek, A., Measuring product line architectures (2002) International Workshop on Software Product-Family Engineering, pp. 346-352. , London, UK, UK Springer-Verlag; Etxeberria, L., Sagardui, G., Variability driven quality evaluation in software product lines (2008) Proceedings of the Software Product Line Conference, pp. 243-252. , Washington, DC, USA IEEE Computer Society; Van Der Hoek, A., Dincel, E., Medvidovic, N., Using service utilization metrics to assess the structure of product line architectures (2003) Proceedings of the International Symposium on Software Metrics, pp. 298-308. , Washington, DC, USA IEEE Computer Society; Höst, M., Regnell, B., Wohlin, C., Using students as subjects - A comparative study of students and professionals in lead-time impact assessment (2000) Empirical Software Engineering, 5 (3), pp. 201-214; Juristo, N., Gómez, O.S., (2012) Empirical Software Engineering and Verification, , Springer-Verlag, Berlin, Heidelberg; Van Der Linden, F.J., Schmid, K., Rommes, E., (2007) Software Product Lines in Action: The Best Industrial Practice in Product Line Engineering, , Springer, Berlin; McCabe, T.J., A complexity measure (1976) IEEE Trans. Software Eng., 2 (4), pp. 308-320; Mendonca, M., Maldonado, J., De Oliveira, M., Carver, J., Fabbri, S., Shull, F., Travassos, G.H., Basili, V., A framework for software engineering experimental replications (2008) IEEE International Conference on Engineering of Complex Computer Systems, 2008, pp. 203-212; Oliveira, E.A., Junior, I.M., Gimenes, S., Maldonado, J.C., A metric suite to support software product line architecture evaluation (2008) Conferencia Latinoamericana de Informática, pp. 489-498; Oliveira, E.A., Junior, I.M., Gimenes, S., Maldonado, J.C., Empirical validation of variability-based complexity metrics for software product line architecture (2012) International Conference on Software Engineering and Knowledge Engineering, pp. 622-627. , Knowledge Systems Institute Graduate School; Oliveira, E.A., Junior, I.M., Gimenes, S., Maldonado, J.C., Masiero, P.C., Barroca, L., Systematic evaluation of software product line architectures (2013) Journal of Universal Computer Science, 19 (1), pp. 25-52; Pohl, K., Böckle, G., Van Der Linden, F.J., (2005) Software Product Line Engineering: Foundations, Principles, and Techniques, , Springer-Verlag, Secaucus, NJ, USA; Rahman, A., (2004) Metrics for the Structural Assessment of Product Line Architecture, , Master's thesis, School of Engineering - Blekinge Institute of Technology, Sweden; Shull, F., Basili, V., Carver, J., Maldonado, J., Travassos, G., Mendonca, M., Fabbri, S., Replicating software engineering experiments: Addressing the tacit knowledge problem (2002) Proceedings International Symposium on Empirical Software Engineering, 2002, pp. 7-16; Taylor, R.N., Medvidovic, N., Dashofy, E.M., (2009) Software Architecture: Foundations, Theory, and Practice, , John Wiley & Sons, USA},
  review              = {{E C9 C10}},
  source              = {Scopus},
  sponsors            = {CAPES; Conselho Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq); Google; Governo Federal Brasil - Pais Rico Pais sem Pobreza; INES; Ministerio da Ciencia, Tecnologia e Inovacao},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893336645&doi=10.1109%2fSBCARS.2013.18&partnerID=40&md5=b34a680a332e039ab4164d768d74ed3c},
}

@Article{Massey2015545,
  author                  = {Massey, A.K. and Otto, P.N. and Antón, A.I.},
  title                   = {Evaluating legal implementation readiness decision-making},
  journal                 = {IEEE Transactions on Software Engineering},
  year                    = {2015},
  volume                  = {41},
  number                  = {6},
  pages                   = {545-564},
  issn                    = {00985589},
  note                    = {cited By 0},
  abbrev_source_title     = {IEEE Trans Software Eng},
  abstract                = {Software systems are increasingly regulated. Software engineers therefore must determine which requirements have met or exceeded their legal obligations and which requirements have not. Requirements that have met or exceeded their legal obligations are legally implementation ready, whereas requirements that have not met or exceeded their legal obligations need further refinement. In this paper, we examine how software engineers make these determinations using a multi-case study with three cases. Each case involves assessment of requirements for an electronic health record system that must comply with the US Health Insurance Portability and Accountability Act (HIPAA) and is measured against the evaluations of HIPAA compliance subject matter experts. Our first case examines how individual graduate-level software engineering students assess whether the requirements met or exceeded their HIPAA obligations. Our second case replicates the findings from our first case using a different set of participants. Our third case examines how graduate-level software engineering students assess requirements using the Wideband Delphi approach to deriving consensus in groups. Our findings suggest that the average graduate-level software engineering student is ill-prepared to write legally compliant software with any confidence and that domain experts are an absolute necessity. © 2014 IEEE.},
  affiliation             = {School of Interactive Computing, Georgia Institute of Technology, Atlanta, GA, United States; Association of Computing Machinery, District of Columbia, 555 13th St. NW, Washington, DC, United States; Department of the School of Interactive Computing, Georgia Institute of Technology, Atlanta, GA, United States},
  art_number              = {6991569},
  author_keywords         = {Legal Implementation Readiness; Legal Requirements; Regulatory Compliance Software Engineering; Requirements Engineering},
  coden                   = {IESED},
  correspondence_address1 = {Massey, A.K.; School of Interactive Computing, Georgia Institute of TechnologyUnited States},
  document_type           = {Article},
  doi                     = {10.1109/TSE.2014.2383374},
  funding_details         = {0430166, NSF, National Science Foundation; 522931, NSF, National Science Foundation},
  keywords                = {Decision making; Education; Engineering education; Health insurance; Regulatory compliance; Requirements engineering; Software engineering, Electronic health record systems; Health insurance portability and accountability acts; Legal Implementation Readiness; Legal obligations; Legal requirements; Regulatory compliance software; Software engineering students; Subject matter experts, Students},
  language                = {English},
  publisher               = {Institute of Electrical and Electronics Engineers Inc.},
  references              = {Maxwell, J.C., Reasoning about legal text evolution for regulatory compliance in software systems (2013) Department of Computer Science, , Ph.D. dissertation North Carolina State University, Raleigh, NC; Otto, P.N., Antón, A.I., Addressing legal requirements in requirements engineering (2007) Proc. 15th IEEE Int. Requirements Eng. Conf., pp. 5-14. , 15-19 Oct; Beaver, K., Herold, R., (2004) The Practical Guide to HIPAA Privacy and Security Compliance, , New York, NY, USA: Auerbach; Yin, Q., Madhavji, N., Pattani, M., Eros: An approach for ensuring regulatory compliance of process outcomes (2013) Proc. 6th Int. Workshop Requirements Eng. Law, pp. 21-24. , Jul; Barth, A., Datta, A., Mitchell, J.C., Nissenbaum, H., Privacy and contextual integrity: Framework and applications (2006) Proc. 2006 IEEE Symp. Security Privacy, pp. 184-198; May, M.J., Gunter, C.A., Lee, I., Privacy APIs: Access control techniques to analyze and verify legal privacy policies (2006) Proc. Comput. Secur. Found. Workshop, pp. 85-97; Massacci, F., Prest, M., Zannone, N., Using a security requirements engineering methodology in practice: The compliance with the Italian data protection legislation (2005) Comput. Standards Interfaces, 27 (5), pp. 445-455; Jureta, I., Breaux, T., Siena, A., Gordon, D., Toward benchmarks to assess advancement in legal requirements modeling (2013) Proc. Sixth Int. Workshop Requirements Eng. Law, pp. 25-33. , Jul; El Kharbili, M., Ma, Q., Kelsen, P., Pulvermueller, E., Corel: Policy-based and model-driven regulatory compliance management (2011) Proc. 15th IEEE Int. Enterprise Distrib. Object Comput. Conf., pp. 247-256. , Aug; El Kharbili, M., Ma, Q., Kelsen, P., Pulvermueller, E., Enterprise regulatory compliance modeling using Corel: An illustrative example (2011) Proc. IEEE 13th Conf. Commerce Enterprise Comput., pp. 185-190. , Sep; Hassan, W., Logrippo, L., Requirements and compliance in legal systems: A logic approach (2008) Proc. Requirements Eng. Law, pp. 40-44. , Sep; Hassan, W., Logrippo, L., Governance requirements extraction model for legal compliance validation (2009) Proc. 2nd Int. Workshop Requirements Eng. Law, pp. 7-12. , Sep; Hassan, W., Logrippo, L., Towards a process for legally compliant software (2013) Proc. 6th Int. Workshop Requirements Eng. Law, pp. 44-52. , Jul; Maxwell, J., Antón, A., The production rule framework: Developing a canonical set of software requirements for compliance with law (2010) Proc. 1st ACM Int. Health Informat. Symp., pp. 629-636; Ghanavati, S., Amyot, D., Peyton, L., Compliance analysis based on a goal-oriented requirement language evaluation methodology (2009) Proc. 17th IEEE Int. Requirements Eng. Conf., pp. 133-142. , Aug; Ghanavati, S., Amyot, D., Peyton, L., A systematic review of goal-oriented requirements management frameworks for business process compliance (2011) Proc. 4th Int. Workshop Requirements Eng. Law, pp. 25-34; Ghanavati, S., Humphreys, L., Boella, G., Di Caro, L., Robaldo, L., Torre Der L.Van, Compliance with multiple regulations (2014) Proc. 33rd Int. Conf. Conceptual Model., pp. 415-422; Ghanavati, S., Amyot, D., Rifaut, A., Dubois, E., Goal-oriented compliance with multiple regulations (2014) Proc. 22nd IEEE Int. Requirements Eng. Conf., pp. 73-82; Rifaut, A., Ghanavati, S., Measurement-oriented comparison of multiple regulations with grl (2012) Proc. 5th Int. Workshop Requirements Eng. Law (RELAW), pp. 7-16. , Sep; Gordon, D., Breaux, T., Reconciling multi-jurisdictional legal requirements: A case study in requirements water marking (2012) Proc. 20th IEEE Int. Requirements Eng. Conf., pp. 91-100. , Sep; Gordon, D., The regulatory world and the machine: Harmonizing legal requirements and the systems they affect (2013) Proc. 21st IEEE Int. Requirements Eng. Conf., pp. 381-384. , Jul; Ingolfo, S., Silva Souza, V., Law and adaptivity in requirements engineering (2013) Proc. ICSE Workshop Softw. Eng. Adaptive Self-Manag. Syst., pp. 163-168. , May; Berenbach, B., Grusemann, D., Cleland-Huang, J., The application of just in time tracing to regulatory codes and standards (2010) Proc. 8th Conf. Syst. Eng. Res.; Cleland-Huang, J., Czauderna, A., Gibiec, M., Emenecker, J., A machine learning approach for tracing regulatory requirements codes to product specific requirements (2010) Proc. 32nd Int. Conf. Softw. Eng., , May 2-8; Breaux, T., Exercising due diligence in legal requirements acquisition: A tool-supported, frame-based approach (2009) Proc. 17th IEEE Int. Requirements Eng. Conf., pp. 225-230. , 31 - Sep. 4; Breaux, T., Gordon, D., Preserving traceability and encoding meaning in legal requirements extraction (2013) Proc. 6th Int. Workshop Requirements Eng. Law, pp. 57-60. , Jul; Basili, V.R., Software modeling and measurement: The goal/question/metric paradigm (1992) University of Maryland at College Park, , College Park, MD, USA, Tech. Rep. UMIACS TR-92-96; Basili, V.R., (1995) Applying the Goal/question/metric Paradigm in the Experience Factory, pp. 21-44. , International Thomson Computer Press; Breaux, T.D., Antón, A.I., Analyzing regulatory rules for privacy and security requirements (2008) IEEE Trans. Softw. Eng., 34 (1), pp. 5-20. , Jan; Maxwell, J.C., Antón, A.I., Discovering conflicting software requirements by analyzing legal cross-references (2011) Proc. 19th IEEE Int. Requirements Eng. Conf., pp. 197-206. , Sep; Massey, A., Otto, P., Hayward, L., Antón, A., Evaluating existing security and privacy requirements for legal compliance (2010) Requirements Eng., 15, pp. 119-137; Massey, A.K., Antón, A.I., Triage for legal requirements (2010) North Carolina State University, , NC, USA, Tech. Rep. TR-2010-22; Boehm, B.W., (1981) Software Engineering Economics, , Upper Saddle River, NJ, USA: Prentice-Hall; Olson, D., Delen, D., (2008) Advanced Data Mining Techniques, , New York, NY, USA: Springer; Carletta, J., Assessing agreement on classification tasks: The kappa statistic (1996) Computational Linguistics, 22 (2), pp. 249-254; Fleiss, J.L., Cohen, J., The equivalence of weighted kappa and the intraclass correlation coefficient as measures of reliability (1973) Educ. Psychol. Meas., 33, pp. 613-619; Yin, R.K., (2003) Case Study Research: Design and Methods, 5. , 3rd ed. Newbury Park, CA, USA: Sage; Cozby, P.C., (2009) Methods in Behavioral Research, , 10th ed. New York, NY, USA: McGraw-Hill; Massey, A.K., Rutledge, R.L., Antón, A.I., Swire, P.P., Identifying and classifying ambiguity for regulatory requirements (2014) Proc. 22nd IEEE Int. Requirements Eng. Conf., pp. 83-92; Massey, A., Smith, B., Otto, P., Anton, A., Assessing the accuracy of legal implementation readiness decisions (2011) Proc. 19th IEEE Int. Requirements Eng. Conf., pp. 207-216. , Sep; Massey, A.K., Eisenstein, J., Antón, A.I., Swire, P., Automated text mining for requirements analysis of policy documents (2013) Proc. 21st Int. Conf. Requirements Eng., pp. 4-13},
  review                  = {{CS C2}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84933047992&doi=10.1109%2fTSE.2014.2383374&partnerID=40&md5=929546ad82a2a8acd471d409a3bb4f66},
}

@Article{Mauša2017331,
  author                  = {Mauša, G. and Galinac Grbac, T.},
  title                   = {Co-evolutionary multi-population genetic programming for classification in software defect prediction: An empirical case study},
  journal                 = {Applied Soft Computing Journal},
  year                    = {2017},
  volume                  = {55},
  pages                   = {331-351},
  issn                    = {15684946},
  note                    = {cited By 0},
  abbrev_source_title     = {Appl. Soft Comput. J.},
  abstract                = {Evolving diverse ensembles using genetic programming has recently been proposed for classification problems with unbalanced data. Population diversity is crucial for evolving effective algorithms. Multilevel selection strategies that involve additional colonization and migration operations have shown better performance in some applications. Therefore, in this paper, we are interested in analysing the performance of evolving diverse ensembles using genetic programming for software defect prediction with unbalanced data by using different selection strategies. We use colonization and migration operators along with three ensemble selection strategies for the multi-objective evolutionary algorithm. We compare the performance of the operators for software defect prediction datasets with varying levels of data imbalance. Moreover, to generalize the results, gain a broader view and understand the underlying effects, we replicated the same experiments on UCI datasets, which are often used in the evolutionary computing community. The use of multilevel selection strategies provides reliable results with relatively fast convergence speeds and outperforms the other evolutionary algorithms that are often used in this research area and investigated in this paper. This paper also presented a promising ensemble strategy based on a simple convex hull approach and at the same time it raised the question whether ensemble strategy based on the whole population should also be investigated. © 2017 Elsevier B.V.},
  affiliation             = {Faculty of Engineering, University of Rijeka, Vukovarska 58, Rijeka, Croatia},
  author_keywords         = {Classification; Coevolution; Genetic programming; Software defect prediction},
  correspondence_address1 = {Mauša, G.; Faculty of Engineering, University of Rijeka, Vukovarska 58, Croatia},
  document_type           = {Article},
  doi                     = {10.1016/j.asoc.2017.01.050},
  keywords                = {Classification (of information); Defects; Forecasting; Genetic algorithms; Genetic programming, Co-evolution; Effective algorithms; Empirical case studies; Evolutionary computing; Fast convergence speed; Multi objective evolutionary algorithms; Multi-level selection; Software defect prediction, Evolutionary algorithms},
  language                = {English},
  publisher               = {Elsevier Ltd},
  references              = {Galinac Grbac, T., Runeson, P., Huljenic, D., A second replicated quantitative analysis of fault distributions in complex software systems (2013) IEEE Trans. Softw. Eng., 39 (4), pp. 462-476; Galinac Grbac, T., Huljenić, D., On the probability distribution of faults in complex software systems (2015) Inf. Softw. Technol., 58, pp. 250-258; Hall, T., Beecham, S., Bowes, D., Gray, D., Counsell, S., A systematic literature review on fault prediction performance in software engineering (2012) IEEE Trans. Softw. Eng., 38 (6), pp. 1276-1304; Provost, F., Machine learning from imbalanced data sets 101 (extended abstract)Galar, M., Fernández, A., Barrenechea, E., Bustince, H., Herrera, F.G., A review on ensembles for the class imbalance problem: bagging-, boosting-, and hybrid-based approaches (2012) IEEE Trans. Syst. Man Cybern. Part C: Appl. Rev., 42 (4), pp. 463-484; Seiffert, C., Khoshgoftaar, T.M., Hulse, J.V., Improving software-quality predictions with data sampling and boosting (2009) IEEE Trans. Syst. Man Cybern. Part A: Syst. Hum., 39 (6), pp. 1283-1294; Ren, J., Qin, K., Ma, Y., Luo, G., On software defect prediction using machine learning (2014) J. Appl. Math., pp. 7854351-7854358; Graning, L., Jin, Y., Sendhoff, B., Generalization improvement in multi-objective learning (2006) The 2006 IEEE International Joint Conference on Neural Network Proceedings, pp. 4839-4846; Ishibuchi, H., Akedo, N., Nojima, Y., Behavior of multiobjective evolutionary algorithms on many-objective knapsack problems (2015) IEEE Trans. Evol. Comput., 19 (2), pp. 264-283; Wang, B., Pineau, J., Online bagging and boosting for imbalanced data streams (2016) IEEE Trans. Knowl. Data Eng., 28 (12), pp. 3353-3366; Bhowan, U., Johnston, M., Zhang, M., Yao, X., Evolving diverse ensembles using genetic programming for classification with unbalanced data (2013) IEEE Trans. Evol. Comput., 17 (3), pp. 368-386; Bhowan, U., Johnston, M., Zhang, M., Yao, X., Reusing genetic programming for ensemble selection in classification of unbalanced data (2013) IEEE Trans. Evol. Comput.; Eiben, A.E., Smith, J.E., Introduction to Evolutionary Computing (2003), Springer-VerlagDeb, K., Pratap, A., Agarwal, S., Meyarivan, T., A fast and elitist multiobjective genetic algorithm: NSGA-II (2002) Trans. Evol. Comput., 6 (2), pp. 182-197; Bhowan, U., Johnston, M., Zhang, M., Evolving ensembles in multi-objective genetic programming for classification with unbalanced data (2011) 13th Annual Genetic and Evolutionary Computation Conference, GECCO 2011 Proceedings, Dublin, Ireland, July 12–16, 2011, pp. 1331-1338; De Jong, K., Co-evolutionary algorithms: a useful computational abstraction? (2015) Proceeding of 7th International Symposium, SSBSE, pp. 3-11; Sareni, B., Krahenbuhl, L., Fitness sharing and niching methods revisited (1998) Trans. Evol. Comput., 2 (3), pp. 97-106; Cioppa, A.D., Stefano, C.D., Marcelli, A., Where are the niches? Dynamic fitness sharing (2007) IEEE Trans. Evol. Comput., 11 (4), pp. 453-465; Biswas, S., Kundu, S., Das, S., Inducing niching behavior in differential evolution through local information sharing (2015) IEEE Trans. Evol. Comput., 19 (2), pp. 246-263; Rubinić, E., Mauša, G., Galinac Grbac, T., Software defect classification with a variant of NSGA-II and simple voting strategies (2015) Search-Based Software Engineering, Vol. 9275 of Lecture Notes in Computer Science, pp. 347-353. , M. Barros Y. Labiche Springer International Publishing; Wang, P., Emmerich, M., Li, R., Tang, K., Bäck, T., Yao, X., Convex hull-based multi-objective genetic programming for maximizing ROC performance, CoRR abs/1303.3145Akbari, R., Zeighami, V., Ziarati, K., MLGA: a multilevel cooperative genetic algorithm (2010) 2010 IEEE Fifth International Conference on Bio-Inspired Computing: Theories and Applications (BIC-TA), pp. 271-277; Ziarati, K., Akbari, R., A multilevel evolutionary algorithm for optimizing numerical functions (2011) Int. J. Ind. Eng. Comput., 2 (2), pp. 419-430; Skinner, B.T., Nguyen, H.T., Liu, D., Distributed classifier migration in XCS for classification of electroencephalographic signals (2007) IEEE Congress on Evolutionary Computation, pp. 2829-2836. , IEEE; Martin, W.N., Lienig, J., Cohoon, J.P., (1997), Island (migration) models: evolutionary algorithms based on punctuated equilibria, 6, 3Potter, M.A., Jong, K.A.D., A cooperative coevolutionary approach to function optimization (1994) Proceedings of the International Conference on Evolutionary Computation. The Third Conference on Parallel Problem Solving from Nature: Parallel Problem Solving from Nature, PPSN III, pp. 249-257. , Springer-Verlag London, UK; Abedini, M., Kirley, M., CoXCS: a coevolutionary learning classifier based on feature space partitioning (2009) Australasian Conference on Artificial Intelligence, Vol. 5866 of Lecture Notes in Computer Science, pp. 360-369. , A.E. Nicholson X. Li Springer; Lohn, J., Kraus, W., Haith, G., Comparing a coevolutionary genetic algorithm for multiobjective optimization (2002) Proc. of Congress on Evolutionary Computing ’02; Mu, X.-D., Chang, R.-H., Zhang, L., Software defect prediction based on competitive organization coevolutionary algorithm (2012) J. Converg. Inf. Technol., 7 (5), pp. 325-332; Yao, X., Liu, Y., Making use of population information in evolutionary artificial neural networks (1998) Trans. Syst. Man Cyber. Part B, 28 (3), pp. 417-425; Huang, S.-J., Chiu, N.-H., Optimization of analogy weights by genetic algorithm for software effort estimation (2006) IST, 48 (11), pp. 1034-1045; Skolicki, Z., De Jong, K., The influence of migration sizes and intervals on island models (2005) Proceedings of the 7th Annual Conference on Genetic and Evolutionary Computation, GECCO ’05, NY, USA, pp. 1295-1302. , ACM; Tomassini, M., Spatially Structured Evolutionary Algorithms (2005), Springer-VerlagBoryczka, U., Kozak, J., Enhancing the effectiveness of ant colony decision tree algorithms by co-learning (2015) Appl. Soft Comput., 30C, pp. 166-178; Ahn, C.W., Advances in Evolutionary Algorithms: Theory, Design and Practice, Vol. 18 of Studies in Computational Intelligence (2006), SpringerWiegand, R.P., Liles, W.C., Jong, K.A.D., An empirical analysis of collaboration methods in cooperative coevolutionary algorithms (2001) Proceedings from the Genetic and Evolutionary Computation Conference, pp. 1235-1242. , Morgan Kaufmann; Lichman, M., UCI Machine Learning Repository (2013), http://archive.ics.uci.edu/mlCortes, C., Mohri, M., AUC optimization vs. error rate minimization (2004) Advances in Neural Information Processing Systems, , MIT Press; Chatelain, C., Adam, S., Lecourtier, Y., Heutte, L., Paquet, T., A multi-model selection framework for unknown and/or evolutive misclassification cost problems (2010) Pattern Recognit., 43 (3), pp. 815-823; Zhao, J., Fernandes, V.B., Jiao, L., Yevseyeva, I., Maulana, A., Li, R., Bäck, T., Emmerich, M.T.M., Multiobjective optimization of classifiers by means of 3-d convex hull based evolutionary algorithm, CoRR abs/1412.5710Ma, Y., Luo, G., Zeng, X., Chen, A., Transfer learning for cross-company software defect prediction (2012) Inf. Softw. Technol., 54 (3), pp. 248-256; Bhowan, U., Johnston, M., Zhang, M., Differentiating between individual class performance in genetic programming fitness for classification with unbalanced data (2009) in: IEEE Congress on Evolutionary Computation, IEEE, pp. 2802-2809; Bhowan, U., Johnston, M., Zhang, M., Developing new fitness functions in genetic programming for classification with unbalanced data (2012) IEEE Trans. Syst. Man Cybern. Part B, 42 (2), pp. 406-421; Fawcett, T., An introduction to ROC analysis (2006) Pattern Recogn. Lett., 27 (8), pp. 861-874; Mauša, G., Galinac Grbac, T., Dalbelo Bašić, B., Software defect prediction with bug-code analyzer – a data collection tool demo (2014) Proc. of SoftCOM ’14; Mauša, G., Galinac Grbac, T., Dalbelo Bašić, B., A systemathic data collection procedure for software defect prediction (2016) Comp. Sci. Inf. Syst., 13 (1), pp. 173-197; Mauša, G., Perković, P., Galinac Grbac, T., Štajduhar, I., Techniques for bug-code linking (2014) Proc. of SQAMIA ’14, pp. 47-55; Mauša, G., Galinac Grbac, T., Dalbelo Bašić, B., Data collection for software defect prediction an exploratory case study of open source software projects (2015) Proceedings of MIPRO ’14, Opatija, Croatia, pp. 513-519; Catal, C., Software mining and fault prediction (2012) Wiley Interdisc. Rew. Data Min. Knowl. Discov., 2 (5), pp. 420-426; Catal, C., Review: Software fault prediction: a literature review and current trends (2011) Expert Syst. Appl., 38 (4), pp. 4626-4636; Harman, M., Islam, S., Jia, Y., Minku, L., Sarro, F., Srivisut, K., Less is more: temporal fault predictive performance over multiple Hadoop releases (2014) Proc. of SSBSE’14, pp. 240-246; Richard, L., Concepts & Applications of Inferential Statistics (2011)Kocaguneli, E., Menzies, T., Keung, J.W., On the value of ensemble effort estimation (2012) IEEE Trans. Softw. Eng., 38 (6), pp. 1403-1416; Catal, C., Diri, B., A systematic review of software fault prediction studies (2009) Expert Syst. Appl., 36 (4), pp. 7346-7354; Runeson, P., Höst, M., Guidelines for conducting and reporting case study research in software engineering (2009) Empir. Softw. Eng., 14 (2), pp. 131-164; Mausa, G., Bogunovic, N., Grbac Galinac, T., Basic Dalbelo, B., Rotation forest in software defect prediction (2015) SQAMIA, Vol. 1375 of CEUR Workshop Proceedings, pp. 35-43. , Z. Budimac M. Hericko CEUR-WS.org},
  review                  = {{CS C11 C4}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013832392&doi=10.1016%2fj.asoc.2017.01.050&partnerID=40&md5=b9b75d2e9b31db279ac8e5e1a504e56f},
}

@Conference{Morrison2016221,
  author              = {Morrison, B.B. and Decker, A. and Margulieux, L.E.},
  title               = {Learning loops: A replication study illuminates impact of HS courses},
  year                = {2016},
  pages               = {221-230},
  publisher           = {Association for Computing Machinery, Inc},
  note                = {cited By 0; Conference of 12th Annual International Computing Education Research Conference, ICER 2016 ; Conference Date: 8 September 2016 Through 12 September 2016; Conference Code:124617},
  abbrev_source_title = {ICER - Proc. ACM Conf. Int. Comput. Educ. Res.},
  abstract            = {A recent study about the effectiveness of subgoal labeling in an introductory computer science programming course both supported previous research and produced some puzzling results. In this study, we replicate the experiment with a different student population to determine if the results are repeatable. We also gave the experimental task to students in a follow-on course to explore if they had indeed mastered the programming concept. We found that the previous puzzling results were repeated. In addition, for the novice programmers, we found a statistically significant difference in performance based on whether the student had previous programming courses in high school. However, this performance difference disappears in a follow-on course after all students have taken an introductory computer science programming course. The results of this study have implications for how quickly students are evaluated for mastery of knowledge and how we group students in introductory programming courses.},
  affiliation         = {College of Information Science and Technology, University of Nebraska at Omaha, 6001 Dodge Street, Omaha, NE, United States; School of Interactive Games and Media, Rochester Institute of Technology, 152 Lomb Memorial Drive, Rochester, NY, United States; School of Psychology, Georgia Institute of Technology, 654 Cherry Street, Atlanta, GA, United States},
  author_keywords     = {Cognitive Load; Contextual Transfer; Subgoal labels},
  document_type       = {Conference Paper},
  doi                 = {10.1145/2960310.2960330},
  funding_details     = {1138378, NSF, National Science Foundation},
  funding_text        = {We would like to thank the students who participated in the study and their instructors who graciously gave us the time. We also thank the anonymous reviewers who supplied comments which improved this paper. This work is funded in part by the National Science Foundation under grant 1138378. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the NSF.},
  isbn                = {9781450344494},
  journal             = {ICER 2016 - Proceedings of the 2016 ACM Conference on International Computing Education Research},
  keywords            = {Computer programming; Education, Cognitive loads; Contextual Transfer; Introductory computer science; Introductory programming course; Programming concepts; Statistically significant difference; Student populations; Subgoals, Students},
  language            = {English},
  references          = {Atkinson, R.K., Aiding Transfer in Statistics: Examining the Use of Conceptually Oriented Equations and Elaborations during Subgoal Learning (2003) Journal of Educational Psychology, 95 (4), p. 762; Atkinson, R.K., Learning from examples: Instructional principles from the worked examples research (2000) Review of Educational Research, 70 (2), pp. 181-214. , (2000); Atkinson, R.K., Optimizing learning from examples using animated pedagogical agents (2002) Journal of Educational Psychology, 94 (2), p. 416. , (2002); Atkinson, R.K., Derry, S.J., Computer-based examples designed to encourage optimal example processing: A study examining the impact of sequentially presented, subgoal-oriented worked examples (2000) Fourth International Conference of the Learning Sciences, , (2000); Bennedsen, J., Caspersen, M.E., An investigation of potential success factors for an introductory model-driven programming course (2005) Proceedings of the First International Workshop on Computing Education Research, pp. 155-163. , (2005); Bergin, S., Reilly, R., Programming: Factors that influence success (2005) ACM SIGCSE Bulletin, pp. 411-415. , (2005); Bjork, R.A., Memory and metamemory considerations in the training of human beings (1994) Metacognition: Knowing about Knowing, , MIT Press; Bransford, J., (2000) How People Learn: Brain, Mind, Experience, and School, , National Academies Press; Campbell, V., Johnstone, M., The significance of learning style with respect to achievement in first year programming students (2010) Software Engineering Conference (ASWEC), 2010 21st Australian, pp. 165-170. , (2010); Catrambone, R., Generalizing solution procedures learned from examples (1996) Journal of Experimental Psychology: Learning, Memory, and Cognition; Journal of Experimental Psychology: Learning, Memory, and Cognition, 22 (4), p. 1020; Catrambone, R., Improving examples to improve transfer to novel problems (1994) Memory & Cognition, 22 (5), pp. 606-615. , (1994); Catrambone, R., The subgoal learning model: Creating better examples so that students can solve novel problems (1998) Journal of Experimental Psychology: General, 127 (4), p. 355. , (1998); Chi, M., Self-explanations: How students study and use examples in learning to solve problems (1989) Cognitive Science, 13 (2), pp. 145-182. , (1989); Denny, P., Evaluating a new exam question: Parsons problems (2008) Proceeding of the Fourth International Workshop on Computing Education Research (Sydney, Australia, 2008), pp. 113-124; Eiriksdottir, E., Catrambone, R., Procedural instructions, principles, and examples how to structure instructions for procedural tasks to enhance performance, learning, and transfer (2011) Human Factors: The Journal of the Human Factors and Ergonomics Society, 53 (6), pp. 749-770. , (2011); Evans, G.E., Simkin, M.G., What best predicts computer proficiency? (1989) Communications of the ACM, 32 (11), pp. 1322-1327. , (1989); Hagan, D., Markham, S., Does it help to have some programming experience before beginning a computing degree program? (2000) ACM SIGCSE Bulletin, pp. 25-28. , (2000); Johnson, W.L., Soloway, E., PROUST: Knowledge-based program understanding (1985) Software Engineering, IEEE Transactions on, 3, pp. 267-275. , (1985); Kalyuga, S., Expertise reversal effect and its implications for learner-tailored instruction (2007) Educational Psychology Review, 19 (4), pp. 509-539. , (2007); Leeper, R.R., Silver, J.L., Predicting success in a first programming course (1982) ACM SIGCSE Bulletin, 14 (1), pp. 147-150. , (1982); Leppink, J., Development of an instrument for measuring different types of cognitive load (2013) Behavior Research Methods, 45 (4), pp. 1058-1072. , (2013); Lister, R., A multi-national study of reading and tracing skills in novice programmers (2004) ACM SIGCSE Bulletin, pp. 119-150. , (2004); Lopez, M., Relationships between reading, tracing and writing skills in introductory programming (2008) Proceedings of the Fourth International Workshop on Computing Education Research, pp. 101-112. , (2008); Margulieux, L.E., Subgoal-labeled instructional material improves performance and transfer in learning to develop mobile applications (2012) Proceedings of the Ninth Annual International Conference on International Computing Education Research, pp. 71-78. , (2012); Margulieux, L.E., Catrambone, R., Improving problem solving performance in computer-based learning environments through subgoal labels (2014) Proceedings of the First ACM Conference on Learning@ Scale Conference, pp. 149-150. , (2014); McCracken, M., A multi-national, multiinstitutional study of assessment of programming skills of first-year CS students (2001) Working Group Reports from ITiCSE on Innovation and Technology in Computer Science Education, pp. 125-180. , (Canterbury, UK, 2001); Van Merriënboer, J.J., Sweller, J., Cognitive load theory and complex learning: Recent developments and future directions (2005) Educational Psychology Review, 17 (2), pp. 147-177. , (2005); Morrison Briana, B., Subgoals, Context, and Worked Examples in Learning Computing Problem Solving (2015) ICER 2015, , (Aug. 2015); Palmiter, S., Elkerton, J., Animated demonstrations for learning procedural computer-based tasks (1993) Human- Computer Interaction, 8 (3), pp. 193-216. , (1993); Parsons, D., Haden, P., (2006) Parson's Programming Puzzles: A Fun and Effective Learning Tool for First Programming Courses. Proceedings of the 8th Australasian Conference on Computing Education, 52, pp. 157-163. , (Darlinghurst, Australia, Australia, 2006); Plass, J.L., (2010) Cognitive Load Theory, , Cambridge University Press; Renkl, A., Atkinson, R.K., Learning from examples: Fostering self-explanations in computer-based learning environments (2002) Interactive Learning Environments, 10 (2), pp. 105-119. , (2002); (2014) Undergraduate Course Descriptions; Rountree, N., Interacting factors that predict success and failure in a CS1 course (2004) ACM SIGCSE Bulletin, pp. 101-104. , (2004); Simon, Predictors of success in a first programming course (2006) Proceedings of the 8th Australasian Conference on Computing Education, 52, pp. 189-196. , (2006); Soloway, E., Ehrlich, K., Empirical studies of programming knowledge (1984) Software Engineering, IEEE Transactions on, 5, pp. 595-609. , (1984); Sweller, J., Cognitive architecture and instructional design (1998) Educational Psychology Review, 10 (3), pp. 251-296. , (1998); Sweller, J., (2011) Cognitive Load Theory, , Springer; Sweller, J., Element interactivity and intrinsic, extraneous, and germane cognitive load (2010) Educational Psychology Review, 22 (2), pp. 123-138. , (2010); Van Gog Tamara, Fred, P., (2012) Cognitive Load Measurement. Encyclopedia of the Sciences of Learning, , Springer; Ventura, P.R., Jr., (2005) Identifying Predictors of Success for An Objects-first CS1, , (2005); Watson, C., No tests required: Comparing traditional and dynamic predictors of programming success (2014) Proceedings of the 45th ACM Technical Symposium on Computer Science Education, pp. 469-474. , (2014); White, G., Sivitanides, M., An empirical investigation of the relationship between success in mathematics and visual programming courses (2003) Journal of Information Systems Education, 14 (4), p. 409. , (2003); Wiedenbeck, S., Factors affecting the success of nonmajors in learning to program (2005) Proceedings of the First International Workshop on Computing Education Research, pp. 13-24. , (2005); Wilson, B.C., Shrock, S., Contributing to success in an introductory computer science course: A study of twelve factors (2001) ACM SIGCSE Bulletin, pp. 184-188. , (2001)},
  review              = {{E C4}},
  source              = {Scopus},
  sponsors            = {ACM Special Interest Group on Computer Science Education (SIGCSE)},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85000631154&doi=10.1145%2f2960310.2960330&partnerID=40&md5=4fce4a0ff68ec46feb0c22ee0b4c999d},
}

@Conference{Niu2016186,
  author              = {Niu, N. and Koshoffer, A. and Newman, L. and Khatwani, C. and Samarasinghe, C. and Savolainen, J.},
  title               = {Advancing Repeated Research in Requirements Engineering: A Theoretical Replication of Viewpoint Merging},
  year                = {2016},
  pages               = {186-195},
  publisher           = {Institute of Electrical and Electronics Engineers Inc.},
  note                = {cited By 0; Conference of 24th IEEE International Requirements Engineering Conference, RE 2016 ; Conference Date: 12 September 2016 Through 16 September 2016; Conference Code:125191},
  abbrev_source_title = {Proc. - IEEE Int. Requir. Eng. Conf., RE},
  abstract            = {Compared to building a single requirements view, modeling stakeholder viewpoints and then merging them is shown to improve the understanding of the problem domain, but also very time consuming. How has the situation changed? This paper reports our replication of a case study, where we take theoretical replication's advantage to mitigate the original study design's threat and to embrace an important evolving factor, namely automated tool support for producing i∗ models. Our replicate case study verifies the rich domain understanding gained through viewpoint-based modeling, and updates the prior results by showing the time saving enabled by the tool. Our work offers operational insights into independent, theoretical replications. These insights, we believe, can advance requirements engineering research toward an empirically backed body of knowledge. © 2016 IEEE.},
  affiliation         = {Department of Electrical Engineering and Computing Systems, University of Cincinnati, United States; University of Cincinnati Libraries, University of Cincinnati, United States; Software Architecture, Roche Diagnostics, Switzerland},
  art_number          = {7765524},
  author_keywords     = {case study; i∗; model merging; Replication; Scholar@UC; tech transfer; theoretical replication; viewpoints},
  document_type       = {Conference Paper},
  doi                 = {10.1109/RE.2016.46},
  funding_details     = {61375053, NSFC, National Natural Science Foundation of China},
  funding_text        = {We thank all the management and staff at Scholar@UC for allowing us to conduct this case study, and especially to Ted Baldwin, Eira Tansey, Thomas Scherz, Glen Horton, Sean Crowe, James Van Mil, Carolyn Hansen, Arlene Johnson, and Elizabeth Meyer for providing valuable feedback in the stakeholder meeting and via the online new requirements survey. We also thank Wentao Wang for assisting with data analysis. The work is funded in part by the U.S. National Science Foundation (Award CCF 1350487) and the National Natural Science Foundation of China (Fund No. 61375053).},
  isbn                = {9781509041213},
  journal             = {Proceedings - 2016 IEEE 24th International Requirements Engineering Conference, RE 2016},
  keywords            = {Merging, Model merging; Replication; Scholar@UC; tech transfer; theoretical replication; viewpoints, Requirements engineering},
  language            = {English},
  references          = {Shull, F., Carver, J.C., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empirical Software Engineering, 13 (2), pp. 211-218. , April; Penzenstadler, B., Eckhardt, J., Fernández, D.M., Two replication studies for evaluating artefact models in RE: Results and lessons learnt (2013) RESER, pp. 66-75; Lung, J., Aranda, J., Easterbrook, S., Wilson, G., On the difficulty of replicating human subjects studies in software engineering (2008) ICSE, pp. 191-200; Callele, D., Wnuk, K., Borg, M., Confounding factors when conducting industrial replications in requirements engineering (2013) CESI, pp. 55-58; Wieringa, R., Empirical research methods for technology validation: Scaling up to practice (2014) Journal of Systems and Software, 95, pp. 19-31. , September; Fernández, D.M., Lochmann, K., Penzenstadler, B., Wagner, S., A case study on the application of an artefact-based requirements engineering approach (2011) EASE, pp. 104-113; Yin, R.K., (2003) Case Study Research: Design and Methods, , Sage; Nattoch Dag, J., Thelin, T., Regnell, B., An experiment on linguistic tool support for consolidation of requirements from multiple sources in market-driven product development (2006) Empirical Software Engineering, 11 (2), pp. 303-329. , June; Wnuk, K., Höst, M., Regnell, B., Replication of an experiment on linguistic tool support for consolidation of requirements from multiple sources (2012) Empirical Software Engineering, 17 (3), pp. 305-344. , June; Sjøberg, D.I.K., Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanović, A., Liborg, N.-K., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE Transactions on Software Engineering, 31 (9), pp. 733-753. , September; Easterbrook, S., Yu, E., Aranda, J., Fan, Y., Horkoff, J., Leica, M., Qadir, R.A., Do viewpoints lead to better conceptual models? An exploratory case study (2005) RE, pp. 199-208; Niu, N., Savolainen, J., Yu, Y., Variability modeling for product line viewpoints integration (2010) COMPSAC, pp. 337-346; Ernst, N., Borgida, A., Jureta, I., Finding incremental solutions for evolving requirements (2011) RE, pp. 15-24; Valença, G., Alves, C., Alves, V., Niu, N., A systematic mapping study on business process variability (2013) International Journal of Computer Science & Information Technology, 5 (1), pp. 1-21. , February; Niu, N., Savolainen, J., Niu, Z., Jin, M., Cheng, J.-R.C., A systems approach to product line requirements reuse (2014) IEEE Systems Journal, 8 (3), pp. 827-836. , September; Chang, S.-F., Hsieh, P.-J., Chen, H.-F., Key success factors for clinical knowledge management systems: Comparing physician and hospital manager viewpoints (2015) Technology and Health Care, 24 (S1), pp. 297-306. , December; Brooks, A., Roper, M., Wood, M., Daly, J., Miller, J., Replication's role in software engineering (2008) Guide to Advanced Empirical Software Engineering, pp. 365-379. , F. Shull, J. Singer, and D. I. K. Sjøberg, Eds. Springer; (2016) Physicist Reacts to Discovery of Gravitational Waves, , http://www.npr.org/2016/02/11/466458500/physicistreacts-to-discovery-of-gravitational-waves, February 11; Da Silva, F.Q.B., Suassuna, M., França, A.C.C., Grubb, A.M., Gouveia, T.B., Monteiro, C.V.F., Dos Santos, I.E., Replication of empirical studies in software engineering research: A systematic mapping study (2014) Empirical Software Engineering, 19 (3), pp. 501-557. , June; Gómez, O.S., Juristo, N., Vegas, S., Replications types in experimental disciplines (2010) ESEM; Mendonça, M.G., Maldonado, J.C., De Oliveira, M.C.F., Carver, J., Fabbri, S.C.P.F., Shull, F., Travassos, G.H., Basili, V.R., A framework for software engineering experimental replications (2008) ICECCS, pp. 203-212; Juristo, N., Vegas, S., The role of non-exact replications in software engineering experiments (2011) Empirical Software Engineering, 16 (3), pp. 295-324. , June; Krein, J.L., Knutson, C.D., A case for replication: Synthesizing research methodologies in software engineering (2010) RESER; Jackson, M., The meaning of requirements (1997) Annals of Software Engineering, 3 (1), pp. 5-21. , January; Chen, X., Jin, Z., Capturing requirements from expected interactions between software and its interactive environment: An ontology based approach (2016) International Journal of Software Engineering and Knowledge Engineering, 26 (1), pp. 15-40. , February; Nuseibeh, B., Kramer, J., Finkelstein, A., A framework for expressing the relationships between multiple views in requirements specification (1994) IEEE Transactions on Software Engineering, 20 (10), pp. 760-773. , October; Yu, E., Towards modeling and reasoning support for early-phase requirements engineering (1997) RE, pp. 226-235; (2016), http://istar.rwth-aachen.de/tikiindex.php?page=i+Tools, i∗ Tools, Last accessed: July(2016), https://se.cs.toronto.edu/trac/ome/wiki/WikiStart, Last accessed: JulyHorkoff, J., Yu, E., Interactive goal model analysis for early requirements engineering (2016) Requirements Engineering, 21 (1), pp. 29-61. , March; (2016), https://scholar.uc.edu, Last accessed: July(2016), https://github.com/uclibs/scholaruc, Last accessed: July(2016), https://github.com/uclibs/scholarusecases, Last accessed: JulyCohn, M., (2004) User Stories Applied: For Agile Software Development, , Addison-Wesley Professional; Moody, D.L., Heymans, P., Matulevicius, R., Improving the effectiveness of visual representations in requirements engineering: An evaluation of i∗ visual syntax (2009) RE, pp. 171-180; Niu, N., Khatwani, C., (2016), http://dx.doi.org/doi:10.7945/C25K5P, Hosted on Scholar@UC: https://scholar.uc.edu/show/05741s72s, Last accessed: JulyMylopoulos, J., Castro, J., Kolp, M., The evolution of Tropos (2013) Seminal Contributions to Information Systems Engineering, pp. 281-287. , J. Bubenko et al., Ed. Springer; Sunkle, S., Rathod, H., Visual and ontological modeling support for extended enterprise models (2014) CAiSE Forum, pp. 193-200; Niu, N., Easterbrook, S., Analysis of early aspects in requirements goal models: A concept-driven approach (2007) Transactions on Aspect-Oriented Software Development, 3, pp. 40-72; Almeida, C., Goulão, M., Araújo, J., A systematic comparison of i∗ modelling tools based on syntactic and well-formedness rules (2013) Istar, pp. 43-48; Horkoff, J., Yu, E., Analyzing goal models: Different approaches and how to choose among them (2011) SAC, pp. 675-682; Massey, A.K., Rutledge, R.L., Antón, A.I., Swire, P.P., Identifying and classifying ambiguity for regulatory requirements (2014) RE, pp. 83-92; Reddivari, S., Asaithambi, A., Niu, N., Wang, W., Xu, L.D., Cheng, J.-R.C., Ethnographic field work in requirements engineering Enterprise Information Systems, , (accepted); Niu, N., Lopez, A.Y., Cheng, J.-R.C., Using soft systems methodology to improve requirements practices: An exploratory case study (2011) IET Software, 5 (6), pp. 487-495. , December; Easterbrook, S., Singer, J., Storey, M.-A., Damian, D., Selecting empirical methods for software engineering research (2008) Guide to Advanced Empirical Software Engineering, pp. 285-311. , F. Shull, J. Singer, and D. I. K. Sjøberg, Eds. Springer},
  review              = {{CS C2}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007190459&doi=10.1109%2fRE.2016.46&partnerID=40&md5=0d7c75e802f3f07d21692e4871c81c3a},
}

@Conference{Parrilla20154,
  author                  = {Parrilla, A.S.},
  title                   = {Joint analysis of families of SE experiments},
  year                    = {2015},
  editor                  = {Franch X., Baldassarre M.T.},
  volume                  = {1469},
  pages                   = {4-9},
  publisher               = {CEUR-WS},
  note                    = {cited By 0; Conference of 13th International Doctoral Symposium on Empirical Software Engineering, IDoESE 2015 - As part of the Empirical Software Engineering International Week 2015, ESEIW 2015 ; Conference Date: 21 October 2015; Conference Code:117635},
  abbrev_source_title     = {CEUR Workshop Proc.},
  abstract                = {Context: Replication is of paramount importance for building solid theories in experimental disciplines and is a cornerstone of the evolution of science. Over the last few years, the role of replication in software engineering (SE), families of experiments and the need to aggregate the results of groups of experiments have attracted special attention. Frameworks, taxonomies, processes, recommendations and guidelines for reporting replications have been proposed to support the replication of SE experiments. There has been much less debate about the issue of the joint analysis of replications whose raw data are available to experimenters. Objectives: The aim of our research is to explore current trends in the joint analysis of SE experiments whose raw data are available to experimenters. Notice that the fact that experimenters have access to the raw data is what differentiates joint analysis from other methods for aggregating experimental results (e.g. systematic literature review (SLR), where the applicability of meta-analysis techniques is widely accepted). The objective of this three-year investigation is to shed light on the best joint analysis approach when the experimenters have access to raw data from several replications. Method: Narrative comparison, standard frequentist methods, meta-analysis and Bayesian methods have been used in SE literature. We will apply and evaluate each approach to the experiments on Test-Driven Development (TDD) carried out within the Experimental Software Engineering Industrial Laboratory (ESEIL) project. We will propose and rate a tentative framework for aggregating results within the ESEIL project. The proposed framework, as well as the different existing methods, will be evaluated on another set of replications of testing technique experiments. Current status: The thesis proposal was elicited on the 15 January 2015 and rounded out over the following six months. As a three-year thesis, its discussion and findings will be projected across the years 2015, 2016 and 2017. The first results are now being aggregated with the data from four different experiments on TDD (two in academia and two in industry), and preliminary results are expected to be available in October 2015. © 2015 for this paper by its authors.},
  affiliation             = {Department of Information Processing Science, University of Oulu, Finland},
  author_keywords         = {Family of experiments; Joint analysis; Raw data; Se replication},
  correspondence_address1 = {Parrilla, A.S.; Department of Information Processing Science, University of OuluFinland; email: adrian.santos.parrilla@oulu.fi},
  document_type           = {Conference Paper},
  issn                    = {16130073},
  journal                 = {CEUR Workshop Proceedings},
  keywords                = {Aggregates; Bayesian networks; Computer programming; Software engineering, Bayesian methods; Experimental software engineering; Frequentist methods; Joint analysis; Raw data; Systematic literature review (SLR); Test driven development; Testing technique, Software testing},
  language                = {English},
  references              = {Abrahao, S., Gravino, C., Insfran, E., Scanniello, G., Tortora, G., Assessing the effectiveness of sequence diagrams in the comprehension of functional requirements: Results from a family of five experiments (2013) Software Engineering, IEEE Transactions on, 39 (3), pp. 327-342; Baron, R.M., Kenny, D.A., The moderator-mediator variable distinction in social psychological research: Conceptual, strategic, and statistical considerations (1986) Journal of Personality and Social Psychology, 51 (6), p. 1173; Basili, V.R., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) Software Engineering, IEEE Transactions on, 25 (4), pp. 456-473; Borenstein, M., Hedges, L.V., Higgins, J.P., Rothstein, H.R., (2011) Introduction to Meta-Analysis, , John Wiley & Sons; Brooks, A., Meta analysis-a silver bullet-for meta-analysts (1997) Empirical Software Engineering, 2 (4), pp. 333-338; Ciolkowski, M., What do we know about perspective-based reading? An approach for quantitative aggregation in software engineering (2009) Proceedings of the 2009 3rd International Symposium on Empirical Software Engineering and Measurement, pp. 133-144. , October IEEE Computer Society; Cooper, H., Patall, E.A., The relative benefits of meta-analysis conducted with individual participant data versus aggregated data (2009) Psychological Methods, 14 (2), p. 165; Cumming, G., (2012) Understanding the New Statistics: Effect Sizes, Confidence Intervals, and Meta-analysis, , Routledge; Da Silva, F.Q., Suassuna, M., França, A.C.C., Grubb, A.M., Gouveia, T.B., Monteiro, C.V., Dos Santos, I.E., Replication of empirical studies in software engineering research: A systematic mapping study (2014) Empirical Software Engineering, 19 (3), pp. 501-557; Dieste, O., Fernández, E., Garcia Martinez, R., Juristo, N., Comparative analysis of meta-analysis methods: When to use which? (2011) Evaluation & Assessment in Software Engineering (EASE 2011), 15th Annual Conference on, pp. 36-45. , April IET; Gómez, O.S., Juristo, N., Vegas, S., Understanding replication of experiments in software engineering: A classification (2014) Information and Software Technology, 56 (8), pp. 1033-1048; Gurevitch, J., Hedges, L.V., Statistical issues in ecological meta-analyses (1999) Ecology, 80 (4), pp. 1142-1149; Hannay, J.E., Dybå, T., Arisholm, E., Sjøberg, D.I., The effectiveness of pair programming: A meta-analysis (2009) Information and Software Technology, 51 (7), pp. 1110-1122; Hayes, W., Research synthesis in software engineering: A case for meta-analysis (1999) Software Metrics Symposium, 1999. Proceedings. Sixth International, pp. 143-151. , IEEE; Hedges, L.V., Olkin, I., (2014) Statistical Method for Meta-analysis, , Academic press; Hedges, L.V., Tipton, E., Johnson, M.C., Robust variance estimation in meta-regression with dependent effect size estimates (2010) Research Synthesis Methods, 1 (1), pp. 39-65; Krein, J.L., Prechelt, L., Juristo, N., Nanthaamornphong, A., Carver, J.C., Vegas, S., Knutson, C.D., Egget, D.L., A multi-site joint replication of a design patterns experiment using moderator variables to generalize across contexts Software Engineering, IEEE Transactions, , Under review; Krein, J.L., Prechelt, L., Juristo, N., Seppi, K.D., Nanthaamornphong, A., Carver, J.C., Vegas, S., Knutson, C.D., A method for generalizing across contexts in software engineering experiments Software Engineering, IEEE Transactions, , Submitted; Juristo, N., Vegas, S., The role of non-exact replications in software engineering experiments (2011) Empirical Software Engineering, 16 (3), pp. 295-324; Juristo, N., Vegas, S., Solari, M., Abrahao, S., Ramos, I., Comparing the effectiveness of equivalence partitioning, branch testing and code reading by stepwise abstraction applied by subjects (2012) Software Testing, Verification and Validation (ICST), 2012 IEEE Fifth International Conference on, pp. 330-339. , April IEEE; Kalaian, H.A., Raudenbush, S.W., A multivariate mixed linear model for meta-analysis (1996) Psychological Methods, 1 (3), p. 227; Kitchenham, B., The role of replications in empirical software engineering-a word of warning (2008) Empirical Software Engineering, 13 (2), pp. 219-221; Lindsay, R.M., Ehrenberg, A.S., The design of replicated studies (1993) The American Statistician, 47 (3), pp. 217-228; Miller, J., Applying meta-analytical procedures to software engineering experiments (2000) Journal of Systems and Software, 54 (1), pp. 29-39; Pickard, L.M., Kitchenham, B.A., Jones, P.W., Combining empirical results in software engineering (1998) Information and Software Technology, 40 (14), pp. 811-821; Rafique, Y., Misic, V., The effects of test-driven development on external quality and productivity: A meta-analysis (2013) Software Engineering, IEEE Transactions on, 39 (6), pp. 835-856; Runeson, P., Stefik, A., Andrews, A., Variation factors in the design and analysis of replicated controlled experiments (2014) Empirical Software Engineering, 19 (6), pp. 1781-1808; Sjøberg, D.I., Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanovic, A., Liborg, N.K., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) Software Engineering, IEEE Transactions on, 31 (9), pp. 733-753; Succi, G., Spasojevic, R., Hayes, J.J., Smith, M.R., Pedrycz, W., Application of statistical meta-analysis to software engineering metrics data (2000) InProceedings of the World Multiconference on Systemics, Cybernetics and Informatics, 1, pp. 709-714; Succi, G., Spasojevic, R., Hayes, J.J., Smith, M.R., Pedrycz, W., Application of statistical meta-analysis to software engineering metrics data (2000) Proceedings of the World Multiconference on Systemics, Cybernetics and Informatics, 1, pp. 709-714; Vegas, S., Dieste, O., Juristo, N., Difficulties in running experiments in the software industry: Experiences from the trenches (2015) Conducting Empirical Studies in Industry (CESI), 2015 IEEE/ACM 3rd International Workshop on, pp. 3-9. , 18-18 May},
  review                  = {{E C5 C8}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954476854&partnerID=40&md5=5b898b07de1f9f66f83f3ddb8da1f951},
}

@Conference{Penzenstadler2013267,
  author                  = {Penzenstadler, B. and Fernandez, D.M. and Eckhardt, J.},
  title                   = {Understanding the impact of artefact-based RE - Design of a replication study},
  year                    = {2013},
  pages                   = {267-270},
  address                 = {Baltimore, MD},
  note                    = {cited By 5; Conference of 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM 2013 ; Conference Date: 10 October 2013 Through 11 October 2013; Conference Code:102346},
  abbrev_source_title     = {Int. Symp. Empir. Softw. Eng. Meas.},
  abstract                = {Artefact-based requirements engineering (RE) describes the idea of establishing a company-wide RE reference model by putting the focus on the RE artefacts and their dependencies rather than dictating a strict process with interconnected methods. Previously conducted case studies already strengthen our confidence in certain advantages and shortcomings of the paradigm. Still, our case studies by now remain isolated focussing on particular socio-economic contexts and, thus, the findings can hardly be generalised. Therefore, we need further replications. In this paper, we contribute the design of a replication case study to better understand the impact of artefact-based requirements engineering and, as a long term goal, strengthen an initial theory of expectation we could already infer from results and experiences we made in previous case studies. The replications shall lead to a reliable empirical base due to comparability among the studies. This allows for a (still restricted) generalisability of conclusions on artefact-based requirements engineering. © 2013 IEEE.},
  affiliation             = {Institute for Software Research, University of California, Irvine, United States; Institut für Informatik, Technische Universität München, Germany},
  art_number              = {6681363},
  author_keywords         = {artefact; artefact model; case study; evaluation; model-based; replication; requirements},
  correspondence_address1 = {Institute for Software Research, University of California, IrvineUnited States},
  document_type           = {Conference Paper},
  doi                     = {10.1109/ESEM.2013.46},
  issn                    = {19493770},
  journal                 = {International Symposium on Empirical Software Engineering and Measurement},
  keywords                = {artefact; evaluation; model-based; replication; requirements, Requirements engineering; Software engineering, Research},
  language                = {English},
  references              = {Berenbach, B., Paulish, D., Kazmeier, J., Rudorfer, A., (2009) Software &Systems Requirements Engineering: In Practice, , McGraw-Hill, Inc; Gomez, O.S., Juristo, N., Vegas, S., Replication types in experimental disciplines (2012) ESEM'12, pp. 1-10; Lindlof, T.R., Taylor, B.C., (2002) Qualitative Communication Research Methods, , Sage Publ., Thousand Oaks, Calif, 2nd ed. edition; Mendez Fernandez, D., Kuhrmann, M., (2009) Artefact-Based Requirements Engineering and Its Integration into A Process Framework, , Technical Report TUM-I0929, Technische Universiẗat M̈unchen; Mendez Fernandez, D., Lochmann, K., Penzenstadler, B., Wagner, S., A case study on the application of an artefact-based requirements engineering approach (2011) EASE'11, pp. 104-113. , IET; Mendez Fernandez, D., Penzenstadler, B., Kuhrmann, M., Broy, M., A meta model for artefact-orientation: Fundamentals and lessons learned in requirements engineering (2010) MoDELS'10, 6395, pp. 183-197. , In D. Petriu, N. Rouquette, and O. Haugen, editors, Springer; Penzenstadler, B., Eckhardt, J., A requirements engineering content model for cyber-physical systems (2012) RE'12; Runeson, P., Host, M., Guidelines for conducting and reporting case study research in software engineering (2009) Empirical Softw. Engg., 14 (2), pp. 131-164. , April},
  review                  = {{CS C2 C8}},
  source                  = {Scopus},
  sponsors                = {Experimental Software Engi. Group at; COPPE/Federal University of Rio de Janeiro; Fraunhofer Center for Experimental Software Eng.; IEEE Software; Microsoft Research},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893249064&doi=10.1109%2fESEM.2013.46&partnerID=40&md5=1961c65d152693a077bbb5b5bbef3b82},
}

@Conference{Penzenstadler201366,
  author              = {Penzenstadler, B. and Eckhardt, J. and Fernández, D.M.},
  title               = {Two replication studies for evaluating artefact models in RE: Results and lessons learnt},
  year                = {2013},
  pages               = {66-75},
  address             = {Baltimore, MD},
  publisher           = {IEEE Computer Society},
  note                = {cited By 5; Conference of 2013 3rd International Workshop on Replication in Empirical Software Engineering Research, RESER 2013 ; Conference Date: 9 October 2013 Through 9 October 2013; Conference Code:101995},
  abbrev_source_title = {Proc. - Int. Workshop Replication Empir. Softw. Eng. Res., RESER},
  abstract            = {Artefact-based requirements engineering (RE) describes the idea of establishing a company-wide reference model by putting the focus on the RE artefacts and their dependencies rather than dictating a strict process with interconnected methods. Although we could make first empirical studies on the benefits and shortcomings of artefact-based RE, however, we still have little evidence for our first results. The reason is that the conducted case studies focus on the isolated application of artefact-based RE approaches in individual socio-economic contexts and, thus, the findings can hardly be generalised. The contribution of this paper is to report on two conducted replication studies to strengthen our confidence on the benefits and shortcomings of applying artefact orientation in RE. To this end, we replicated an industrial case study with partners from two companies. Those replications form part of a research project where all partners are working with the same artefact-based RE approach and its tool-supported realisation. Our results give deeper insights into artefact-based RE and contribute to a reliable database due to comparability among the studies. This allows for first conclusions on the actual impact artefact orientation has on RE. © 2013 IEEE.},
  affiliation         = {Institute for Software Research, University of California, Irvine, CA, United States; Institut für Informatik, Technische Universität München, Germany},
  art_number          = {6664733},
  author_keywords     = {Artefact Orientation; Case Study; Evaluation Research; Replication Study; Requirements Engineering},
  document_type       = {Conference Paper},
  doi                 = {10.1109/RESER.2013.17},
  isbn                = {9780769551210},
  journal             = {Proceedings - 2013 3rd International Workshop on Replication in Empirical Software Engineering Research, RESER 2013},
  keywords            = {Industrial applications; Industry; Requirements engineering; Software engineering, Empirical studies; Evaluation research; Industrial case study; Reference modeling; Replication study; Socio-economics, Research},
  language            = {English},
  references          = {Berenbach, B., Paulish, D., Kazmeier, J., Rudorfer, A., Software & Systems Requirements Engineering (2009) Practice, , McGraw-Hill, Inc; Brooks, A., Roper, M., Wood, M., Daly, J., Miller, J., Replication's role in software engineering (2008) Guide to Advanced Empirical Software Engineering, pp. 365-379. , Forrest Shull, Janice Singer, and DagI.K. Sjberg, editors, Springer London; Campbell, D.T., Stanley, J.C., Gage, N.L., (1963) Experimental and Quasi-experimental Designs for Research, , Houghton Mifflin Boston; Condori-Fernandez, N., Daneva, M., Sikkel, K., Wieringa, R., Dieste, O., Pastor, O., A systematic mapping study on empirical evaluation of software requirements specifications techniques (2009) Proceedings of the 3rd International Symposium on Empirical Software Engineering and Measurement, pp. 502-505; Gómez, O.S., Juristo, N., Vegas, S., Replications types in experimental disciplines (2010) Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, p. 3. , ACM; Juristo, N., Vegas, S., Using differences among replications of software engineering experiments to gain knowledge (2009) International Conference on Empirical Software Engineering and Measurement (ESEM), , Invited Talk from the; Mendez Fernandez, D., Lochmann, K., Penzenstadler, B., Wagner, S., A Case Study on the Application of an Artefact-Based Requirements Engineering Approach (2011) Proceedings of the 15th Annual Conference on Evaluation and Assessment in Software Engineering (EASE 2011), pp. 104-113. , Institution of Engineering and Technology (IET); Mendez Fernandez, D., Penzenstadler, B., Kuhrmann, M., Broy, M., A Meta Model for Artefact-Orientation: Fundamentals and Lessons Learned in Requirements Engineering (2010) Proceedings of the 13th International Conference on Model Driven Engineering Languages and Systems (Models), 6395, pp. 183-197. , D. Petriu, N. Rouquette, and O. Haugen, editors, Springer-Verlag Berlin Heidelberg; Penzenstadler, B., Eckhardt, J., A requirements engineering content model for cyber-physical systems (2012) Requirements Engineering for Systems, Services and Systems-of-Systems (RES4), 2012 IEEE Second Workshop on, pp. 20-29. , sept; Penzenstadler, B., Mendez Fernandez, D., Eckhardt, J., Understanding the Impact of Artefact-based RE - Design of a Replication Study International Symposium on Empirical Software Engineering and Measurement, 2013, , http://www4.in.tum.de/~penzenst/sources/ESEM13.pdf, under review, available for reviewers at; Penzenstadler, B., Sikora, E., Pohl, K., A Requirements Reference Model for Model-based Requirements Engineering in the Automotive Domain (2009) Proceedings of the 15th International Working Conference on Requirements Engineering: Foundation for Software Quality (REFSQ 09), 5512, pp. 212-217. , M. Glinz and P. Heymans, editors, Springer-Verlag Berlin Heidelberg; Popper, K., (1959) The Logic of Scientific Discovery, , Hutchinson & Co; Runeson, P., Höst, M., Guidelines for conducting and reporting Case Study Research in Software Engineering (2009) Empirical Software Engineering, 14 (2), pp. 131-164; Shull, F., Basili, V., Carver, J., Maldonado, J.C., Travassos, G.H., Mendonça, M., Fabbri, S., Replicating software engineering experiments: Addressing the tacit knowledge problem (2002) Empirical Software Engineering, 2002. Proceedings. 2002 International Symposium n, pp. 7-16. , IEEE},
  review              = {{CS C2}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892621378&doi=10.1109%2fRESER.2013.17&partnerID=40&md5=1e43dc0b9527a3655f1c8a9fb4258aed},
}

@Article{Pow-Sang2016189,
  author                  = {Pow-Sang, J.A.},
  title                   = {Evaluating and comparing perceptions between undergraduate students and practitioners in controlled experiments for requirements prioritization},
  journal                 = {Advances in Intelligent Systems and Computing},
  year                    = {2016},
  volume                  = {405},
  pages                   = {189-199},
  issn                    = {21945357},
  note                    = {cited By 0; Conference of 4th International Conference on Software Process Improvement, CIMPS 2015 ; Conference Date: 28 October 2015 Through 30 October 2015; Conference Code:153349},
  abbrev_source_title     = {Adv. Intell. Sys. Comput.},
  abstract                = {The Use Case Precedence Diagram (UCPD) is a technique that addresses the problem of determining the construction sequence or prioritization of a software product from the developer’s perspective in software development projects. This paper presents a perceptions evaluation of the UCPD based on the Method Evaluation Model (MEM), where the intention to use a method is determined by the users’ perceptions. Perceptions were collected using a questionnaire which was applied immediately after the controlled experiments were carried out. Those controlled experiments were replicated twice with undergraduate students, and twice with practitioners. The results show that the intentions to use UCPD exist in undergraduate students and practitioners with at least 2 years of experience in the industry, but the relationships defined by the MEM are best confirmed with the results obtained with practitioners. © Springer International Publishing Switzerland 2016.},
  affiliation             = {Departamento de Ingeniería, Pontificia Universidad Católica del Perú, Av. Universitaria 1801, San Miguel, Lima 32, Peru},
  author_keywords         = {Method adoption model; Method evaluation model; Requirements precedence; Requirements prioritization; Software engineering experimentation; UCPD},
  correspondence_address1 = {Pow-Sang, J.A.; Departamento de Ingeniería, Pontificia Universidad Católica del Perú, Av. Universitaria 1801, Peru; email: japowsang@pucp.edu.pe},
  document_type           = {Conference Paper},
  doi                     = {10.1007/978-3-319-26285-7_16},
  editor                  = {Mejia J., Munoz M., Rocha A., Calvo-Manzano J.},
  isbn                    = {9783319262833},
  keywords                = {Application programs; Education; Process engineering; Software design; Software engineering, Adoption model; Method evaluation; Requirements precedence; Requirements prioritization; UCPD, Students},
  language                = {English},
  publisher               = {Springer Verlag},
  references              = {Pow-Sang, J.A., Nakasone, A., Imbert, R., Moreno, A.M., An approach to determine software requirement construction sequences based on use cases (2008) Proceedings Advanced Software Engineering and Its Applications-Asea, p. 2008. , Sanya, China), IEEE Computer Society; Jacobson, I., (1992) Object-Oriented Software Engineering. A Use Case Driven Approach, , Addison-Wesley, Reading; Rosenberg, D., Scott, K., (1999) Use Case Driven Object Modeling with UML, , Addison-Wesley, Massachusets; Pow-Sang, J.A., Imbert, R., Moreno, A.M., A replicated experiment with undergraduate students to evaluate the applicability of a use case precedence diagram based approach in software projects (2011) Commun. Comput. Inf. Sci, 257, pp. 169-179. , Springer-Verlag; Pow-Sang, J.A., (2012) Técnicas Para La Estimación Y Planificación De Proyectos De Software Con Ciclos De Vida Incremental Y Paradigma Orientado a Objetos, , http://oa.upm.es/10266/2/tesis-final-japowsang.pdf, PhD thesis, Universidad Politécnica de Madrid; Moody, D.L., (2001) Dealing with Complexity: A Practical Method for Representing Large Entity Relationship Models, , PhD. Thesis, Department of Information Systems, University of Melbourne, Australia; Davis, F.D., Perceived usefulness, perceived ease of use and user acceptance of information technology (1989) MIS Q, 13 (3), pp. 319-340; Adams, D., Nelson, R., Todd, P., Perceived usefulness, ease of use, and usage of information technology: A replication (1993) MIS Q, 16 (2), pp. 227-247. , (USA); Abrahão, S., (2004) On the Functional Size Measurement of Object-Oriented Conceptual Schemas: Design and Evaluation Issues, , PhD Thesis, Department of Information Systems and Computation, Valencia University of Technology, October; Condori, N., (2007) Un Procedimiento De Medición De Tamaño Funcional Para Especificaciones De Requisitos, , PhD Thesis, Department of Information Systems and Computation, Valencia University of Technology; Poels, G., Maes, A., Gailly, F., Paemeleire, R., Measuring user beliefs and attitudes towards conceptual schemas: Tentative factor and structural equation model (2005) Fourth Annual Workshop on HCI Research in MIS, , December; Basili, V.R., Caldiera, G., Rombach, H.D., Goal question metric paradigm (1994) ) Encyclopedia of Software Engineering, , In: Marciniak, J. J. (ed., Wiley, New York; Likert, R., (1931) A Technique for the Measurement of Attitudes. Archives of Psychology, , Columbia University Press, New York; Cepeda, M.S., Chapman, C.R., Miranda, N., Sanchez, R., Rodriguez, C.H., Restrepo, A.E., Ferrer, L.M., Carr, D.B., Emotional disclosure through patient narrative may improve pain and well-being: Results of a randomized controlled trial in patients with cancer pain (2008) J. Pain Symptom Manage, 35 (6), pp. 623-631. , June, Elsevier; Davey, H.M., Barratt, A.L., Butow, P.N., Deeks, J.J., A one-item question with a Likert or visual analog scale adequately measured current anxiety (2007) J. Clin. Epidemiol, 60, pp. 356-360. , Elsevier; Temel, J.S., Pirl, W.F., Recklitis, C.J., Feasibility and validity of a one-item fatigue screen in a thoracic oncology clinic (2006) J. Thoracyc Oncol, 1 (5). , June, Lippincott Williams & Wilkins; Shapiro, S., Wilk, B., An Analysis of variance test for normality (Complete samples) (1965) Biometrika, 52 (3-4), pp. 591-611. , http://www.jstor.org/stable/2333709; Wilcoxon, F., Individual comparisons by ranking methods (1945) Biometrics Bull, 1 (6), pp. 80-83. , http://www.jstor.org/stable/3001968, Dec; Muijs, D., (2004) Doing Quantitative Research in Education with SPSS, , Sage Publications, London; McCullagh, P., Nelder, J.A., (1989) Generalized Linear Models, , 2nd edn. Chapman & Hall, London; Carver, J., Jaccheri, L., Morasca, S., Issues in using students in empirical studies in software engineering education (2003) METRICS’03, 239p. , IEEE Computer Society, USA},
  review                  = {{E C2 C3}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983110938&doi=10.1007%2f978-3-319-26285-7_16&partnerID=40&md5=5b20498c21a9393c31f09896cdd41a70},
}

@Conference{Quesada-López2016214,
  author              = {Quesada-López, C. and Madrigal, D. and Jenkins, M.},
  title               = {An empirical evaluation of automated function points},
  year                = {2016},
  editor              = {Hinojosa C., Gomez O., Cares C., Lopez L., Marczak S., Carvallo J.P., Santos G., Conte T., Solari M., Kalinowski M., Panach I., Fonseca C. E.R., Almentero E.K.},
  pages               = {214-228},
  publisher           = {Universidad de las Fuerzas Armadas ESPE},
  note                = {cited By 0; Conference of 19th Ibero-American Conference on Software Engineering, CIBSE 2016 ; Conference Date: 27 April 2016 Through 29 April 2016; Conference Code:123413},
  abbrev_source_title = {CIBSE - XIX Ibero-Am. Conf. Softw. Eng.},
  abstract            = {Background: Function point analysis (FPA) has become widely used to measure software functional size in the industry. FPA is usually performed manually, which is a time consuming and expensive process. Automated Function Point (AFP) specification states the guidelines for automating FPA counting from software source code, generally consistent with current FPA practices. Objective: This paper analyzes the relationships between FPA and AFP measures and measurement process. This includes total function points and basic functional components (BFC) size. The goals are to evaluate accuracy, reproducibility, perceived ease of use, usefulness, and intention to use and to understand the nature of the differences between measures. Method: A controlled experiment was conducted to evaluate the FPA and AFP measurement process with 14 participants (E1). We have subsequently conducted two replications of the original experiment with 12 participants each (E2 and E3). Statistical analyses were conducted to find differences between the methods regarding effectiveness and adoption properties. Results: Participants using FPA performed as well as participants using AFP to measure total functional size. Treatment and control groups did not differ significantly in terms of accuracy and reproducibility (p<0.05) throughout E1, E2 and E3. FPA presented similar accuracy to AFP for each replication. Participants between experiments performed different; data function (DF) results show an important difference between methods. Conclusions: The results confirm the potential for developing automation tools for function point counting that could produce more consistent measurement results; however, this process should be conducted carefully, depending on the implementation of a given requirements specification, AFP could produce different results. Although encouraging results were obtained, further research is needed to confirm performance results and to draw more conclusions on the perceived adoption properties.},
  affiliation         = {Center for ICT Research, University of Costa Rica, San Pedro, Costa Rica},
  author_keywords     = {AFP; Automated function points; Experimental procedure; FPA; Function point analysis; Function points; Functional size measurement; Replication},
  document_type       = {Conference Paper},
  isbn                = {9789978301814},
  journal             = {CIBSE 2016 - XIX Ibero-American Conference on Software Engineering},
  keywords            = {Automation; Software engineering; Specifications, Automated functions; Experimental procedure; Function point; Function point analysis; Functional Size Measurements; Replication, Function evaluation},
  language            = {English},
  references          = {Lavazza, L., Automated function points: Critical evaluation and discussion (2015) Proceedings of the Sixth International Workshop on Emerging Trends in Software Metrics, pp. 35-43. , May IEEE Press; Quesada-López, C., Jenkins, M., An evaluation of functional size measurement methods (2015) Proceedings of the XVIII Ibero-American Conference on Software Engineering, pp. 151-165. , April; Garmus, D., Herron, D., (2001) Function Point Analysis: Measurement Practices for Successful Software Projects, , Addison-Wesley Longman Publishing Co., Inc; Object Management Group, (2014) Automated Function Points (AFP Version 1.0, , http://www.omg.org/spec/AFP, January OMG Document Number: formal/2014-01-03; Abrahao, S., Poels, G., Pastor, O., Assessing the reproducibility and accuracy of functional size measurement methods through experimentation (2004) Empirical Software Engineering, 2004. ISESE'04, pp. 189-198. , August IEEE; Soubra, H., Abran, A., Ramdane-Cherif, A., Verifying the accuracy of automation tools for the measurement of software with cosmic-iso 19761 including an autosar-based example and a case study (2014) Software Measurement and the International Conference on Software Process and Product Measurement (IWSM-MENSURA), 2014 Joint Conference of the International Workshop on, pp. 23-31. , October IEEE; ISO, (2007) ISO/IEC 14143-1-Information Technology-Software Measurement-Functional Size Measurement. Part 1: Definition of Concepts; Albrecht, A.J., Measuring application development productivity (1979) Proceedings of the Joint IBM Application Development Symposium, 10, pp. 83-92. , October; ISO, (2009) ISO/IEC 20926, Software and Systems Engineering-Software Measurement-IFPUG Functional Size Measurement Method; Jacquet, J.P., Abran, A., From software metrics to software measurement methods: A process model (1997) Software Engineering Standards Symposium and Forum, 1997. Emerging International Standards. ISESS 97, Third IEEE International, pp. 128-135. , June IEEE; Abrahao, S., Poels, G., Pastor, O., Evaluating a functional size measurement method for Web applications: An empirical analysis (2004) Software Metrics, 2004. Proceedings. 10th International Symposium, pp. 358-369. , September IEEE; Quesada-López, C., Jenkins, M., Applying a verification protocol to evaluate the accuracy of functional size measurement procedures: An empirical approach (2015) Product-Focused Software Process Improvement, pp. 243-250. , Springer International Publishing; Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) International Workshop on Replication in Empirical Software Engineering Research, , May Cape Town, South Africa: IEEE; Shull, F.J., Carver, J.C., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empirical Software Engineering, 13 (2), pp. 211-218; Abrahao, S.M., Director-Lopez, O.P., (2004) On the Functional Size Measurement of Object-oriented Conceptual Schemas: Design and Evaluation Issues, , Doctoral dissertation Universidad Politécnica de Valencia Spain; IEEE Computer Society. Software Engineering Standards Committee, & IEEE-SA Standards Board, (1998) IEEE Recommended Practice for Software Requirements Specifications, , Institute of Electrical and Electronics Engineers; Salman, I., Misirli, A.T., Juristo, N., Are students representatives of professionals in software engineering experiments? (2015) Proceedings of the 37th International Conference on Software Engineering, 1, pp. 666-676. , May IEEE Press; ISO, (2003) ISO/IEC TR 14143-3:2003 Information Technology. Software Measurement-Functional Size Measurement-Part 3: Verification of Functional Size Measurement Methods; Davis, F.D., Perceived usefulness, perceived ease of use, and user acceptance of information technology (1989) MIS Quarterly, pp. 319-340},
  review              = {{E C8}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988417768&partnerID=40&md5=2836a6ca14d2eb2d8c9110b245ca9423},
}

@Conference{Quesada-López2015418,
  author              = {Quesada-López, C. and Jenkins, M.},
  title               = {An empirical validation of function point structure and applicability: A replication study},
  year                = {2015},
  editor              = {Matalonga S., Pimentel E., Brito I.S., Araujo J., Miranda J.J., Espana S., Cuadros-Vargas E., Bencomo N., Pastor O., Goulao M., Oliveira T., Condori-Fernandez N., de la Vara J.L., Kalinowski M., Olsina L., Antonelli L., Guizzardi R.},
  pages               = {418-431},
  publisher           = {Ibero-American Conference on Software Engineering},
  note                = {cited By 2; Conference of 18th Ibero-American Conference on Software Engineering, CIBSE 2015 ; Conference Date: 22 April 2015 Through 24 April 2015; Conference Code:112515},
  abbrev_source_title = {CIBSE - Ibero-Am. Conf. Softw. Eng.},
  abstract            = {Background: The complexity of providing accurate software size estimation and effort prediction models is well known in the software industry. Function point analysis (FPA) is currently one of the most accepted software functional size metric in the industry, but it is hardly automatable and generally requires a lengthy and costly process. Objectives: This paper reports on a family of replications carried out on a subset of the ISBSG R12 dataset to evaluate the structure and applicability of function points. The goal of this replication was to aggregate evidence about internal issues of FPA as a metric, and to confirm previous results using a different set of data. First, FPA counting was analyzed in order to determine the extent to which the base functional components (BFC) were independent of each other and thus appropriate for an additive model of size. Second, the correlation between effort and BFCs and unadjusted function points (UFP) were assessed in order to determine whether a simplified sizing metric might be appropriate to simplify effort prediction models. Methods: A subset of 72 business application projects from 2008 to 2011 was analyzed. BFCs, UFP, and effort correlation were studied. Results: The results aggregated evidence and confirmed that some BFCs of the FPA method are correlated. There is a relationship between BFCs and effort. There are correlations between UFP and inputs, enquiries, and internal files, and between BFCs and effort. Internal files and inputs are found to be correlated always, and external interface files are found to be uncorrelated with the others. A prediction model based on transactions and internal files appear to be as good as a model based on UFP. The use of some contexts attributes may improve effort prediction models. Limitations: This is an initial experiment of a research in progress. The limited size and nature of the dataset may influence the results. Conclusions: Our results might suggest an improvement in the performance of the measurement process. Simplifying FPA measurement procedure based on counting a subset of BFCs could improve measurement process efficiency and simplify prediction models. Copyright © 2015 by the authors.},
  affiliation         = {Center for ICT Research, University of Costa Rica, San Pedro, Costa Rica},
  author_keywords     = {Effort prediction; Experiment; Family of replications; Function point analysis},
  document_type       = {Conference Paper},
  isbn                = {9789972825804},
  journal             = {CIBSE 2015 - XVIII Ibero-American Conference on Software Engineering},
  keywords            = {Aggregates; Experiments; Forecasting, Base Functional Component; Effort prediction; Effort prediction model; Family of replications; Function point analysis; Measurement procedures; Software functional size; Software size estimation, Software engineering},
  language            = {English},
  references          = {Peixoto, C.E.L., Audy, J.L.N., Prikladnicki, R., The importance of the use of an estimation process (2010) Proceedings of the 2010 ICSE Workshop on Software Development Governance, pp. 13-17. , May, ACM; Molokken, K., Jorgensen, M., A review of software surveys on software effort estimation (2003) Empirical Software Engineering, 2003. ISESE 2003, pp. 223-230. , October, IEEE; Boehm, B.W., (1981) Software Engineering Economics; Low, G.C., Jeffery, D.R., Function points in the estimation and evaluation of the software process (1990) Software Engineering, IEEE Transactions on, 16 (1), pp. 64-71; Garmus, D., Herron, D., (2001) Function Point Analysis: Measurement Practices for Successful Software Projects, , Addison-Wesley Longman Publishing Co. Inc; Kitchenham, B., Using function points for software cost estimation - some empirical results (1993) 10th Annual Conference of Software Metrics and Quality Assurance in Industry, , Amsterdam, Netherlands; ISO, (2007) Information Technology - Software Measurement - Functional Size Measurement. Part 1: Definition of Concepts, , ISO/IEC 14143-1; Albrecht, A.J., Measuring application development productivity (1979) Proceedings of the Joint SHARE/GUIDE/IBM Application Development Symposium, 10, pp. 83-92. , October. Monterey, CA: SHARE Inc. and GUIDE International Corp; Albrecht, A.J., Gaffney, J.E., Software function, source lines of code, and development effort prediction: A software science validation (1983) Software Engineering, IEEE Transactions on, (6), pp. 639-648; Jeng, B., Yeh, D., Wang, D., Chu, S.L., Chen, C.M., A specific effort estimation method using function point (2011) Journal of Information Science and Engineering, 27 (4), pp. 1363-1376; Jones, T.C., (1998) Estimating Software Costs, , McGraw-Hill, Inc; Kemerer, C.F., An empirical validation of software cost estimation models (1987) Communications of the ACM, 30 (5), pp. 416-429; Kitchenham, B., Kansala, K., Inter-item correlations among function points (1993) Software Engineering, 1993. Proceedings, 15th International Conference on, pp. 477-480. , May. IEEE; Lavazza, L., Morasca, S., Robiolo, G., Towards a simplified definition of Function Points (2013) Information and Software Technology, 55 (10), pp. 1796-1809; Lokan, C.J., (1999) An Empirical Study of the Correlations between Function Point Elements; Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) International Workshop on Replication in Empirical Software Engineering Research, , May, Cape Town, South Africa; Jeffery, D.R., Low, G.C., Barnes, M., A comparison of function point counting techniques (1993) Software Engineering, IEEE Transactions on, 19 (5), pp. 529-532; Jeffery, R., Stathis, J., Function point sizing: Structure, validity and applicability (1996) Empirical Software Engineering, 1 (1), pp. 11-30; Lokan, C.J., (1999) An Empirical Study of the Correlations between Function Point Elements; Quesada-López, C., Jenkins, M., Function point structure and applicability validation using the ISBSG dataset: A replicated study (2014) Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM '14), , Torino, Italy; ISO, (2009) Software and Systems Engineering - Software Measurement - IFPUG Functional Size Measurement Method, , ISO/IEC 20926; Jones, T.C., (1998) Estimating Software Costs, , McGraw-Hill, Inc; Jones, C., Function points as a universal software metric (2013) ACM Software Engineering Notes, 38 (4), pp. 1-27; Hill, P., (2010) Practical Software Project Estimation, , Tata McGraw-Hill Education; Symons, C.R., Function point analysis: Difficulties and improvements (1988) Software Engineering, IEEE Transactions on, 14 (1), pp. 2-11; Conte, M., Iorio, T., Meli, R., Santillo, L., E&Q: An early & Quick approach to functional size measurement methods (2004) Software Measurement European Forum-SMEF, , January; ISO, (2005) ISO/IEC 24570 - Software Engineering - NESMA Functional Size Measurement Method Version 2.1 - Definitions and Counting Guidelines for the Application of Function Point Analysis; Shull, F.J., Carver, J.C., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empirical Software Engineering, 13 (2), pp. 211-218; Mendes, E., Lokan, C., Harrison, R., Triggs, C., A replicated comparison of cross company and within-company effort estimation models using the isbsg database (2005) Software Metrics, 2005. 11th IEEE International Symposium, 10p. , September. IEEE; Cheikhi, L., Abran, A., Promise and ISBSG software engineering data repositories: A survey (2013) Software Measurement and the 2013 Eighth International Conference on Software Process and Product Measurement (IWSM-MENSURA), pp. 17-24. , October. 2013 Joint Conference of the 23rd International Workshop on. IEEE; Dejaeger, K., Verbeke, W., Martens, D., Baesens, B., Data mining techniques for software effort estimation: A comparative study (2012) Software Engineering, IEEE Transactions on, 38 (2), pp. 375-397},
  review              = {{E C8}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936102909&partnerID=40&md5=8ac3f362ca5b73d51172f7c72380be33},
}

@Conference{Reimanis2014,
  author                  = {Reimanis, D. and Izurieta, C. and Luhr, R. and Xiao, L. and Cai, Y. and Rudy, G.},
  title                   = {A replication case study to measure the architectural quality of a commercial system},
  year                    = {2014},
  publisher               = {IEEE Computer Society},
  note                    = {cited By 2; Conference of 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM 2014 ; Conference Date: 18 September 2014 Through 19 September 2014; Conference Code:108081},
  abbrev_source_title     = {Int. Symp. Empir. Softw. Eng. Meas.},
  abstract                = {Context: Long-term software management decisions are directly impacted by the quality of the software's architecture. Goal: Herein, we present a replication case study where structural information about a commercial software system is used in conjunction with bug-related change frequencies to measure and predict architecture quality. Method: Metrics describing history and structure were gathered and then correlated with future bug-related issues; the worst of which were visualized and presented to developers. Results: We identified dependencies between components that change together even though they belong to different architectural modules, and as a consequence are more prone to bugs. We validated these dependencies by presenting our results back to the developers. The developers did not identify any of these dependencies as unexpected, but rather architectural necessities. Conclusions: This replication study adds to the knowledge base of CLIO (a tool that detects architectural degradations) by incorporating a new programming language (C++) and by externally replicating a previous case study on a separate commercial code base. Additionally, we provide lessons learned and suggestions for future applications of CLIO. © 2014 Authors.},
  affiliation             = {Software Engineering Laboratory, Computer Science Dept, Bozeman, MT, United States; Computer Science Dept., Drexel University, Philadelphia, PA, United States; Golden Helix Inc., 203 Enterprise Blvd, Bozeman, MT, United States},
  art_number              = {a31},
  author_keywords         = {architecture quality; case study; grime; modularity violations; replication; static analysis; technical debt},
  correspondence_address1 = {Reimanis, D.; Software Engineering Laboratory, Computer Science DeptUnited States},
  document_type           = {Conference Paper},
  doi                     = {10.1145/2652524.2652581},
  isbn                    = {9781450327749},
  issn                    = {19493770},
  journal                 = {International Symposium on Empirical Software Engineering and Measurement},
  keywords                = {Architectural quality; Commercial systems; grime; modularity violations; replication; Technical debts, Static analysis},
  language                = {English},
  references              = {Baldwin, C., Clark, K., (2000) Design Rules: The Power of Modularity, 1. , MIT Press., Cambridge, MA; Bansiya, J., Davis, C.G., A hierarchical model for object oriented design quality assessment (2002) IEEE Transactions on Software Engineering, 28 (1), pp. 4-17. , (Aug. 2002); Basili, V.R., Selby, R.W., Hutchens, D.H., Experimentation in software engineering (1986) IEEE Transactions on Software Engineering, 12 (7), pp. 733-743. , (July 1986); Brooks, A., Roper, M., Wood, M., Daly, J., Miller, J., Replication's role in software engineering (2008) Guide to Advanced Emprirical Software Engineering, pp. 365-379. , Shull, R, Singer, J., and Sjeberg, D. I. K. Springer London, Springer; Cunningham, W., The wycash portfolio management system (1992) OOPSLA '92 Addendum to the Proceedings on Object-oriented Programming Systems, Languages, and Applications (Dec. 1992). OOPSLA'92, pp. 29-30. , SIGPLANACM, New York, NY; Izurieta, C., Bieman, J., A multiple case study of design pattern decay, grime, and rot in evolving software systems (2013) Software Quality Journal, 21 (2), pp. 289-323. , (June 2013); Juristo, N., Moreno, A.M., (2010) Basics of Software Engineering Experimentation, , (1st ed.). Springer Publishing Company, Incorporated; Kendall, M.G., A new measure of rank correlation (1938) Biometrika, 30, pp. 81-93. , (1938); Ohlsson, N., Alberg, H., Predicting fault-prone software modules in telephone switches (1996) IEEE Transactions on Software Engineering, 22 (12), pp. 886-894. , (Dec. 1996); Ostrand, T.J., Weyuker, E.J., Howto measure success of fault prediction models (2007) Fourth International Workshop on Software Quality Assurance: In Conjunction with the 6th ESEC/FSE Joint Meeting (SOQUA '07), pp. 25-30. , ACM, New York, NY, USA; Ott, R., Longnecker, M., (1993) An Introduction to Statistical Methods and Data Analysis, 4. , Duxbury Press, Belmont, CA; Parnas, D.L., On the criteria to be used in decomposing systems into modules (1972) Commun. ACM, 15 (12), pp. 1053-1058. , (December 1972); Schwanke, R., Xiao, L., Cai, Y., Measuring architecture quality by structure plus history analysis (2013) 2013 35' International Conference on Software Engineering (ICSE) (San Francisco, CA, Mayl8-26 2013). ICSE '13, pp. 891-900. , IEEE, San Francisco, CA; Shull, F.J., Carver, J.C., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empirical Software Engineering, 13 (2), pp. 211-218. , (April 2008); Wohlin, C., Runeson, P., Host, M., Ohlsson, M.C., Regnell, B., Wesslen, A., (2012) Experimentation in Software Engineering, , Springer Berlin Heidelberg; Wong, S., Cai, Y., Kim, M., Dalton, M., Detecting software modularity violations (2011) Proceedings of the 33rd International Conference on Software Engineering (ICSE '11), pp. 411-420. , ACM, New York, NY, USA; Zazworka, N., Vetro, A., Izurieta, C., Wong, S., Cai, Y., Seamon, C., Shull, F., Comparing four approaches for technical debt identification (2013) Software Quality Journal, pp. 1-24. , (April 2013), Springer US},
  review                  = {{CS C8 C11}},
  source                  = {Scopus},
  sponsors                = {IEEE Software; Microsoft Research; Politecnico di Torino; Telecom Italia JOL (Joint Open Lab); Telecom Italia Lab},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907849080&doi=10.1145%2f2652524.2652581&partnerID=40&md5=46c2fda81c43521028d691bcfbb6855b},
}

@Article{Riaz20161,
  author                  = {Riaz, M. and King, J. and Slankas, J. and Williams, L. and Massacci, F. and Quesada-López, C. and Jenkins, M.},
  title                   = {Identifying the implied: Findings from three differentiated replications on the use of security requirements templates},
  journal                 = {Empirical Software Engineering},
  year                    = {2016},
  pages                   = {1-52},
  issn                    = {13823256},
  note                    = {cited By 0; Article in Press},
  abbrev_source_title     = {Empir Software Eng},
  abstract                = {Identifying security requirements early on can lay the foundation for secure software development. Security requirements are often implied by existing functional requirements but are mostly left unspecified. The Security Discoverer (SD) process automatically identifies security implications of individual requirements sentences and suggests applicable security requirements templates. The objective of this research is to support requirements analysts in identifying security requirements by automating the suggestion of security requirements templates that are implied by existing functional requirements. We conducted a controlled experiment in a graduate-level security class at North Carolina State University (NCSU) to evaluate the SD process in eliciting implied security requirements in 2014. We have subsequently conducted three differentiated replications to evaluate the generalizability and applicability of the initial findings. The replications were conducted across three countries at the University of Trento, NCSU, and the University of Costa Rica. We evaluated the responses of the 205 total participants in terms of quality, coverage, relevance and efficiency. We also develop shared insights regarding the impact of context factors such as time, motivation and support, on the study outcomes and provide lessons learned in conducting the replications. Treatment group, using the SD process, performed significantly better than the control group (at p-value <0.05) in terms of the coverage of the identified security requirements and efficiency of the requirements elicitation process in two of the three replications, supporting the findings of the original study. Participants in the treatment group identified 84 % more security requirements in the oracle as compared to the control group on average. Overall, 80 % of the 111 participants in the treatment group were favorable towards the use of templates in identifying security requirements. Our qualitative findings indicate that participants may be able to differentiate between relevant and extraneous templates suggestions and be more inclined to fill in the templates with additional support. Security requirements templates capture the security knowledge of multiple experts and can support the security requirements elicitation process when automatically suggested, making the implied security requirements more evident. However, individual participants may still miss out on identifying a number of security requirements due to empirical constraints as well as potential limitations on knowledge and security expertise. © 2016 Springer Science+Business Media New York},
  affiliation             = {Department of Computer Science, North Carolina State University, 890 Oval Drive, Box 8206, Engineering Building II, Raleigh, NC, United States; University of Trento, Trento, Italy; University of Costa Rica, San José, Costa Rica},
  author_keywords         = {Automation; Controlled experiment; Patterns; Replication; Requirements engineering; Security requirements; Templates},
  coden                   = {ESENF},
  correspondence_address1 = {Riaz, M.; Department of Computer Science, North Carolina State University, 890 Oval Drive, Box 8206, Engineering Building II, United States; email: mriaz@ncsu.edu},
  document_type           = {Article in Press},
  doi                     = {10.1007/s10664-016-9481-1},
  keywords                = {Automation; Efficiency; Requirements engineering; Software design; Speed control, Controlled experiment; Patterns; Replication; Security requirements; Templates, Quality control},
  language                = {English},
  publisher               = {Springer New York LLC},
  review                  = {{E C2}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006428056&doi=10.1007%2fs10664-016-9481-1&partnerID=40&md5=a0080dbbd122ab89544ac080e2e61d12},
}

@Conference{Ribeiro2014989,
  author              = {Ribeiro, M. and Borba, P. and Kästner, C.},
  title               = {Feature maintenance with emergent interfaces},
  year                = {2014},
  number              = {CONFCODENUMBER},
  pages               = {989-1000},
  publisher           = {IEEE Computer Society},
  note                = {cited By 15; Conference of 36th International Conference on Software Engineering, ICSE 2014 ; Conference Date: 31 May 2014 Through 7 June 2014; Conference Code:123877},
  abbrev_source_title = {Proc Int Conf Software Eng},
  abstract            = {Hidden code dependencies are responsible for many complications in maintenance tasks. With the introduction of variable features in configurable systems, dependencies may even cross feature boundaries, causing problems that are prone to be detected late. Many current implementation techniques for product lines lack proper interfaces, which could make such dependencies explicit. As alternative to changing the implementation approach, we provide a tool-based solution to support developers in recognizing and dealing with feature dependencies: emergent interfaces. Emergent interfaces are inferred on demand, based on feature-sensitive intraprocedural and interprocedural data-flow analysis. They emerge in the IDE and emulate modularity benefits not available in the host language. To evaluate the potential of emergent interfaces, we conducted and replicated a controlled experiment, and found, in the studied context, that emergent interfaces can improve performance of code change tasks by up to 3 times while also reducing the number of errors. © 2014 ACM.},
  affiliation         = {Federal University of Alagoas, Macei, Brazil; Federal University of Pernambuco, Recife, Brazil; Carnegie Mellon University, Pittsburgh, United States},
  author_keywords     = {Controlled Experiments; Interfaces; Preprocessors; Product Lines},
  coden               = {PCSED},
  document_type       = {Conference Paper},
  doi                 = {10.1145/2568225.2568289},
  issn                = {02705257},
  journal             = {Proceedings - International Conference on Software Engineering},
  keywords            = {Data flow analysis; Interfaces (materials); Program processors, Configurable systems; Controlled experiment; Implementation approach; Implementation techniques; Improve performance; Inter-procedural; Maintenance tasks; Product-lines, Software engineering},
  language            = {English},
  references          = {Aldrich, J., Open modules: Modular reasoning about advice (2005) Proc. of the 19th European Conference on Object-Oriented Programming (ECOOP), pp. 144-168. , Springer; Atkins, D.L., Ball, T., Graves, T.L., Mockus, A., Using version control data to evaluate the impact of software tools: A case study of the Version Editor (2002) IEEE Transactions on Software Engineering (TSE), 28 (7), pp. 625-663; Baniassad, E.L.A., Murphy, G.C., Conceptual module querying for software reengineering (1998) Proc. of the 20th International Conference on Software Engineering (ICSE), pp. 64-73. , IEEE Computer Society; Batory, D., Sarvela, J.N., Rauschmayer, A., Scaling step-wise refinement (2004) IEEE Transactions on Software Engineering (TSE), 30 (6), pp. 355-371; Bodden, E., Tolêdo, T., Ribeiro, M., Brabrand, C., Borba, P., Mezini, M., SPLlift-Transparent and efficient reuse of IFDS-based static program analyses for software product lines (2013) Proc. of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI), pp. 355-364. , ACM; Box, G.E.P., Hunter, J.S., Hunter, W.G., (2005) Statistics for Experimenters: Design, Innovation, and Discovery, , Wiley-Interscience; Brabrand, C., Ribeiro, M., Tolêdo, T., Borba, P., Intraprocedural dataflow analysis for software product lines (2012) Proc. of the 11th International Conference on Aspect-Oriented Software Development (AOSD), pp. 13-24. , ACM; Brabrand, C., Ribeiro, M., Tolêdo, T., Winther, J., Borba, P., Intraprocedural dataflow analysis for software product lines (2013) Transactions on Aspect-Oriented Software Development (TAOSD), 10, pp. 73-108; Buse, R.P., Sadowski, C., Weimer, W., Benefits and barriers of user evaluation in software engineering research (2011) Proc. of the 26th ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA), pp. 643-656. , ACM; Cataldo, M., Herbsleb, J.D., Factors leading to integration failures in global feature-oriented development: An empirical analysis (2011) Proc. of the 33rd International Conference on Software Engineering (ICSE), pp. 161-170. , ACM; Chae, W., Blume, M., Building a family of compilers (2008) Proc. of 12th International Software Product Line Conference (SPLC), pp. 307-316. , IEEE Computer Society; Favre, J.-M., The CPP paradox (1995) Proc. of the European Workshop on Software Maintenance; Feigenspan, J., Kästner, C., Apel, S., Liebig, J., Schulze, M., Dachselt, R., Papendieck, M., Saake, G., Do background colors improve program comprehension in the #ifdef hell (2012) Empirical Software Engineering, 18 (4), pp. 699-745; Figueiredo, E., Cacho, N., Sant'Anna, C., Monteiro, M., Kulesza, U., Garcia, A., Soares, S., Dantas, F., Evolving software product lines with aspects: An empirical study on design stability (2008) Proc. of the 30th International Conference on Software Engineering (ICSE), pp. 261-270. , ACM; Filman, R.E., Friedman, D.P., Aspect-oriented programming is quantification and obliviousness (2000) Proc. of the OOPSLA Workshop on Advanced Separation of Concerns; Griswold, W.G., Sullivan, K., Song, Y., Shonle, M., Tewari, N., Cai, Y., Rajan, H., Modular software design with crosscutting interfaces (2006) IEEE Software, 23 (1), pp. 51-60; Heidenreich, F., Kopcsek, J., Wende, C., FeatureMapper: Mapping features to models (2008) Comp. of the 30th International Conference on Software Engineering (ICSE), pp. 943-944. , ACM; Hill, T., Lewicki, P., Statistics: Methods and applications (2006) A Comprehensive Reference for Science, Industry, and Data Mining. StatSoft, 1st Edition; Hofer, W., Elsner, C., Blendinger, F., Schrëder-Preikschat, W., Lohmann, D., Toolchain-independent variant management with the leviathan filesystem (2011) Proc. of the GPCE Workshop on Feature-Oriented Software Development (FOSD), pp. 18-24. , ACM; Horie, M., Chiba, S., Aspectscope: An outline viewer for AspectJ programs (2007) Journal of Object Technology, 6 (9), pp. 341-361; Inostroza, M., Tanter, E., Bodden, E., Join point interfaces for modular reasoning in aspect-oriented programs (2011) Proc. of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering (ESEC/FSE), pp. 508-511. , ACM; Kästner, C., Apel, S., Kuhlemann, M., Granularity in software product lines (2008) Proc. of the 30th International Conference on Software Engineering (ICSE), pp. 311-320. , ACM; Kästner, C., Apel, S., Ostermann, K., The road to feature modularity (2011) Proc of the SPLC Workshop on Feature-Oriented Software Development (FOSD). ACM; Kästner, C., Apel, S., Thüm, T., Saake, G., Type checking annotation-based product lines (2012) ACM Transactions on Software Engineering and Methodology (TOSEM), 21 (3), pp. 1401-1439; Kersten, M., Murphy, G.C., Using task context to improve programmer productivity (2006) Proc. of the 14th International Symposium on Foundations of Software Engineering (FSE), pp. 1-11. , ACM; Kiczales, G., Lamping, J., Mendhekar, A., Maeda, C., Lopes, C., Loingtier, J.-M., Irwin, J., Aspect-oriented programming (1997) Proc. of the 11th European Conference on Object-Oriented Programming (ECOOP), pp. 220-242. , Springer; Krishnamurthi, S., Fisler, K., Greenberg, M., Verifying aspect advice modularly (2004) Proc. of the 12th ACM SIGSOFT International Symposium on Foundations of Software Engineering (FSE), pp. 137-146. , ACM; Le, D., Walkingshaw, E., Erwig, M., #ifdef confirmed harmful: Promoting understandable software variation (2011) Proc of the IEEE International Symposium on Visual Languages and Human-Centric Computing (VL/HCC), pp. 143-150. , IEEE Computer Society; Liebig, J., Apel, S., Lengauer, C., Kästner, C., Schulze, M., An analysis of the variability in forty preprocessor-based software product lines (2010) Proc. of the 32nd ACM/IEEE International Conference on Software Engineering (ICSE), pp. 105-114. , ACM; Liskov, B., Snyder, A., Atkinson, R., Schaffert, C., Abstraction mechanisms in CLU (1977) Communications of ACM, 20 (8), pp. 564-576; Mikhajlov, L., Sekerinski, E., A study of the fragile base class problem (1998) Proc of the 12th European Conference on Object-Oriented Programming (ECOOP), pp. 355-382. , Springer-Verlag; Neto, A.C., Bonifácio, R., Ribeiro, M., Pontual, C.E., Borba, P., Castor, F., A design rule language for aspect-oriented programming (2013) Journal of Systems and Software, 86 (9), pp. 2333-2356; Parnas, D.L., On the criteria to be used in decomposing systems into modules (1972) Communications of the ACM (CACM), 15 (12), pp. 1053-1058; Pohl, K., Bockle, G., Linden Der Van, F.J., (2005) Software Product Line Engineering, , Springer; Rajan, H., Leavens, G.T., Ptolemy: A language with quantified, typed events (2008) Proc. of the 22nd European Conference on Object-Oriented Programming (ECOOP), pp. 155-179. , Springer-Verlag; Rashid, A., Cottenier, T., Greenwood, P., Chitchyan, R., Meunier, R., Coelho, R., Sudholt, M., Joosen, W., Aspect-oriented software development in practice: Tales from AOSD-Europe (2010) Computer, 43 (2), pp. 19-26; Ribeiro, M., Pacheco, H., Teixeira, L., Borba, P., Emergent feature modularization (2010) Comp. of the 25th ACM SIGPLAN International Conference on Object Oriented Programming Systems Languages and Applications (OOPSLA), pp. 11-18. , ACM; Ribeiro, M., Queiroz, F., Borba, P., Tolêdo, T., Brabrand, C., Soares, S., On the impact of feature dependencies when maintaining preprocessor-based software product lines (2011) Proc. of the 10th International Conference on Generative Programming and Component Engineering (GPCE), pp. 23-32. , ACM; Schaefer, I., Bettini, L., Damiani, F., Tanzarella, N., Delta-oriented programming of software product lines (2010) Proc. of the 14th International Conference on Software Product Lines (SPLC), pp. 77-91. , Springer-Verlag; Singh, N., Gibbs, C., Coady, Y., C-CLR: A tool for navigating highly configurable system software (2007) Proc of the AOSD Workshop on Aspects, Components, and Patterns for Infrastructure Software (ACP4IS), p. 9. , ACM; Spencer, H., Collyer, G., #ifdef considered harmful, or portability experience with C news (1992) Proc of the Usenix Summer Technical Conference, pp. 185-198. , Usenix Association; Steimann, F., The paradoxical success of aspect-oriented programming (2006) Proc. of the 21st ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA), pp. 481-497. , ACM; Steimann, F., Pawlitzki, T., Apel, S., Kästner, C., Types and modularity for implicit invocation with implicit announcement (2010) ACM Transactions on Software Engineering and Methodology (TOSEM), 20 (1), pp. 101-143; Störzer, M., Koppen, C., PCDiff: Attacking the fragile pointcut problem (2004) European Interactive Workshop on Aspects in Software; Thaker, S., Batory, D., Kitchin, D., Cook, W., Safe composition of product lines (2007) Proc. of the 6th International Conference on Generative Programming and Component Engineering (GPCE), pp. 95-104. , ACM; Thüm, T., Apel, S., Kästner, C., Schaefer, I., Saake, G., A classification and survey of analysis strategies for software product lines (2014) ACM Computing Surveys, , To appear; Weiser, M., Program slicing (1981) Proc. of the 5th International Conference on Software Engineering (ICSE), pp. 439-449. , IEEE; Wulf, W., Shaw, M., Global variable considered harmful (1973) SIGPLAN Notices, 8 (2), pp. 28-34; Yin, Z., Yuan, D., Zhou, Y., Pasupathy, S., Bairavasundaram, L., How do fixes become bugs (2011) Proc of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering (ESEC/FSE), pp. 26-36. , ACM},
  review              = {{E C6}},
  source              = {Scopus},
  sponsors            = {ACM Special Interest Group on Software Engineering (SIGSOFT); IEEE Computer Society's Tech. Council on Software Engin. (TCSE)},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994083648&doi=10.1145%2f2568225.2568289&partnerID=40&md5=53c8e13e09dfab0ff57f867ac8aab848},
}

@Article{Ricca2014,
  author                  = {Ricca, F. and Scanniello, G. and Torchiano, M. and Reggio, G. and Astesiano, E.},
  title                   = {Assessing the effect of screen mockups on the comprehension of functional requirements},
  journal                 = {ACM Transactions on Software Engineering and Methodology},
  year                    = {2014},
  volume                  = {24},
  number                  = {1},
  issn                    = {1049331X},
  note                    = {cited By 9},
  abbrev_source_title     = {ACM Trans. Software Eng. Methodol.},
  abstract                = {Over the last few years, the software engineering community has proposed a number of modeling methods to represent functional requirements. Among them, use cases are recognized as an easy to use and intuitive way to capture and define such requirements. Screen mockups (also called user-interface sketches or user interface-mockups) have been proposed as a complement to use cases for improving the comprehension of functional requirements. In this article, we aim at quantifying the benefits achievable by augmenting use cases with screen mockups in the comprehension of functional requirements with respect to effectiveness, effort, and efficiency. For this purpose, we conducted a family of four controlled experiments, involving 139 participants having different profiles. The experiments involved comprehension tasks performed on the requirements documents of two desktop applications. Independently from the participants' profile, we found a statistically significant large effect of the presence of screen mockups on both comprehension effectiveness and comprehension task efficiency. No significant effect was observed on the effort to complete tasks. The main pragmatic lesson is that the screen mockups addition to use cases is able to almost double the efficiency of comprehension tasks. © 2014 ACM.},
  affiliation             = {DIBRIS, University of Genova, Genova, Italy; DiMIE, University of Basilicata, Potenza, Italy; DAUIN, Politecnico di Torino, Torino, Italy},
  art_number              = {2629457},
  author_keywords         = {analysis models; controlled experiment; family of experiments; replicated experiments; Screen mockups; use cases},
  coden                   = {ATSME},
  correspondence_address1 = {Ricca, F.; DIBRIS, University of GenovaItaly},
  document_type           = {Article},
  doi                     = {10.1145/2629457},
  keywords                = {Analysis models; Controlled experiment; Functional requirement; Replicated experiment; use cases},
  language                = {English},
  publisher               = {Association for Computing Machinery},
  references              = {Abraho, S., Gravino, C., Insfran, E., Scanniello, G., Tortora, G., Assessing the effectiveness of sequence diagrams in the comprehension of functional requirements: Results from a family of five experiments (2013) IEEE Trans. Softw. Eng., 29 (3), pp. 327-342; Adolph, S., Cockburn, A., Bramble, P., (2002) Patterns for Effective Use Cases, , Addison-Wesley Longman Publishing Co., Inc., Boston, MA; Agresti, A., (2007) An Introduction to Categorical Data Analysis, , Wiley-Interscience; Anda, B., Sjberg, D.I.K., Jrgensen, M., Quality and understandability of use case models (2001) Proceedings of the European Conference on Object-Oriented Programming, pp. 402-428. , Berlin, Springer-Verlag; Andrew, G., Drew, P., Use case diagrams in support of use case modeling: Deriving understanding from the picture (2009) J. Datab. Manage., 20 (1), pp. 1-24; Aranda, J., Ernst, N., Horkoff, J., Easterbrook, S., A framework for empirical evaluation of model comprehensibility (2007) Proceedings of the ICSE Workshop on Modeling in Software Engineering, pp. 7-13. , IEEE; Astesiano, E., Cerioli, M., Reggio, G., Ricca, F., Phased highly-interactive approach to teaching UML-based software development (2007) Proceedings of the Symposium at MODELS 2007, pp. 9-19; Astesiano, E., Reggio, G., (2012) A Disciplined Style for Use Case Based Requirement Specification, , http://softeng.disi.unige.it/TR/DisciplinedRequirements.pdf, Tech. Rep. DISI-TR-12-04. DISI University of Genova, Italy; Basili, V., Caldiera, G., Rombach, D.H., (1994) The Goal Question Metric Paradigm, Encyclopedia of Software Engineering, , Wiley; Basili, V., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) IEEE Trans. Softw. Eng., pp. 456-473. , IEEE; Bratthall, L., Wohlin, C., Is it possible to decorate graphical software design and architecture models with qualitative information - An Experiment (2002) IEEE Trans. Softw. Eng., 28 (12), pp. 1181-1193; Bruegge, B., Dutoit, H.A., (2003) Object-Oriented Software Engineering: Using UML, Patterns and Java, 2nd Ed, , Prentice-Hall; Carver, J., Jaccheri, L., Morasca, S., Shull, F., Issues in using students in empirical studies in software engineering education (2003) Proceedings of the International Symposium on Software Metrics, pp. 239-250. , IEEE Computer Society, Los Alamitos, CA; Ceccato, M., Di Penta, P., Falcarin, P., Ricca, F., Torchiano, M., Tonella, P., A family of experiments to assess the effectiveness and efficiency of source code obfuscation techniques (2014) Empir. Softw. Eng., 19 (4), pp. 1040-1074; Ciolkowski, M., Muthig, D., Rech, J., Using academic courses for empirical validation of software development processes (2004) Proceedings of the EUROMICRO Conference, pp. 354-361. , IEEE Computer Society, Los Alamitos, CA; Cliff, N., Dominance statistics: Ordinal analyses to answer ordinal questions (1993) Psychol. Bull., 114 (3), pp. 494-509; Cockburn, A., (2000) Writing Effective Use Cases, , Addison-Wesley, Reading, MA; Conallen, J., (2002) Building Web Applications with UML, Second Edition, , Addison-Wesley, Reading, MA; Condori-Fernandez, N., Daneva, M., Sikkel, K., Wieringa, R., Dieste, O., Pastor, O., Research findings on empirical evaluation of requirements specifications approaches (2009) Proceedings of the Workshop on Requirements Engineering, pp. 121-128. , Valparaiso University Press; Dunn, O.J., Multiple comparisons among means (1961) J. ASA, 56, pp. 52-64; Ferreira, J., Noble, J., Biddle, R., Agile Development Iterations and UI Design (2007) Proceedings of the Agile Conference (AGILE), pp. 50-58; Fowler, M., (2003) UML Distilled: A Brief Guide to the Standard Object Modeling Language, 3rd Ed, , Addison-Wesley Longman Publishing Co., Inc., Boston, MA; Gravino, C., Scanniello, G., Tortora, G., An empirical investigation on dynamic modeling in requirements engineering (2008) Proceedings of the Conference on Model Driven Engineering Languages and Systems, pp. 615-629. , IEEE Computer Society, Los Alamitos, CA; Hannay, J., Jrgensen, M., The role of deliberate artificial design elements in software engineering experiments (2008) IEEE Trans. Softw. Eng., 34 (2), pp. 242-259; Hartson, H.R., Smith, C.E., Rapid prototyping in human-computer interface development (1991) Interacting with Computers, 3 (1), pp. 51-91; Hendrix, D., Cross, J., Maghsoodloo, S., The effectiveness of control structure diagrams in source code comprehension activities (2002) IEEE Trans. Softw. Eng., 28 (5), pp. 463-477; Higgins, J.J., (2004) An Introduction to Modern Nonparametric Statistics, , Brooks/Cole; Hochstein, L., Basili, V.R., Zelkowitz, M.V., Hollingsworth, J.K., Carver, J., Combining self-reported and automatic data to improve programming effort measurement (2005) ACM SIGSOFT Softw. Eng. Notes, 30 (5), pp. 356-365; Hogarty, K., Kromrey, J., We've been reporting some effect sizes: Can you guess what they mean (2001) Proceedings of the Annual Meeting of the American Educational Research Association; Huang, L., Holcombe, M., Empirical investigation towards the effectiveness of test first programming (2009) Inf. Softw. Tech., 51 (1), pp. 182-194; Humphrey, W.S., (1995) A Discipline for Software Engineering, , Addison-Wesley Longman Publishing Co., Inc., Boston, MA; (1991) Information Technology-software Product Evaluation: Quality Characteristics and Guidelines for Their Use, , ISO ISO/IEC IS 9126, ISO, Geneva; (2000) Ergonomic Requirements for Office Work with Visual Display Terminals (VDTs) - Part 9: Requirements for Non-keyboard Input Devices, , ISO ISO 9241-11, ISO, Geneva, Switzerland; (2011) Systems and Software Engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality Models, , ISO ISO/IEC 25010, ISO, Geneva, Switzerland; Jacobson, I., (2004) Object-Oriented Software Engineering: A Use Case Driven Approach, , Addison-Wesley Longman Publishing Co., Inc., Redwood City, CA; Juristo And, N., Moreno, M.A., (2001) Basics of Software Engineering Experimentation, , Kluwer Academic Publishers, Englewood Cliffs, NJ; Kabacoff, R.I., (2011) R in Action - Data Analysis and Graphics with R, , Manning Publications Co., Shelter Island, NY; Kamsties, E., Von Knethen, A., Reussner, R., A controlled experiment to evaluate how styles affect the understandability of requirements specifications (2003) Inf. Softw. Tech., 45 (14), pp. 955-965; Kitchenham, B., Al-Khilidar, H., Babar, M., Berry, M., Cox, K., Keung, J., Kurniawati, F., Zhu, L., Evaluating guidelines for reporting empirical software engineering studies (2008) Empir. Softw. Eng., 13, pp. 97-121; Kitchenham, B., Pfleeger, S., Pickard, L., Jones, P., Hoaglin, D., El Emam, K., Rosenberg, J., Preliminary guidelines for empirical research in software engineering (2002) IEEE Trans. Softw. Eng., 28 (8), pp. 721-734; Landay, J.A., Myers, A.B., Interactive sketching for the early stages of user interface design (1995) Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, pp. 43-50. , ACM Press/Addison-Wesley Publishing Co., New York, NY; Lauesen, S., (2002) Software Requirements: Styles and Techniques, , Addison-Wesley; Lindvall, M., Rus, I., Shull, F., Zelkowitz, M.V., Donzelli, P., Memon, A.M., Basili, V.R., Pech, D., An evolutionary testbed for software technology evaluation (2005) Innov. Syst. Softw. Eng., 1 (1), pp. 3-11; Mendona, M.G., Maldonado, J.C., De Oliviera, M.C.F., A framework for software engineering experimental replications (2008) Proceedings of the 13th IEEE International Conference on Engineering of Complex Computer Systems (ICECCS'08), pp. 203-212. , IEEE Computer Society, Los Alamitos, CA; Meyer, B., On formalism in specification (1985) IEEE Softw., 3 (1), pp. 6-25; Motulsky, H., (2010) Intuitive Biostatistics: A Non-Mathematical Guide to Statistical Thinking, , Oxford University Press; Mugridge, R., Cunningham, W., (2005) Fit for Developing Software: Framework for Integrated Tests, , Prentice-Hall; O'Docherty, M., (2005) Object-Oriented Analysis and Design: Understanding System Development with UML 2.0 1st Ed., , Wiley; Oppenheim, A.N., (1992) Questionnaire Design, Interviewing and Attitude Measurement, , Pinter, London, UK; Pfleeger, S.L., Menezes, W., Marketing technology to software practitioners (2000) IEEE Softw., 17 (1), pp. 27-33; Phalp, K.T., Vincent, J., Cox, K., Improving the quality of use case descriptions: Empirical assessment of writing guidelines (2007) Softw. Qual. Cont., 15 (4), pp. 383-399; (2013) R: A Language and Environment for Statistical Computing, , R Core Team R Foundation for Statistical Computing, Vienna, Austria; Ricca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M., How developers' experience and ability influence web application comprehension tasks supported by UML stereotypes: A Series of Four Experiments (2010) IEEE Trans. Softw. Eng., 36, pp. 96-118; Ricca, F., Scanniello, G., Torchiano, M., Reggio, G., Astesiano, E., On the effectiveness of screen mockups in requirements engineering: Results from an internal replication (2010) Proceedings of the International Symposium on Empirical Software Engineering and Measurement, , ACM, New York, NY; Ricca, F., Scanniello, G., Torchiano, M., Reggio, G., Astesiano, E., On the effort of augmenting use cases with screen mockups: Results from a preliminary empirical study (2010) Proceedings of the International Symposium on Empirical Software Engineering and Measurement, , ACM, New York; Ricca, F., Torchiano, M., Di Penta, M., Ceccato, M., Tonella, P., Using acceptance tests as a support for clarifying requirements: A series of experiments (2009) Inf. Softw. Tech., 51 (2), pp. 270-283; Romano, J., Kromrey, J.D., Coraggio, J., Skowronek, J., Appropriate statistics for ordinal level data: Should we really be using t-test and Cohen's d for evaluating group differences on the NSSE and other surveys (2006) Proceedings of the Annual Meeting of the Florida Association of Institutional Research; Scanniello, G., Gravino, C., Genero, M., Cruz-Lemus, J.A., Tortora, G., On the impact of UML analysis models on source code comprehensibility and modifiability (2014) Trans. Softw. Eng. Meth., 23 (2), pp. 131-1326; Scanniello, G., Gravino, C., Tortora, G., Investigating the role of UML in the software modeling and maintenance - A preliminary industrial survey (2010) Proceedings of ICEIS, pp. 141-148; Scanniello, G., Ricca, F., Torchiano, M., Gravino, C., Reggio, G., Estimating the effort to develop screen mockups (2013) Proceedings of the EUROMICRO Conference on Software Engineering and Advanced Applications, pp. 341-348; Shapiro, S., Wilk, M., An analysis of variance test for normality (1965) Biometrika, 52 (3-4), pp. 591-611; Shull, F., Carver, J.C., Vegas, S., Juzgado, N.J., The role of replications in empirical software engineering (2008) Empir. Softw. Eng., 13 (2), pp. 211-218; Staron, M., Kuzniarz, L., Wohlin, C., Empirical assessment of using stereotypes to improve comprehension of UML models: A set of experiments (2006) J. Syst. Softw., 79 (5), pp. 727-742; Torchiano, M., Effsize: Efficientc Effects Size Computation (2014) R Package Version 1.2-2; Torchiano, M., Tomassetti, F.C.A., Ricca, F., Tiso, A., Reggio, G., Relevance, benefits, and problems of software modelling and model driven techniques-A survey in the Italian industry (2013) J. Syst. Softw., 86 (8), pp. 2110-2126; Linden Der H.Van, Boers, G., Tange, H., Talmon, J., Hasman, A., Proper: A multi disciplinary EPR system (2003) Int. J. Med. Inf., 70 (2-3), pp. 149-160; Wheeler, B., LmPerm: Permutation Tests for Linear Models (2010) R Package Version 1.1-2; Wohlin, C., Runeson, P., Hst, M., Ohlsson, M., Regnell, B., Wessln, A., (2012) Experimentation in Software Engineering, , Springer; Young, R., (2001) Effective Requirements Practice, , Addison-Wesley, Boston, MA; Yue, T., Briand, L.C., Labiche, Y., A use case modeling approach to facilitate the transition towards analysis models: Concepts and empirical evaluation (2009) Proceedings of the 12th International Conference on Model Driven Engineering Languages and Systems (MODELS'09), pp. 484-498. , Springer-Verlag, Berlin; Zimmerman, M.K., Lundqvist, K., Leveson, N., Investigating the readability of state-based formal requirements specification languages (2002) Proceedings of the International Conference on Software Engineering, pp. 33-43. , ACM, New York},
  review                  = {{E C2}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907980696&doi=10.1145%2f2629457&partnerID=40&md5=3685952260932704985e61ad24d78d9d},
}

@Article{Runeson20141781,
  author                  = {Runeson, P. and Stefik, A. and Andrews, A.},
  title                   = {Variation factors in the design and analysis of replicated controlled experiments: Three (dis)similar studies on inspections versus unit testing},
  journal                 = {Empirical Software Engineering},
  year                    = {2014},
  volume                  = {19},
  number                  = {6},
  pages                   = {1781-1808},
  issn                    = {13823256},
  note                    = {cited By 4},
  abbrev_source_title     = {Empir Software Eng},
  abstract                = {In formal experiments on software engineering, the number of factors that may impact an outcome is very high. Some factors are controlled and change by design, while others are are either unforeseen or due to chance. This paper aims to explore how context factors change in a series of formal experiments and to identify implications for experimentation and replication practices to enable learning from experimentation. We analyze three experiments on code inspections and structural unit testing. The first two experiments use the same experimental design and instrumentation (replication), while the third, conducted by different researchers, replaces the programs and adapts defect detection methods accordingly (reproduction). Experimental procedures and location also differ between the experiments. Contrary to expectations, there are significant differences between the original experiment and the replication, as well as compared to the reproduction. Some of the differences are due to factors other than the ones designed to vary between experiments, indicating the sensitivity to context factors in software engineering experimentation. In aggregate, the analysis indicates that reducing the complexity of software engineering experiments should be considered by researchers who want to obtain reliable and repeatable empirical measures. © 2013, Springer Science+Business Media New York.},
  affiliation             = {Lund University, Lund, Sweden; University of Nevada, Las Vegas, NV, United States; University of Denver, Denver, CO, United States},
  author_keywords         = {Code inspection; Experiment design; Formal experiments; Replication; Reproduction; Unit testing},
  coden                   = {ESENF},
  correspondence_address1 = {Runeson, P.; Lund UniversitySweden},
  document_type           = {Article},
  doi                     = {10.1007/s10664-013-9262-z},
  keywords                = {Code inspections; Experiment design; Formal Experiments; Replication; Reproduction; Unit testing},
  language                = {English},
  publisher               = {Kluwer Academic Publishers},
  references              = {Anderson, T., Darling, D., Asymptotic theory of certain “goodness of fit” criteria based on stochastic processes (1952) Ann Math Stat, 23 (2), pp. 193-212; Basili, V.R., Selby, R.W., Comparing the effectiveness of software testing strategies (1987) IEEE Trans Softw Eng, 13 (12), pp. 1278-1296; Basili, V.R., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) IEEE Trans Softw Eng, 25 (4), pp. 456-473; Berling, T., Runeson, P., Evaluation of a perspective based review method applied in an industrial setting (2003) IEE Proc SW, 150 (3), pp. 177-184; Cartwright, N., Replicability, reproducibility, and robustness: comments on Harry Collins (1991) Hist Polit Econ, 23 (1), pp. 143-155; Clarke, P., O’Connor, R.V., The situational factors that affect the software development process: towards a comprehensive reference framework (2012) Inf Softw Technol, 54 (5), pp. 433-447; da Silva, F.Q.B., Suassuna, M., França, A.C.C., Grubb, A.M., Gouveia, T.B., Monteiro, C.V.F., dos Santos, I.E., Replication of empirical studies in software engineering research: a systematic mapping study (2012) Empir Softw Eng.; Dybå, T., Sjøberg, D.I.K., Cruzes, D.S., What works for whom, where, when, and why?: on the role of context in empirical software engineering. In: Proceedings of the 11th international symposium on empirical software engineering and measurement (2012) pp 19–28; Gomez, O.S., Juristo, N., Vegas, S., (2010) Replications types in experimental disciplines, , In: Proceedings of the fourth international symposium on empirical software engineering and measurement; Hannay, J., Jørgensen, M., The role of deliberate artificial design elements in software engineering experiments (2008) IEEE Trans Softw Eng, 34 (2), pp. 242-259; Hetzel, W., An experimental analysis of program verification problem solving capabilities as they relate to programmer efficiency (1972) Comput Pers, 3 (3), pp. 10-15; Hoaglin, D., Andrews, D., The reporting of computation-based results in statistics (1975) Am Stat, 29 (3), pp. 112-126; Humphrey, W.S., (1995) A discipline for software engineering, , Addison-Wesley, Reading, MA:; Jedlitschka, A., Pfahl, D., Reporting guidelines for controlled experiments in software engineering. In: Proceedings of the 4th international symposium on empirical software engineering (2005) pp 95–104; Jørgensen, M., Grimstad, S., The impact of irrelevant and misleading information on software development effort estimates: a randomized controlled field experiment (2011) IEEE Trans Softw Eng, 37 (5), pp. 695-707; Jørgensen, M., Grimstad, S., Software development estimation biases: the role of interdependence (2012) IEEE Trans Softw Eng, 38 (3), pp. 677-693; Jørgensen, M., Gruschke, T., The impact of lessons-learned sessions on effort estimation and uncertainty assessments (2009) IEEE Trans Softw Eng, 35 (3), pp. 368-383; Jørgensen, M., Shepperd, M., A systematic review of software development cost estimation studies (2007) IEEE Trans Softw Eng, 33, pp. 33-53; Juristo, N., Gomez, O.S., Meyer, B., Nordio, M., Replication of software engineering experiments (2012) Empirical software engineering and verification. LNCS, vol 7007. Springer, pp. 60-88; Juristo, N., Vegas, S., The role of non-exact replications in software engineering experiments (2011) Empir Softw Eng, 16 (3), pp. 295-324; Juristo, N., Moreno, A.M., Vegas, S., Reviewing 25 years of testing technique experiments (2004) Empir Softw Eng, 9 (1-2), pp. 7-44; Juristo, N., Moreno, A.M., Vegas, S., Solari, M., In search of what we experimentally know about unit testing (2006) IEEE Softw, 23, pp. 72-80; Juristo, N., Vegas, S., Solari, M., Abrahao, S., Ramos I (2012) Comparing the effectiveness of equivalence partitioning, branch testing and code reading be stepwise abstraction applied by subjects Proceedings fifth IEEE international conference on software testing, verification and validation, pp. 330-339. , Montreal, Canada:; Kitchenham, B.A., Fry, J., Linkman, S.G., The case against cross-over designs in software engineering (2003) 11th international workshop on software technology and engineering practice (STEP, 2003, pp. 65-67. , Amsterdam, The Netherlands:; Kitchenham, B.A., The role of replications in empirical software engineering—a word of warning (2008) Empir Softw Eng, 13, pp. 219-221; Kitchenham, B.A., Al-Khilidar, H., Babar, M.A., Berry, M., Cox, K., Keung, J., Kurniawati, F., Zhu, L., Evaluating guidelines for reporting empirical software engineering studies (2007) Empir Softw Eng, 13 (1), pp. 97-121; Kitchenham, B., PearlBrereton, O., Budgen, D., Turner, M., Bailey, J., Linkman, S., Systematic literature reviews in software engineering—a systematic literature review (2009) Inf Softw Technol, 51 (1), pp. 7-15; Laitenberger, O., Studying the effects of code inspection and structural testing on software quality. In: Proceedings 9th international symposium on software reliability engineering (1998) pp 237–246; Lindsay, R.M., Ehrenberg, A.S.C., The design of replicated studies (1993) Am Stat, 47 (3), pp. 217-227; Mäntylä, M.V., Lasseinus, C., Vanhanen, J., Knutson, C., Krein, J., Rethinking replication in software engineering: can we see the forest for the trees? (2010) 1st international workshop on replication in empirical software engineering research, , Cape Town, South Africa:; Miller, J., Applying meta-analytical procedures to software engineering experiments (2000) J Syst Softw, 54 (1), pp. 29-39; Miller, J., Replicating software engineering experiments: a poisoned chalice or the holy grail (2005) Inf Softw Technol, 47 (4), pp. 233-244; Montgomery, D.C., (2001) Design and analysis of experiments, , Wiley, New York:; Pickard, L., Kitchenham, B.A., Jones, P., Combining empirical results in software engineering (1998) Inf Softw Technol, 40 (14), pp. 811-821; Runeson, P., Andrews, A., Detection or isolation of defects? An experimental comparison of unit testing and code inspection. In: 14th international symposium on software reliability engineering (2003) pp 3–13; Runeson, P., Anderson, C., Thelin, T., Andrews, A., Berling, T., What do we know about defect detection methods? (2006) IEEE Softw, 23 (3), pp. 82-90; Runeson, P., Stefik, A., Andrews, A., Grönblom, S., Porres, I., Siebert S (2011) A comparative analysis of three replicated experiments comparing inspection and unit testing Proceedings 2nd international workshop on replication in empirical software engineering research, pp. 35-42. , Banff, Canada:; Runeson, P., Höst, M., Rainer, A., Regnell, B., (2012) Case study research in software engineering—guidelines and examples, , Wiley, New York:; Schmidt, S., Shall we really do it again? The powerful concept of replication is neglected in the social sciences (2009) Rev Gen Psychol, 13 (2), pp. 90-100; Shull, F., Basili, V.R., Carver, J., Maldonado, J.C., Travassos, G.H., Mendonca, M., Fabbri, S., Replicating software engineering experiments: addressing the tacit knowledge problem. In: Proceedings of the 1st international symposium empirical software engineering (2002) pp 7–16; Shull, F.J., Carver, J., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empir Softw Eng, 13 (2), pp. 211-218; Siegel, S., Castellan, N., (1956) Nonparametric statistics for the behavioural sciences, , McGraw-Hill, New York:; Sjøberg, D.I.K., Basili, V., Rombach, H., Schneider, K., Kitchenham, B., Pfahl, D., Selby, R., Knowledge acquisition in software engineering requires sharing of data and artifacts (2007) Empirical software engineering issues: critical assessment and future directions. LNCS, vol 4336. Springer, pp. 77-82; So, S., Cha, S., Shimeall, T., Kwon, Y., An empirical evaluation of six methods to detect faults in software (2002) SW Test Ver Rel, 12 (3), pp. 155-171; Teasley, B.E., Leventhal, L.M., Mynatt, C.R., Rohlman, D.S., Why software testing is sometimes ineffective: two applied studies of positive test strategy (1994) J Appl Psychol, 79 (1), pp. 142-155; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M.C., Regnell, B., Wesslen, A., Experimentation in software engineering (2012) Springer; Yin, R.K., (2009) Case study research design and methods, , Sage Publications, Beverly Hills, CA:},
  review                  = {{E C3 C5}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910016822&doi=10.1007%2fs10664-013-9262-z&partnerID=40&md5=0a36a3c6ab023d51f0daea520f048c5c},
}

@Article{Salleh2014714,
  author                  = {Salleh, N. and Mendes, E. and Grundy, J.},
  title                   = {Investigating the effects of personality traits on pair programming in a higher education setting through a family of experiments},
  journal                 = {Empirical Software Engineering},
  year                    = {2014},
  volume                  = {19},
  number                  = {3},
  pages                   = {714-752},
  issn                    = {13823256},
  note                    = {cited By 9},
  abbrev_source_title     = {Empir Software Eng},
  abstract                = {Evidence from our systematic literature review revealed numerous inconsistencies in findings from the Pair Programming (PP) literature regarding the effects of personality on PP's effectiveness as a pedagogical tool. In particular: i) the effect of differing personality traits of pairs on the successful implementation of pair-programming (PP) within a higher education setting is still unclear, and ii) the personality instrument most often used had been Myers-Briggs Type Indicator (MBTI), despite being an indicator criticized by personality psychologists as unreliable in measuring an individual's personality traits. These issues motivated the research described in this paper. We conducted a series of five formal experiments (one of which was a replicated experiment), between 2009 and 2010, at the University of Auckland, to investigate the effects of personality composition on PP's effectiveness. Each experiment looked at a particular personality trait of the Five-Factor personality framework. This framework comprises five broad traits (Openness to experience, Conscientiousness, Extraversion, Agreeableness, and Neuroticism), and our experiments focused on three of these - Conscientiousness, Neuroticism, and Openness. A total of 594 undergraduate students participated as subjects. Overall, our findings for all five experiments, including the replication, showed that Conscientiousness and Neuroticism did not present a statistically significant effect upon paired students' academic performance. However, Openness played a significant role in differentiating paired students' academic performance. Participants' survey results also indicated that PP not only caused an increase in satisfaction and confidence levels but also brought enjoyment to the tutorial classes and enhanced students' motivation. © 2012 Springer Science+Business Media, LLC.},
  affiliation             = {Department of Computer Science, International Islamic University Malaysia, P.O. Box 10, 50728 Kuala Lumpur, Malaysia; School of Computing, Blekinge Istitute of Technology, 37179 Karlskrona, Sweden; Faculty of Information and Communication Technology, Swinburne University of Technology, P.O. Box 218, Hawthorn, VIC, Australia},
  author_keywords         = {Five-factor model; Formal experiment; Higher education; Pair programming; Personality traits},
  coden                   = {ESENF},
  correspondence_address1 = {Salleh, N.; Department of Computer Science, International Islamic University Malaysia, P.O. Box 10, 50728 Kuala Lumpur, Malaysia; email: norsaremah@iium.edu.my},
  document_type           = {Article},
  doi                     = {10.1007/s10664-012-9238-4},
  keywords                = {Experiments; Teaching, Five-Factor Model; Formal Experiments; Higher education; Pair-programming; Personality traits, Students},
  language                = {English},
  publisher               = {Kluwer Academic Publishers},
  references              = {Acuna, S.T., Gomez, M., Juristo, N., How do personality, team process and task characteristics relate to job satisfaction and software quality? (2009) Inform Software Tech, 51, pp. 627-639; Arisholm, B., Gallis, H., Dyba, T., Sjoberg, D.I.K., Evaluating pair programming with respect to system complexity and programmer expertise (2007) IEEE Trans Software Eng, 33 (2), pp. 65-86; Barrick, M.R., Mount, M.K., The big five personality dimensions and job performance: A meta-analysis (1991) Personality Psychology, 44, pp. 1-26; Barrick, M.R., Stewart, G.L., Neubert, M.J., Mount, M.K., Relating member ability and personality to work-team processes and team effectiveness (1998) J Appl Psychol, 83 (3), pp. 377-391; Barrick, M.R., Mount, M.K., Judge, T.A., Personality and performance at the beginning of the new millennium: What do we know and where do we go next? (2001) Pers Perform, 9 (1-2), pp. 9-30; Basili, V.R., Rombach, H.D., The TAME Project: Towards improvement-oriented software environments (1988) IEEE Trans Software Eng, 14 (6); Basili, V.R., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) IEEE Trans Software Eng, 25 (4), pp. 456-473; Beck, K., (1999) Extreme Programming Explained: Embrace Change, , 2 Addison-Wesley Boston; Bell, S.T., Deep-level composition variables as predictors of team performance: A meta-analysis (2007) J Appl Psychol, 92 (3), pp. 595-615; Boekaerts, M., Personality and the psyhocology of learning (1996) Eur J Pers, 10, pp. 377-404; Bowers, C.A., Pharmer, J.A., Salas, E., When member homogeneity is needed in work teams: A meta-analysis (2000) Small Group Res, 31 (3), pp. 305-327; Boyle, G.J., Myers-Briggs type indicator (MBTI): Some psychometric limitations (1995) Aust Psychol, 30 (1), pp. 71-74. , 927684; Bradley, J.H., Hebert, F.J., The effect of personality type on team performance (1997) J Manag Dev, 16 (5), pp. 337-353; Buchanan, T., Johnson, J.A., Goldberg, L.R., Implementing a five-factor personality inventory for use on the Internet (2005) J Psychol Assess, 21 (2), pp. 115-127; Gsj, B., Anderson, N., Personality as a predictor of work-related behavior and performance: Recent advances and directions for future research (2008) International Review of Industrial and Organizational Psychology, pp. 261-305. , Hodgkinson GP, Ford JK (eds) Wiley, Chichester, UK; Busato, V.V., Prins, F.J., Elshout, J.J., Hamaker, C., Intellectual ability, learning style, personality, achievement motivation and academic success of psychology students in higher education (2000) Pers Indiv Differ, 29 (6), pp. 1057-1068; Cegielski, C.G., Hall, D.J., What makes a good programmer? (2006) Comm ACM, 49 (10), pp. 73-75; Chamorro-Premuzic, T., Furnham, A., Personality predicts academic performance: Evidence from two longitudinal university samples (2003) J Res Pers, 37, pp. 319-338; Chamorro-Premuzic, T., Furnham, A., Personality traits and academic examination performance (2003) Eur J Pers, 17, pp. 237-250; Chamorro-Premuzic, T., Furnham, A., Personality, intelligence and approaches to learning as predictors of academic performance (2008) Personality and Individual Differences, 44 (7), pp. 1596-1603; Choi, K.S., (2004) A Discovery and Analysis of Influencing Factors of Pair Programming, , Unpublished Ph.D. Dissertation, New Jersey Institute of Technology, USA; Choi, K.S., Deek, F.P., Im, I., Exploring the underlying aspects of pair programming: The impact of personality (2008) Inform Software Tech, 50 (11), pp. 1114-1126; Cockburn, A., (2002) Agile Software Development, , Addison-Wesley Longman Publishing Co. Inc. Boston; Cockburn, A., Williams, L., The costs and benefits of pair programming (2001) Extreme Programming Examined, pp. 223-243. , Addison-Wesley Longman Publishing Co., Inc, Boston, MA; Cohen, J., (1988) Statistical Power Analysis for the Behavioral Sciences, , 2 L. Erlbaum Associates Hillsdale 0747.62110; Conard, M.A., Aptitude is not enough: How personality and behavior predict academic performance (2006) J Res Pers, 40, pp. 339-346; Cook, T.D., Campbell, D.T., (1979) Quasi-experimentation: Design & Analysis Issues for Field Settings, , Rand McNally College Publishing Chicago; Costa, P.T., McCrae, R.R., (1992) NEO PI-R Professional Manual, , Psychological Assessment Resources Odessa; Costa, P.T., McCrae, R.R., Domain and facets: Hierarchical personality assessment using the revised NEO personality inventory (1995) J Pers Assess, 64, pp. 21-50; Costa, P.T., Terracciano, A., McCrae, R.R., Gender differences in personality traits across culture: Robust and surprising findings (2001) J Pers Soc Psychol, 81 (2), pp. 322-331; Cunha, A.D.D., Greathead, D., Does personality matter? An analysis of code-review ability (2007) Comm ACM, 50 (5), pp. 109-112; Davito, A., A review of the Myers-Briggs type indicator (1985) Ninth Mental Measurement Yearbook, , J. Mitchell (eds) University of Nebraska Press Lincoln; De Raad, B., Schouwenburg, H.C., Personality in learning and education: A review (1996) Eur J Pers, 10, pp. 303-336; Declue, T.H., Pair programming and pair trading: Effects on learning and motivation in a CS2 courses (2003) J Comput Sci Coll, 18 (5), pp. 49-56; Dollinger, S.J., Orf, L.A., Personality and performance in personality Conscientiousness and openness (1991) J Res Pers, 25, pp. 276-284; Donaldson, S.I., Grant-Vallone, E.J., Understanding self-report bias in organizational behavior research (2002) J Bus Psychol, 17 (2), pp. 245-260; Driskell, J.E., Salas, E., Goodwin, F.F., O'Shea, P.G., What makes a good team player? Personality and team effectiveness (2006) Group Dyn-Theor Res Pract, 10 (4), pp. 249-271; Duff, A., Boyle, E., Dunleavy, K., Ferguson, J., The relationship between personality, approach to learning and academic performance (2004) Pers Indiv Differ, 36 (8), pp. 1907-1920; Dyba, T., Kampenes, V.B., Sjoberg, D.I.L., A systematic review of statistical power in software engineering experiments (2006) Inform Software Tech, 48, pp. 745-755; Farsides, T., Woodfield, R., Individual differences and undergraduate academic success: The roles of personality, intelligence, and application (2003) Pers Indiv Differ, 34 (7), pp. 1225-1243; Faul, F., Erdfelder, E., Lang, A.-G., Buchner, A., GPower 3: A flexible statistical power analysis program for the social, behavioral, and biomedical sciences (2007) Behav Res Methods, 39, pp. 175-191; Feingold, A., Gender differences in personality: A meta-analysis (1994) Psychol Bull, 116 (3), pp. 429-456; Feldt, R., Angelis, L., Samuelsson, M., Towards individualized software engineering: Empirical studies should collect psychometrics (2008) CHASE'08; Francis, L., Craig, C., Robbins, M., The relationship between the Keirsey Temperament Sorter and the short-form Revised Eysenck Personality Questionnaire (2008) J Indiv Differ, 29 (2), pp. 116-120; Furnham, A., The big five Vs the big four: The relationship between Myers-Briggs Type Indicator (MBTI) and NEO-PI five factor model of personality (1996) Pers Indiv Differ, 21 (2), pp. 303-307; Gallis, H., Arisholm, E., Dyba, T., An initial framework for research on pair programming (2003) Proc. of the International Symposium on Empirical Software Engineering (ISESE'03), pp. 132-142; Goldberg, L.R., Johnson, J.A., Eber, H.W., Hogan, R., Ashton, M.C., Cloninger, C.R., The international personality item pool and the future of public-domain personality measures (2006) J Res Pers, 40 (1), pp. 84-96; Gorla, N., Lam, Y.W., Who should work with whom? Building effective software project teams (2004) Comm ACM, 47 (6), pp. 79-82; Gosling, S.D., Vazire, S., Srivastava, S., John, O.P., Should we trust web-based studies? A comparative analysis of six preconceptions about Internet questionnaires (2004) Am Psychol, 59 (2), pp. 93-104; Hanks, B., Student attitudes toward pair programming (2006) Proceedings of the 11th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education (ITiCSE06), pp. 113-117; Hannay, J.E., Arisholm, E., Engvik, H., Sjoberg, D.I.K., Effects of personality on pair programming (2010) IEEE Trans Software Eng, 36 (1), pp. 61-80; Hicks, L., Conceptual and empirical analysis of some assumptions of an explicitly technological theory (1984) J Pers Soc Psychol, 46, pp. 1118-1131; Ho, C.-W., (2004) Examining Impact of Pair Programming on Female Students (No. TR-2004-20), , Raleigh, NC: North Carolina State University; Hsu, B.-F., Wu, W.-L., Yeh, R.-S., Personality composition, affective tie, and knowledge sharing: A team level analysis (2007) Proceedings of the Portland International Center for Management of Engineering and Technology (PICMET 2007), pp. 2583-2592; John, O.P., Srivastava, S., The big five trait taxonomy: History, measurement and theoretical perspectives (1999) Handbook of Personality: Theory and Research, pp. 102-138. , L.A. Pervin O. John (eds) The Guilford Press New York/London; Johnson, J.A., Ascertaining the validity of individual protocols from Web-based personality inventories (2005) J Res Pers, 39, pp. 103-128; Johnson, J.A., (2008) The IPIP-NEO Personality Assessment Tools, , http://www.personal.psu.edu/j5j/IPIP/; Juristo, N., Moreno, A.M., (2001) Basics of Software Engineering Experimentation, , Kluwer Academic Publishers Boston 0973.68656; Karn, J.S., Cowling, T., A follow up study of the effect of personality on the performance of software engineering teams (2006) Proceedings of the ISESE'06, pp. 232-241; Katira, N., Williams, L., Wiebe, E., Miller, C., Balik, S., Gehringer, E., On understanding compatibility of student pair programmers (2004) SIGCSE Bull, 36 (1), pp. 7-11; Keirsey, D., (1998) Please Understand Me II, , Prometheus Nemesis Book Del Mar; Keirsey, D., Bates, M., (1984) Please Understand Me, , Prometheus Nemesis Book Del Mar; Kichuk, S.L., Wiesner, W.H., The big five personality factors and team performance: Implications for selecting successful product design teams (1997) J Eng Technol Manage, 14, pp. 195-221; Lan, L., Lian, Z., Application of statistical power analysis - How to determine the right sample size in human health, comfort, and productivity research (2010) Build Environ, 45, pp. 1202-1213; Layman, L., Changing students' perceptions: An analysis of the supplementary benefits of collaborative software development (2006) Proceedings of the 19th Conference on Software Engineering Education & Training (CSEET'06), pp. 159-166; Leech, N.L., Barrett, K.C., Morgan, G.A., (2005) SPSS for Intermediate Statistics: Use and Interpretation, , 2 Lawrence Erlbaum Associates Mahwah; Leedy, P.D., Ormrod, J.E., (2005) Practical Research Planning and Design, , 8th edn. Pearson Merril Prentice Hall; Lepine, J.A., Team adaptation and postchange performance: Effects of team composition in terms of members' cognitive ability and personality (2003) J Appl Psychol, 88 (1), pp. 27-39; Levine, J.M., Moreland, R.L., Progress in small group research (1990) Annu Rev Psychol, 41, pp. 585-634; Lounsbury, J.W., Sundstrom, E., Loveland, J.M., Gibson, L.W., Intelligence, big Five personality traits, and work drive as predictors of course grade (2003) Pers Indiv Differ, 35, pp. 1231-1239; Matzler, K., Renzl, B., Muller, J., Herting, S., Mooradian, T.A., Personality traits and knowledge sharing (2008) J Econ Psychol, 29, pp. 301-313; McCrae, R.R., Costa, P.T., Reinterpreting the Myers-Briggs Type Indicator from the perspective of the five-factor model of personality (1989) J Pers, 57 (1), pp. 17-40; McCrae, R.R., Costa, P.T., Personality trait structure as a human universal (1997) Am Psychol, 52, pp. 509-516; McCrae, R.R., John, O.P., An introduction to the five-factor model and its application (1992) J Pers, 60 (2), pp. 175-215; McDowell, C., Werner, L., Bullock, H.E., Fernald, J., The impact of pair programming on student performance, perception and persistence (2003) Proceedings of the 25th International Conference on Software Engineering (ICSE'03), pp. 602-607; Morgan, G.A., Leech, N.L., Gloeckner, G.W., Barrett, K.C., (2004) SPSS for Introductory Statistics. Use and Interpretation, , 2 Lawrence Erlbaum Associates, Inc New Jersey; Murphy, K.R., Myors, B., (2003) Statistical Power Analysis: A Simple and General Model for Traditional and Modern Hypothesis Tests, , 2 Lawrence Erlbaum Associates New Jersey; Myers, J.L., Well, A.D., (2003) Research Design and Statistical Analysis, , 2 Lawrence Erlbaum Associates, Inc New Jersey; Myers, I.B., McCaulley, M.H., Quenk, N.L., Hammer, A., (1998) MBTI Manual (A Guide to the Development and Use of the Myers Briggs Type Indicator), , 3rd edn. Consulting Psychologists Press; Neuman, G.A., Wagner, S.H., Christiansen, N.D., The relationship between work-team personality composition and the job performance of teams (1999) Group & Organization Management, 24 (1), pp. 28-45; Nguyen, N.T., Allen, L.C., Fraccastoro, K., Personality predicts academic performance: Exploring the moderating role of gender (2005) J High Educ Pol Manag, 27 (1), pp. 105-116; Norman, G., Likert scales, levels of measurement and the laws of statistics (2010) Advances in Health Science Education (Online First); O'Connor, M.C., Paunonen, S.V., Big five personality predictors of post-secondary academic performance (2007) Pers Indiv Differ, 43, pp. 971-990; Pallant, J.F., (2007) SPSS Survival Manual: A Step by Step Guide to Data Analysis Using SPSS for Windows (Version 15), , 3 Allen & Unwin Crows Nest; Paunonen, S.V., Ashton, M.C., Big five predictors of academic achievement (2001) J Res Pers, 35, pp. 78-90; Peeters, M.A.G., Tuijil, H., Rutte, C.G., Reymen, I., Personality and team performance: A meta-analysis (2006) Eur J Pers, 20, pp. 377-396; Peslak, A.R., The impact of personality on information technology team projects (2006) Proceedings of the SIGMIS-CPR'06, pp. 273-279; Pfleeger, S.L., Experimental design and analysis in software engineering (1995) Ann Software Eng, 1 (1), pp. 219-253; Philips, P., Abraham, C., Bond, R., Personality, cognition, and university students' examination performance (2003) Eur J Pers, 17, pp. 435-448; Pieterse, V., Kourie, D.G., Software engineering team diversity and performance (2006) Proceedings of the South African Institute for Computer Scientists and Information Technologists (SAICSIT), pp. 180-186; Poropat, A.E., A meta-analysis of the five-factor model of personality and academic performance (2009) Psychol Bull, 135 (2), pp. 322-338; Pulford, B.D., Sohal, H., The influence of personality on higher education students' confidence in their academic abilities (2006) Pers Indiv Differ, 41 (8), pp. 1409-1419; Puus, U., Seeba, A., Salumaa, P., Heiberg, S., Analyzing pair-programmer's satisfaction with the method, the result, and the partner (2004) LNCS, 3092, pp. 246-249. , Proceedings of the 5th International Conference on Extreme Programming and Agile Processes in Software Engineering (XP 2004); Rutherfoord, R.H., Using personality inventories to help form teams for software engineering class projects (2001) Proc ITiCSE, 2001, pp. 73-76; Salleh, N., Mendes, E., Grundy, J., Burch, G.S.J., An empirical study of the effects of personality in pair programming using the five-factor model (2009) Proceedings of the 3rd ACM-IEEE Int'l Symposium on Empirical Software Engineering & Measurement (ESEM 2009), pp. 214-225; Salleh, N., Mendes, E., Grundy, J., Burch, G.S.J., An empirical study of the effects of conscientiousness in pair programming using the five-factor personality model (2010) Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering (ICSE 2010), 1, pp. 577-586; Salleh, N., Mendes, E., Grundy, J., Burch, G.S.J., The effects of neuroticism on pair programming: An empirical study in the higher education context (2010) Proceedings of the 4th ACM-IEEE Int'l Symposium on Empirical Software Engineering and Measurement (ESEM 2010); Salleh, N., Mendes, E., Grundy, J., Empirical studies of pair programming for CS/SE teaching in higher education: A systematic literature review (2011) IEEE Trans Software Eng, 37 (4), pp. 509-525; Salleh, N., Mendes, E., Grundy, J., The effects of openness to experience on pair programming in a higher education context (2011) Proceedings of the 24th IEEE-CS Conference on Software Engineering Education and Training (CSEET2011), , Honolulu, Hawaii, IEEE Computer Society; Saulsman, L.M., Page, A.C., Can trait measures diagnose personality disorders? (2003) Curr Opin Psychiatr, 16 (1), pp. 83-88; Schmitt, N., The interaction of neuroticism and gender and its impact on self-efficacy and performance (2008) Hum Perform, 21, pp. 49-61; Schriesheim, C., Hinkin, T., Podsakoff, P., Can ipsative and single-item measures produce erroneous results in field studies of French & Raven's (1959) five bases of power? (1991) J Appl Psychol, 76, pp. 106-144; Sfetsos, P., Stamelos, I., Angelis, L., Deligiannis, I., Investigating the impact of personality types on communication and collaboration-viability in pair programming - An empirical study (2006) LNCS, 4044, pp. 43-52. , Proceedings of the 7th International Conference on Extreme Programming and Agile Processes in Software Engineering (XP 2006); Sfetsos, P., Stamelos, I., Angelis, L., Deligiannis, I., An experimental investigation of personality types impact on pair effectiveness in pair programming (2009) Empir Software Eng, 14 (2), pp. 187-226; Tabachnick, B.G., Fidell, L.S., (2001) Using Multivariate Statistics, , 4 Allyn and Bacon Boston; Thomas, L., Ratcliffe, M., Robertson, A., Code warriors and code-A-phobes: A study in attitude and pair programming (2003) SIGCSE Bull, 35 (1), pp. 363-367; Trochim, W.M.K., (2006) Research Methods Knowledge Base, , http://www.socialresearchmethods.net/kb/considea.php, 2nd edn. version current as of October 20, 2006; Walle, T., Hannay, J.E., Personality and the nature of collaboration in pair programming (2009) Proceedings of the 3rd Int'l Symp. Empirical Software Engineering & Measurement (ESEM 2009), pp. 203-213; Weinberg, G.M., (1971) The Psychology of Computer Programming, , Van Nostrand Reinhold New York; Whyte, J.J., The use of surrogate outcome measures. A case study: Home prothrombin monitors (2006) Clinical Evaluation of Medical Devices: Principles and Case Studies, , K.M. Becker J.J. Whyte (eds) 2 Humana Press New Jersey; Williams, L., Kessler, R.R., Cunningham, W., Jeffries, R., Strengthening the case for pair programming (2000) IEEE Software, 17 (4), pp. 19-25; Williams, L., McDowell, C., Nagappan, N., Fernald, J., Werner, L., Building pair programming knowledge through a family of experiments (2003) Proceedings 2003 International Symposium on Empirical Software Engineering (ISESE 2003), pp. 143-152; Williams, L., Layman, L., Osborne, J., Katira, N., Examining the compatibility of student pair programmers (2006) Proceedings of the Conference on AGILE 2006 (AGILE'06), pp. 411-420. , IEEE Computer Society; Yuan, K., Maxwell, S., On the post hoc power in testing mean differences (2005) J Educ Behav Stat, 30 (2), pp. 141-167},
  review                  = {{E C4 C5 C8}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899922965&doi=10.1007%2fs10664-012-9238-4&partnerID=40&md5=71a01ce04a869226a69c60d9c9a0dfa6},
}

@Conference{Santos20151472,
  author              = {Santos, J.A.M. and De Mendonça, M.G.},
  title               = {Exploring decision drivers on god class detection in three controlled experiments},
  year                = {2015},
  editor              = {Shin D.},
  volume              = {13-17-April-2015},
  pages               = {1472-1479},
  publisher           = {Association for Computing Machinery},
  note                = {cited By 0; Conference of 30th Annual ACM Symposium on Applied Computing, SAC 2015 ; Conference Date: 13 April 2015 Through 17 April 2015; Conference Code:117701},
  abbrev_source_title = {Proc ACM Symp Appl Computing},
  abstract            = {Context: Code smells define potential problems in design of software. However, some empirical studies on the topic have shown findings in opposite direction. The misunderstanding is mainly caused by lack of works focusing on human role on code smell detection. Objective: Our aim is to build empirical support to exploration of the human role on code smell detection. Specifically, we investigated what issues in code make a human identify a class as a code smell. We called these issues decision drivers. Method: We performed a controlled experiment and replicated it twice. We asked participants to detect god class (one of the most known smell) on different software, indicating what decision drivers they adopted. Results: The stronger drivers were "class is high complex" and "method is misplaced". We also found the agreement on drivers' choice is low. Another finding is: some important drivers are dependent of alternative support. In our case, "dependency" was an important driver only when visual resources were permitted. Conclusion: This study contributes with the comprehension of the human role on smell detection through the exploration of decision drivers. This perception contributes to characterize what we called the "code smell conceptualization problem". Copyright 2015 ACM.},
  affiliation         = {Technology Department, State University of Feira de Santana, Bahia, Brazil; Fraunhofer Project Center for Software and Systems Eng., Federal University of Bahia, Bahia, Brazil},
  author_keywords     = {Code smell; Controlled experiment; God class},
  document_type       = {Conference Paper},
  doi                 = {10.1145/2695664.2695682},
  isbn                = {9781450331968},
  journal             = {Proceedings of the ACM Symposium on Applied Computing},
  keywords            = {Computation theory, Code smell; Controlled experiment; Design of softwares; Empirical studies; God class; Potential problems, Codes (symbols)},
  language            = {English},
  references          = {Abbes, M., Khomh, F., Guéhéneuc, Y.-G., Antoniol, G., An empirical study of the impact of two antipatterns, blob and spaghetti code, on program comprehension (2011) Proc. of 15th CSMR; Carneiro, G., Silva, M., Maia, L., Figueiredo, E., SantÀnna, C., Garcia, A., Mendonça, M., Identifying code smells with multiple concern views (2010) Proc. of the 1th CBSOFT; Carneiro, G.F., Mendonça, M.G., Sourceminer-A multi-perspective software visualization environment (2013) Proc. of the 15th ICEIS; Feinstein, A.R., Cicchetti, D.V., High agreement but low kappa: I. The problems of two paradoxes (1990) Journal of Clinical Epidemiology, 43 (6), pp. 543-549; Finn, R.H., A note on estimating the reliability of categorical data (1970) Educational and Psychological Measurement, 30, pp. 71-76; Fleiss, J., Measuring nominal scale agreement among many raters (1971) Psychological Bulletin, 76 (5), pp. 378-382; Fowler, M., (1999) Refactoring: Improving the Design of Existing Code, , Addison-Wesley Longman; Gwet, K., Kappa statistic is not satisfactory for assessing the extent of agreement between raters (2002) Statistical Methods for Inter-rater Reliability Assessment, 1, pp. 1-5; Landis, J.R., Koch, G.G., The measurement of observer agreement for categorical data (1977) Biometrics, 33 (1), pp. 159-174; Lanza, M., Marinescu, R., (2005) Object-Oriented Metrics in Practice, , Springer-Verlag; Li, W., Shatnawi, R., An empirical study of the bad smells and class error probability in the post-release object-oriented system evolution (2007) Journal of Systems and Software, 80 (7), pp. 1120-1128. , July; Macia, I., Garcia, J., Popescu, D., Garcia, A., Medvidovic, N., Von Staa, A., Are automatically-detected code anomalies relevant to architectural modularity?: An exploratory analysis of evolving systems (2012) Proc. of the 11th AOSD; Mäntylä, M.V., Lassenius, C., Drivers for software refactoring decisions (2006) Proc. of 5th ISESE; Moonen, L., Yamashita, A., Do code smells reect important maintainability aspects? (2012) Proc. of 28th ICSM; Olbrich, S.M., Cruzes, D.S., Sjøberg, D.I.K., Are all code smells harmful? a study of god classes and brain classes in the evolution of three open source systems (2010) Proc. of the 26th ICSM; Padilha, J., Figueiredo, E., Sant'Anna, C., Garcia, A., Detecting god methods with concern metrics: An exploratory study (2013) Proc. of the 7th LA-WASP, Co-allocated with CBSoft; Powers, D., The problem with kappa (2012) EACL 2012, pp. 345-355; Riel, A.J., (1996) Object-Oriented Design Heuristics, , Addison-Wesley, 1st edition; Santos, J.A., De Mendonça, M.G., Dos Santos, C.P., Novais, R.L., The problem of conceptualization in god class detection: Agreement, strategies and decision drivers (2014) Journal of Software Engineering Research and Development (JSERD, 2 (11), pp. 1-33; Santos, J.A., Mendonça, M., Identifying strategies on god class detection in two controlled experiments (2014) Proc. of the 26th SEKE; Santos, J.A., Mendonça, M., Silva, C., An exploratory study to investigate the impact of conceptualization in god class detection (2013) Proc. of the 17th EASE; Schumacher, J., Zazworka, N., Shull, F., Seaman, C., Shaw, M., Building empirical support for automated code smell detection (2010) Proc. of the 4th ESEM; Sjøberg, D., Yamashita, A., Anda, B., Mockus, A., Dyba, T., Quantifying the effect of code smells on maintenance effort (2013) IEEE Transactions on Software Engineering, 39 (8), pp. 1144-1156; Whitehurst, G.J., Interrater agreement for journal manuscript review (1984) American Psychologist, 39 (1), pp. 22-28; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M., Regnell, B., Wesslén, A., (2012) Experimentation in Software Engineering, , Springer Berlin; Yamashita, A., Counsell, S., Code smells as system-level indicators of maintainability: An empirical study (2013) Journal of Systems and Software, 86 (10), pp. 2639-2653; Zhang, M., Hall, T., Baddoo, N., Code bad smells: A review of current knowledge (2011) Software Maintenance and Evolution: Research and Practice, 23 (3), pp. 179-202},
  review              = {{E C5}},
  source              = {Scopus},
  sponsors            = {ACM Special Interest Group on Applied Computing (SIGAPP)},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955479553&doi=10.1145%2f2695664.2695682&partnerID=40&md5=0b1c85ecddb35e716e2c40c59814318e},
}

@Article{Scanniello20151666,
  author                  = {Scanniello, G. and Marcus, A. and Pascale, D.},
  title                   = {Link analysis algorithms for static concept location: an empirical assessment},
  journal                 = {Empirical Software Engineering},
  year                    = {2015},
  volume                  = {20},
  number                  = {6},
  pages                   = {1666-1720},
  issn                    = {13823256},
  note                    = {cited By 6},
  abbrev_source_title     = {Empir Software Eng},
  abstract                = {During software evolution, one of the most important comprehension activities is concept location in source code, as it identifies the places in the code where changes are to be made in response to a modification request. Change requests (such as, bug fixing or new feature requests) are usually formulated in natural language, while the source code also includes large amounts of text. In consequence, many of the existing concept location techniques are based on text search or text retrieval. Such approaches reformulate concept location as a document retrieval problem. We refine and improve such solutions by leveraging dependencies between source code elements. Dependency information is used by a link analysis algorithm to rank the document space and to improve concept location based on text retrieval. We implemented our solution to concept location using the PageRank algorithm, used in web document retrieval applications. The results of an empirical evaluation indicate that the new approach leads to better retrieval performance than baseline approaches that use text retrieval and clustering. In addition, we present the results of a controlled experiment and of a differentiated replication to assess whether the new technique supports users in identifying the places in the code where changes are to be made. The results of these experiments revealed that the users exploiting our technique were significantly better supported in the identification of the code to be changed in response to a bug fixing request compared to the users who did not use this technique. © 2014, Springer Science+Business Media New York.},
  affiliation             = {Dipartimento di Matematica, Informatica e Economia, University of Basilicata, Potenza, Italy; Department of Computer Science, University of Texas at Dallas, Richardson, TX, United States},
  author_keywords         = {Concept location; Controlled experiments; Empirical study; Experiments; Information retrieval},
  coden                   = {ESENF},
  correspondence_address1 = {Scanniello, G.; Dipartimento di Matematica, Informatica e Economia, University of BasilicataItaly},
  document_type           = {Article},
  doi                     = {10.1007/s10664-014-9327-7},
  keywords                = {Algorithms; Codes (symbols); Computer programming languages; Experiments; Location; Natural language processing systems, Concept locations; Controlled experiment; Dependency informations; Empirical evaluations; Empirical studies; Link analysis algorithms; Modification requests; Web Document Retrieval, Information retrieval},
  language                = {English},
  publisher               = {Kluwer Academic Publishers},
  references              = {Abadi, A., Nisenson, M., Simionovici, Y., (2008) A traceability technique for specifications. In: International conference on program comprehension, pp. 103-112. , IEEE CS Press, Washington, DC; Abrahão, S., Gravino, C., Pelozo, E.I., Scanniello, G., Tortora, G., Assessing the effectiveness of sequence diagrams in the comprehension of functional requirements: results from a family of five experiments (2013) IEEE Trans Soft Eng, 39 (3), pp. 327-342; Ali, N., Sabane, A., Guéhéneuc, Y.-G., Antoniol G (2012) Improving bug location using binary class relationships Proceedings of international working conference on source code analysis and manipulation (SCAM), pp. 174-183. , IEEE Computer Society, Washington, DC; Aranda, J., Ernst, N., Horkoff, J., Easterbrook, S., A framework for empirical evaluation of model comprehensibility. In: Proceedings of modeling in software engineering. ICSE Workshop, pp 7–13 (2007) IEEE; Arisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance: an experimental evaluation (2006) IEEE Trans Soft Eng, 32, pp. 365-381; Bajracharya, S.K., Ngo, T.C., Linstead, E., Dou, Y., Rigor, P., Baldi, P., Lopes, C.V., Sourcerer: a search engine for open source code supporting structure-based search. In: Tarr PL, Cook WR (eds) Companion to the 21th annual ACM SIGPLAN conference on object-oriented programming, systems, languages, and applications (OOPSLA), Portland, pp 681–682 (2006) ACM; Basili, V., Caldiera, G., (1994) Rombach DH, , The goal question metric paradigm, encyclopedia of software engineering, Wiley; Basili, V.R., Shull, F., Lanubile, F., Building knoledge through families of experiments (1999) In, , IEEE Transactions on Software Engineering, IEEE; Beard, M., Kraft, N., Etzkorn, L., Lukins, S., (2011) Measuring the accuracy of information retrieval based bug localization techniques. In: Proceedings of working conference on reverse engineering (WCRE), pp. 124-128. , IEEE Computer Society, Washington, DC; Briand, L.C., Labiche, Y., Di Penta, M., Yan-Bondoc, H., An experimental investigation of formality in UML-based development (2005) IEEE Trans Soft Eng, 31 (10), pp. 833-849; Brien, M.P.O., Buckley J (2005) Modelling the information-seeking behaviour of programmers - an empirical approach, pp. 125-134. , In: Proceedings of workshop on program comprehension (IWPC). IEEE Computer Society; Brin, S., Page, L., (1998) The anatomy of a large-scale hypertextual web search engine. In: Proceedings of the seventh international conference on World Wide Web 7, (WWW7), pp. 107-117. , Elsevier, Amsterdam; Buckner, J., Buchta, J., Petrenko, M., Jripples V (2005) Rajlich: a tool for program comprehension during incremental change. In, pp. 149-152. , Proceedings of international workshop on program comprehension: IWPC). IEEE Computer Society; Carver, J., Jaccheri, L., Morasca, S., Shull, F., (2003) Issues in using students in empirical studies in software engineering education. In: Proceedings of international symposium on software metrics, pp. 239-250. , IEEE Computer Society, Washington, DC; Chan, W.-K., Cheng, H., Lo D (2012) Searching connected API subgraph via text phrases Proceedings of symposium on the foundations of software engineering, p. 10. , SIGSOFT FSE, ACM; Chen, K., Rajlich, V., Case study of feature location using dependence graph. In: Proc. of 8th international workshop on program comprehension (2000) pp 241–247; Ciolkowski, M., Muthig, D., Rech, J., (2004) Using academic courses for empirical validation of software development processes. In: Proceedings of EUROMICRO Conference, pp. 354-361. , IEEE Computer Society, Washington, DC; Cliff, N., Dominance statistics: ordinal analyses to answer ordinal questions (1993) Psychol Bull, 114 (3), pp. 494-509; Cohen, J., (1988) Statistical power analysis for the behavioral sciences, , Lawrence Earlbaum Associates, Hillsdale; Colosimo, M., De Lucia, A., Scanniello, G., Tortora, G., Evaluating legacy system migration technologies through empirical studies (2009) Inf Soft Technol, 51 (12), pp. 433-447; Conover, W.J., Practical Nonparametric Statistics, 3rd edn (1998) Wiley; Deerwester, S.C., Dumais, S.T., Landauer, T.K., Furnas, G.W., Harshman, R.A., Indexing by latent semantic analysis (1990) J Am Soc Inf Sci, 41 (6), pp. 391-407; Devore, J.L., Farnum, N., Applied statistics for engineers and scientists (1999) Duxbury; De Lucia, A., Oliveto, R., Tortora, G., Assessing ir-based traceability recovery tools through controlled experiments (2009) Empirical Softw Eng, 14 (1), pp. 57-92; Dit, B., Revelle, M., Poshyvanyk, D., Integrating information retrieval, execution and link analysis algorithms to improve feature location in software (2013) Empirical Softw Engg, 18 (2), pp. 277-309; Dit, B., Revelle, M., GethersM, Poshyvanyk D (2013) Feature location in source code: a taxonomy and survey. Journal of Software: Evolution and Process, 25 (1), pp. 53-95; Dunn, O.J., Multiple comparisons among means (1961) J Am Stat Assoc, 56, pp. 52-64; Eaddy, M., Aho, A.V., Antoniol, G., Guéhéneuc, Y.-G., (2008) Cerberus: tracing requirements to source code using information retrieval, dynamic analysis, and program analysis. In: Proceedings of international conference on program comprehension, ICPC ’08, pp. 53-62. , IEEE Computer Society, Washington, DC; Ellis, P., The essential guide to effect sizes: statistical power, meta-analysis, and the interpretation of research results (2010) Cambridge University Press; Gay, G., Haiduc, S., Marcus, A., Menzies, T., (2009) On the use of relevance feedback in IR-based concept location. In: Proceedings of international conference on software maintenance, pp. 351-360. , IEEE Computer Society, Washington, DC; Gold, N., Harman, M., Li, Z., Mahdavi, K., (2006) Allowing overlapping boundaries in source code using a search based approach to concept binding. In: Proceedings of international conference on software maintenance, (ICSM), pp. 310-319. , IEEE Computer Society, Washington, DC; Grant, S., Cordy, J.R., Skillicorn, D., Automated concept location using independent component analysis Proceedings of working conference on reverse engineering WCRE (2008), pp. 138-142. , IEEE Computer Society, Washington, DC; Gravino, C., Risi, M., Scanniello, G., Tortora, G., Do professional developers benefit from design pattern documentation? A replication in the context of source code comprehension. In: Proceedings of conference on model driven engineering languages and systems, lecture notes in computer science, Springer (2012) pp 185–201; Grechanik, M., Fu, C., Xie, Q., McMillan, C., Poshyvanyk, D., Cumby, C., A search engine for finding highly relevant applications (2010) Proceedings of international conference on software engineering, ICSE, 1. , ACM, New York; Haiduc, S., Bavota, G., Marcus, A., Oliveto, R., De Lucia, A., Menzies, T., (2013) Automatic query reformulations for text retrieval in software engineering. In: Proceedings of international conference on software engineering, ICSE, pp. 842-851. , IEEE Press, Piscataway; Hannay, J., Jørgensen, M., The role of deliberate artificial design elements in software engineering experiments (2008) IEEE Trans Softw Eng, 34 (2), pp. 242-259; Harman, M., Gold, N., Hierons, R.M., Binkley, D., (2002) Code extraction algorithms which unify slicing and concept assignment. In: Proceedings of working conference on reverse engineering, WCRE, pp. 11-21. , IEEE Computer Society, Richmond; Hill, E., Pollock, L., Vijay-Shanker, K., Exploring the neighborhood with dora to expedite software maintenance. In: Proceedings of international conference on automated software engineering (2007) ASE, , ACM, New York; Inoue, K., Yokomori, R., Yamamoto, T., Matsushita, M., Kusumoto, S., Ranking significance of software components based on use relations (2005) IEEE Trans Softw Eng, 31 (3), pp. 213-225; Juristo, N., Moreno, A., (2001) Basics of software engineering experimentation, , Kluwer Academic Publishers, Englewood Cliffs; Kampenes, V.B., Dybå, T., Hannay, J.E., Sjøberg, D.I.K., A systematic review of effect size in software engineering experiments (2007) Inf Soft Technol, 49 (11-12), pp. 1073-1086; Kitchenham, B., Al-Khilidar, H., Babar, M., Berry, M., Cox, K., Keung, J., Kurniawati, F., Zhu, L., Evaluating guidelines for reporting empirical software engineering studies (2008) Empir Soft Eng, 13, pp. 97-121; Ko, A.J., Myers, B.A., Coblenz, M.J., Aung, H.H., An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks (2006) IEEE Trans Soft Eng, 32 (12), pp. 971-987; Li, Z., Identifying high-level dependence structures using slice-based dependence analysis. In: 25th IEEE international conference on software maintenance (ICSM). Edmonton, pp 457–460 (2009) IEEE; Lukins, S.K., Kraft, N.A., Etzkorn, L.H., (2008) Source code retrieval for bug localization using latent dirichlet allocation. In: Proceedings of working conference on reverse engineering, WCRE, pp. 155-164. , IEEE Computer Society, Washington, DC; Lukins, S.K., Kraft, N.A., Etzkorn, L.H., Bug localization using latent dirichlet allocation (2010) Inf Softw Technol, 52 (9), pp. 972-990; Manning, C.D., Raghavan, P., Schtze, H., (2008) Introduction to information retrieval, , Cambridge University Press, New York; Marcus, A., Haiduc, S., Text retrieval approaches for concept location in source code. In: Software engineering, volume 7171 of lecture notes in computer science. Springer (2013) pp 126–158; Marcus, A., Maletic, J., (2003) Recovering documentation-to-source-code traceability links using latent semantic indexing. In: Proceedings of international conference on software engineering, ICSE, pp. 124-135. , IEEE Computer Society, Portland; Marcus, A., Sergeyev, A., Rajlich, V., Maletic, J.I., (2004) An information retrieval approach to concept location in source code. In: Proceedings of working conference on reverse engineering, WCRE’ 04, pp. 214-223. , IEEE Computer Society, Washington, DC; McMillan, C., Grechanik, M., Poshyvanyk, D., Xie, Q., Fu, C., Portfolio: finding relevant functions and their usage. In: Proceedings of International Conference on Software Engineering (2011) ICSE, , ACM, New York; McMillan, C., Grechanik, M., Poshyvanyk, D., Fu, C., Xie, Q., Exemplar: a source code search engine for finding highly relevant applications (2012) IEEE Trans Soft Eng, 38 (5), pp. 1069-1087; Moreno, L., Bandara, W., Haiduc, S., Marcus, A., On the relationship between the vocabulary of bug reports and source code (2013) In: International conference on software maintenance, , ICSM: IEEE Computer Society; Ngomo, A.C.N., Low-bias extraction of domain-specific concepts (2009) Ph.D Thesis; Oppenheim, A.N., (1992) Questionnaire design, interviewing and attitude measurement, , Pinter, London; Panichella, A., McMillan, C., Moritz, E., Palmieri, D., Oliveto, R., Poshyvanyk, D., De Lucia, A., (2013) When and how using structural information to improve ir-based traceability recovery. In: European conference on software maintenance and reengineering, CSMR, pp. 199-208. , IEEE Computer Society, Washington, DC; Petrenko, M., Rajlich, V., Concept location using program dependencies and information retrieval (depir) (2013) Inf Softw Technol, 55 (4), pp. 651-659; Poshyvanyk, D., Gethers, M., Marcus, A., (2013) ACM Trans Softw Eng Methodol, 21 (4), pp. 1-34; Poshyvanyk, D., Marcus, A., (2007) Combining formal concept analysis with information retrieval for concept location in source code. In: Proceedings of the 15th ieee international conference on program comprehension, ICPC, pp. 37-48. , IEEE Computer Society, Washington, DC; Puppin, D., Silvestri, F., The social network of java classes. In: Proceedings of symposium on applied computing (2006) (SAC), , ACM, New York; Rajlich, V., Wilde, N., (2002) The role of concepts in program comprehension. In: Proceedings of international workshop on program comprehension, IWP, pp. 271-278. , IEEE Computer Society, Washington, DC; Revelle, M., Dit, B., Poshyvanyk, D., (2010) Using data fusion and web mining to support feature location in software. In: Proceedings of international conference on program comprehension, ICPC, pp. 14-23. , IEEE Computer Society, Washington, DC; Ricca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M., How developers’ experience and ability influence Web application comprehension tasks supported by UML stereotypes: a series of four experiments (2010) IEEE Trans Soft Eng, 36 (1), pp. 96-118; Robillard, M.P., Topology analysis of software dependencies (2008) ACM Trans Softw Eng Methodol, 17 (4), pp. 1-36; Romano, J., Kromrey, J.D., Coraggio, J., Skowronek, J., Appropriate statistics for ordinal level data: should we really be using t-test and cohen’s d for evaluating group differences on the nsse and other surveys? (2006) In: Annual meeting of the Florida association of institutional research; Salton, G., McGill, M.J., (1983) Introduction to modern information retrieval, , McGraw Hill, New York; Scanniello, G., D’Amico, A., D’Amico, C., D’Amico, T., (2010) Using the kleinberg algorithm and vector space model for software system clustering. In: International conference on program comprehension, ICPC, pp. 180-189. , IEEE Computer Society, Washington, DC; Scanniello, G., Gravino, C., Genero, M., Cruz-Lemus, J.A., Tortora, G., On the impact of UML analysis models on source code comprehensibility and modifiability (2014) ACM Trans Sofw Eng Meth, 23 (2), pp. 1-26; Scanniello, G., Gravino, C., Tortora, G., Investigating the role of UML in the software modeling and maintenance - a preliminary industrial survey. In: Proceedings of the international conference on enterprise information systems (2010) pp 141–148; Scanniello, G., Marcus, A., (2011) Clustering support for static concept location in source code. In: Proceedings of international conference on program comprehension, ICPC, pp. 1-10. , IEEE Computer Society, Washington, DC; Seaman, C.B., (2002) The information gathering strategies of software maintainers. In: Proceedings of the international conference on software maintenance, ICSM, pp. 141-149. , IEEE Computer Society, Washington, DC; Shapiro, S., Wilk, M., An analysis of variance test for normality (1965) Biometrika, 52 (3-4), pp. 591-611; Shull, F.J., Carver, J.C., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empir Soft Eng, 13 (2), pp. 211-218; Sjoberg, D.I.K., Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanovic, A., Liborg, N., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE Trans Soft Eng, 31 (9), pp. 733-753; Wang, J., Peng, X., Xing, Z., Zhao W (2011) An exploratory study of feature location process: distinct phases, recurring patterns, and elementary actions. In, pp. 213-222. , Proceedings of international conference on software maintenance: ICSM. IEEE Computer Society; Wang, S., Lo, D., Jiang L (2011) Code search via topic-enriched dependence graph matching. In, pp. 119-123. , Working conference on reverse engineering: WCRE. IEEE Computer Society; Wang, S., Lo, D., Xing, Z., Jiang L (2011) Concern localization using information retrieval: an empirical study on linux kernel. In, pp. 92-96. , Proceedings of working conference on reverse engineering: WCRE. IEEE Computer Society; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M., Regnell, B., Wesslén, A., Experimentation in software engineering (2012) Springer; Zhao, W., Zhang, L., Liu, Y., Sun, J., Yang, F., (2004) Sniafl: towards a static non-interactive approach to feature location. In: Proceedings of international conference on software engineering, ICSE, pp. 293-303. , IEEE Computer Society, Washington, DC; Zhou, J., Zhang, H., Lo, D., (2012) Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports. In, pp. 14-24. , International conference on software engineering: ICSE. IEEE},
  review                  = {{E C4 C6}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944355844&doi=10.1007%2fs10664-014-9327-7&partnerID=40&md5=62ab1dc12aa6fb819edfd03e4a0ea2d7},
}

@Article{Scanniello2015,
  author                  = {Scanniello, G. and Gravino, C. and Risi, M. and Tortora, G. and Dodero, G.},
  title                   = {Documenting design-pattern instances: A family of experiments on source-code comprehensibility},
  journal                 = {ACM Transactions on Software Engineering and Methodology},
  year                    = {2015},
  volume                  = {24},
  number                  = {3},
  issn                    = {1049331X},
  note                    = {cited By 4},
  abbrev_source_title     = {ACM Trans. Software Eng. Methodol.},
  abstract                = {Design patterns are recognized as a means to improve software maintenance by furnishing an explicit specification of class and object interactions and their underlying intent [Gamma et al. 1995]. Only a few empirical investigations have been conducted to assess whether the kind of documentation for design patterns implemented in source code affects its comprehensibility. To investigate this aspect, we conducted a family of four controlled experiments with 88 participants having different experience (i.e., professionals and Bachelor, Master, and PhD students). In each experiment, the participants were divided into three groups and asked to comprehend a nontrivial chunk of an open-source software system. Depending on the group, each participant was, or was not, provided with graphical or textual representations of the design patterns implemented within the source code. We graphically documented design-pattern instances with UML class diagrams. Textually documented instances are directly reported source code as comments. Our results indicate that documenting design-pattern instances yields an improvement in correctness of understanding source code for those participants with an adequate level of experience. © 2015 ACM.},
  affiliation             = {DiMIE, University of Basilicata, Viale Dell' Ateneo n. 10, Macchia Romana, Potenza, Italy; Department of Management and Information Technology, University of Salerno, Via Giovanni Paolo II, nr. 132, Fisciano (SA), Italy; Dipartimento di Matematica e Information, University of Salerno, Via Ponte Don Melillo, Fisciano (SA), Italy; Computer Science Department, Free University of Bozen-Bolzano, Dominikanerplatz 3-Piazza Domenicani, 3, Bozen-Bolzano, Italy},
  art_number              = {14},
  author_keywords         = {Controlled experiment; Design patterns; Maintenance; Replications; Software models; Source-code comprehension},
  coden                   = {ATSME},
  correspondence_address1 = {Scanniello, G.; DiMIE, University of Basilicata, Viale Dell' Ateneo n. 10, Italy},
  document_type           = {Article},
  doi                     = {10.1145/2699696},
  keywords                = {Codes (symbols); Computer programming languages; Computer software; Computer software maintenance; Design; Maintenance; Open systems; Software engineering, Controlled experiment; Design Patterns; Replications; Software model; Source code comprehensions, Open source software},
  language                = {English},
  publisher               = {Association for Computing Machinery},
  references              = {Abrahao, S.M., Gravino, C., Pelozo, E.I., Scanniello, G., Tortora, G., Assessing effectiveness of sequence diagrams in the comprehension of functional requirements: Results from a family of five experiments (2013) IEEE Trans. Softw. Engin., 39, p. 3; Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language - Towns, Buildings, Construction, , Oxford University Press; Aranda, J., Ernst, N., Horkoff, J., Easterbrook, S., A framework for empirical evaluation of model comprehensibility (2007) Proceedings of the International Workshop on Modeling in Software Engineering (MISE'07), pp. 7-13. , IEEE Computer Society; Arisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance: An experimental evaluation (2006) IEEE Trans. Softw. Engin., 32 (6), pp. 365-381; Arisholm, E., Gallis, H., Dyba, T., Sjøberg, D.I.K., Evaluating pair programming with respect to system complexity and programmer expertise (2007) IEEE Trans. Softw. Engin., 33 (2), pp. 65-86; Arisholm, E., Sjøberg, D.I.K., Evaluating the effect of a delegated versus centralized control style on the maintainability of object-oriented software (2004) IEEE Trans. Softw. Engin., 30 (8), pp. 521-534; Asuncion, H.U., Francois, F., Taylor, R.N., An end-to-end industrial software traceability tool (2007) Proceedings of the 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC-FSE'07), pp. 115-124. , ACM Press, New York; Baker, R., Modern permutation test software (1995) Randomization Tests, pp. 391-402. , Marcel Dekker; Baldassarre, M.T., Carver, J., Dieste, O., Juristo, N., Replication types: Towards a shared taxonomy (2014) Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering (EASE'14), pp. 181-184. , ACM Press, New York; Basili, V., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) IEEE Trans. Softw. Engin., 25 (4), pp. 456-473; Basili, V.R., Green, S., Laitenberger, O., Lanubile, F., Shull, F., Sørumgard, L.S., Zelkowitz, M.V., The empirical investigation of perspective-based reading (1996) Empir. Softw. Engin., 1 (2), pp. 133-164; Basili, V.R., Rombach, H.D., The TAME project: Towards improvement-oriented software environments (1988) IEEE Trans. Softw. Engin., 14 (6), pp. 758-773; Bauer, M.I., Johnson-laird, P.N., How diagrams can improve reasoning (1993) Psychol. Sci., 4, pp. 372-378; Bennett, K.H., Rajlich, V.T., Software maintenance and evolution: A roadmap (2000) Proceedings of the Conference on the Future of Software Engineering (ICSE'00), pp. 73-87. , ACM Press, New York; Bergersen, G., Sjøberg, D.I.K., Dyba, T., Construction and validation of an instrument for measuring programming skill (2014) IEEE Trans. Softw. Engin., 40 (12), pp. 1163-1184; Bergersen, G.R., Hannay, J.E., Sjøberg, D.I.K., Dyba, T., Karahasanovic, A., Inferring skill from tests of programming performance: Combining time and quality (2011) Proceedings of the International Symposium on Empirical Software Engineering and Measurement (ESEM'11), pp. 305-314. , IEEE Computer Society; Bieman, J., Straw, G., Wang, H., Munger, P., Alexander, R., Design patterns and change proneness: An examination of five evolving systems (2003) Proceedings of the 9th International Software Metrics Symposium (METRIC'03), pp. 40-49. , IEEE Computer Society; Bruegge, B., Dutoit, A.H., (2003) Object-oriented Software Engineering: Using UML, Patterns and Java, , 2nd Ed. Prentice-Hall; Budgen, D., Burn, A.J., Brereton, O.P., Kitchenham, B.A., Pretorius, R., Empirical evidence about the UML: A systematic literature review (2011) Softw. Pract. Exper., 41 (4), pp. 363-392; Carver, J., Jaccheri, L., Morasca, S., Shull, F., Issues in using students in empirical studies in software engineering education (2003) Proceedings of the 9th International Symposium on Software Metrics (METRIC'03), pp. 239-250. , IEEE Computer Society; Ceccato, M., Di Penta, M., Falcarin, P., Ricca, F., Torchiano, M., Tonella, P., A family of experiments to assess the effectiveness and efficiency of source code obfuscation techniques (2014) Empir. Softw. Engin., 19 (4), pp. 1040-1074; Cepeda Porras, G., Gueheneuc, Y.-G., An empirical study on the efficiency of different design pattern representations in UML class diagrams (2010) Empir. Softw. Engin., 15 (5), pp. 493-522; Ciolkowski, M., Muthig, D., Rech, J., Using academic courses for empirical validation of software development processes (2004) Proceedings of the EUROMICRO Conference (EUROMICRO'04), pp. 354-361. , IEEE Computer Society; Cohen, J., (1988) Statistical Power Analysis for the Behavioral Sciences, , L. Erlbaum Associates; Colosimo, M., De Lucia, A., Scanniello, G., Tortora, G., Evaluating legacy system migration technologies through empirical studies (2009) Inf. Softw. Technol., 51 (2), pp. 433-447; Conover, W.J., (1998) Practical Nonparametric Statistics, , 3rd Ed. Wiley; Cronbach, L., Coefficient alpha and the internal structure of tests (1951) Psychometrika, 16 (3), pp. 297-334; Da Silva, F.Q.B., Suassuna, M., Franc, A.A.C.C., Grubb, A.M., Gouveia, T.B., Monteiro, C.V.F., Dos Santos, I.E., Replication of empirical studies in software engineering research: A systematic mapping study (2014) Empir. Softw. Engin., 19 (3), pp. 501-557; Di Penta, M., Cerulo, L., Gueheneuc, Y.-G., Antoniol, G., An empirical study of the relationships between design pattern roles and class change proneness (2008) Proceedings of the International Conference on Software Maintenance (ICSM'08), pp. 217-226. , IEEE Computer Society; Dyba, T., Kampenes, V.B., Sjøberg, D.I.K., A systematic review of statistical power in software engineering experiments (2006) Inf. Softw. Technol., 48 (8), pp. 745-755; Ellis, P., (2010) The Essential Guide to Effect Sizes: Statistical Power, Meta-analysis, and the Interpretation of Research Results, , Cambridge University Press; Erlikh, L., Leveraging legacy system dollars for e-business (2000) IT Profess., 2, pp. 17-23; Erra, U., Scanniello, G., Assessing communication media richness in requirements negotiation (2010) IET Softw., 4 (2), pp. 134-148; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley; Gomez, O.S., Juristo, N., Vegas, S., Replications types in experimental disciplines (2010) Proceedings of the International Symposium on Empirical Software Engineering and Measurement (ESEM'10), pp. 31-310. , ACM Press, New York; Gravino, C., Risi, M., Scanniello, G., Tortora, G., Does the documentation of design pattern instances impact on source code comprehension? Results from two controlled experiments (2011) Proceedings of the Working Conference on Reverse Engineering (WCRE'11), pp. 67-76. , IEEE Computer Society; Gravino, C., Risi, M., Scanniello, G., Tortora, G., Do professional developers benefit from design pattern documentation? A replication in the context of source code comprehension (2012) Proceedings of the 15th International Conference on Model Driven Engineering Languages and Systems (MODELS'12), pp. 185-201. , Springer; Gueheneuc, Y.-G., P-mart: Pattern-like micro architecture repository (2007) Proceedings of the EuroPLoP Focus Group on Pattern Repositories (EuroPLoP'07); Gueheneuc, Y.-G., Antoniol, G., Demima: A multilayered approach for design pattern identification (2008) IEEE Trans. Softw. Engin., 34 (5), pp. 667-684; Hannay, J., Jørgensen, M., The role of deliberate artificial design elements in software engineering experiments (2008) IEEE Trans. Softw. Engin., 34 (2), pp. 242-259; Heer, J., Agrawala, M., Software design patterns for information visualization (2006) IEEE Trans. Visual. Comput. Graph., 12, pp. 853-860; Hochstein, L., Basili, V.R., Zelkowitz, M.V., Hollingsworth, J.K., Carver, J., Combining self-reported and automatic data to improve programming effort measurement (2005) ACM SIGSOFT Softw. Engin. Notes, 30 (5), pp. 356-365; Host, M., Regnell, B., Wohlin, C., Using students as subjects-A comparative study of students and professionals in lead-time impact assessment (2000) Empir. Softw. Engin., 5 (3), pp. 201-214; Huang, L., Holcombe, M., Empirical investigation towards the effectiveness of test first programming (2009) Inf. Softw. Technol., 51 (1), pp. 182-194; ISO, Information technology-Software product evaluation: Quality characteristics and guidelines for their use (1991) ISO, Geneva, , ISO/IEC IS 9126; Jeanmart, S., Gueheneuc, Y.-G., Sahraoui, H., Habra, N., Impact of the visitor pattern on program comprehension and maintenance (2009) Proceedings of the 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM'09), pp. 69-78. , IEEE Computer Society; Jedlitschka, A., Ciolkowski, M., Pfahl, D., Reporting experiments in software engineering (2008) Guide to Advanced Empirical Software Engineering, pp. 201-228. , F. Shull, J. Singer, and D. Sjoberg, Eds., Springer; Juristo, N., Moreno, A., (2001) Basics of Software Engineering Experimentation, , Kluwer Academic; Kampenes, V., Dyba, T., Hannay, J., Sjoberg, I., A systematic review of effect size in software engineering experiments (2007) Inf. Softw. Technol., 49 (11-12), pp. 1073-1086; Khomh, F., Gueheneuc, Y.-G., Do design patterns impact software quality positively? (2008) Proceedings of the 12th European Conference on Software Engineering and Maintenance (CSMR'08), pp. 274-278; Kitchenham, B., The role of replications in empirical software engineering - A word of warning (2008) Empir. Softw. Engin., 13 (2), pp. 219-221; Kitchenham, B., Al-khilidar, H., Babar, M., Berry, M., Cox, K., Keung, J., Kurniawati, F., Zhu, L., Evaluating guidelines for reporting empirical software engineering studies (2008) Empir. Softw. Engin., 13, pp. 97-121; Kitchenham, B., Pfleeger, S., Pickard, L., Jones, P., Hoaglin, D., El Emam, K., Rosenberg, J., Preliminary guidelines for empirical research in software engineering (2002) IEEE Trans. Softw. Engin., 28 (8), pp. 721-734; Krein, J.L., Pratt, L.J., Swenson, A.B., Maclean, A.C., Knutson, C.D., Eggett, D.L., Design patterns in software maintenance: An experiment replication at Brigham Young University (2011) Proceedings of the 2nd International Workshop on Replication in Empirical Software Engineering Research (RESER'11), pp. 25-34; Lindvall, M., Rus, I., Shull, F., Zelkowitz, M.V., Donzelli, P., Memon, A.M., Basili, V.R., Pech, D., An evolutionary testbed for software technology evaluation (2005) Innovat. Syst. Softw. Engin., 1 (1), pp. 3-11; Lindvall, M., Sandahl, K., Practical implications of traceability (1996) Softw. Pract. Exper., 26 (10), pp. 1161-1180; Maxwell, K., (2002) Applied Statistics for Software Managers, , Software Quality Institute Series, Prentice Hall; Mayrhauser, A.V., Program comprehension during software maintenance and evolution (1995) IEEE Comput., 28, pp. 44-55; Mcdermid, J., (1991) Software Engineer's Reference Book, , Butterworth-Heinemann, Linacre House, Jordan Hill, Oxford, UK; Mendonc, A.M.G., Maldonado, J.C., Oliveira, M.C.F.D., Carver, J., Fabbri, S.C.P.F., Shull, F., Travassos, G.H., Basili, V.R., A framework for software engineering experimental replications (2008) Proceedings of the 13th International Conference on Engineering of Complex Computer Systems (ICECCS'08), pp. 203-212. , IEEE Computer Society; OMG, (2005) Unified Modeling Language (UML) Specification, Version 2.0, , http://www.omg.org/spec/UML/2.0, Tech. rep., Object Management Group; Oppenheim, A.N., (1992) Questionnaire Design, Interviewing and Attitude Measurement, , Pinter, London; Pfleeger, S., Atlee, J., (2006) Software Engineering - Theory and Practice, , 3rd Ed. Ellis Horwood; Pfleeger, S.L., Menezes, W., Marketing technology to software practitioners (2000) IEEE Softw., 17 (1), pp. 27-33; Prechelt, L., Unger, B., Tichy, W.F., Brossler, P., Votta, L.G., A controlled experiment in maintenance comparing design patterns to simpler solutions (2001) IEEE Trans. Softw. Engin., 27 (12), pp. 1134-1144; Prechelt, L., Unger-lamprecht, B., Philippsen, M., Tichy, W., Two controlled experiments assessing the usefulness of design pattern documentation in program maintenance (2002) IEEE Trans. Softw. Engin., 28 (6), pp. 595-606; Ricca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M., How developers' experience and ability influence Web application comprehension tasks supported by UML stereotypes: A series of four experiments (2010) IEEE Trans. Softw. Engin., 36 (1), pp. 96-118; Ricca, F., Scanniello, G., Torchiano, M., Reggio, G., Astesiano, E., Assessing the effect of screen mockups on the comprehension of functional requirements (2014) ACM Trans. Softw. Engin. Methodol., 24 (1), pp. 11-138; Salton, G., Mcgill, M.J., (1983) Introduction to Modern Information Retrieval, , McGraw Hill, New York; Scaife, M., Rogers, Y., External cognition: How do graphical representations work? (1996) Int. J. Human-comput. Stud., 45 (2), pp. 185-213; Scanniello, G., Erra, U., Distributed modeling of use case diagrams with a method based on thinkpair-square: Results from two controlled experiments (2014) J. Vis. Lang. Comput., 25 (4), pp. 494-517; Scanniello, G., Gravino, C., Genero, M., Cruz-lemus, J.A., Tortora, G., On the impact of UML analysis models on source code comprehensibility and modifiability (2014) ACM Trans. Softw. Engin. Methodol., 23, p. 2; Scanniello, G., Gravino, C., Risi, M., Tortora, G., Dodero, G., (2014) Design Pattern Instances Comprehension, , http://www2.unibas.it/gscanniello/DP; Scanniello, G., Gravino, C., Tortora, G., An early investigation on the contribution of class and sequence diagrams in source code comprehension (2013) Proceedings of the 17th European Conference on Software Maintenance and Reengineering (CSMR'13), pp. 367-370. , IEEE Computer Society; Selfridge, P., Waters, R., Chikofsky, E., Challenges to the field of reverse engineering (1993) Proceedings of the Working Conference on Reverse Engineering (WCRE'93), pp. 144-150. , IEEE Computer Society; Shapiro, S., Wilk, M., An analysis of variance test for normality (1965) Biometrika, 52 (3-4), pp. 591-611; Shull, F., Carver, J.C., Vegas, S., Juzgado, N.J., The role of replications in empirical software engineering (2008) Empir. Softw. Engin., 13 (2), pp. 211-218; Shull, F., Mendoncca, M.G., Basili, V., Carver, J., Maldonado, J.C., Fabbri, S., Travassos, G.H., Ferreira, M.C., Knowledge-sharing issues in experimental software engineering (2004) Empir. Softw. Engin., 9 (1-2), pp. 111-137; Sillito, J., Murphy, G.C., De Volder, K., Asking and answering questions during a programming change task (2008) IEEE Trans. Softw. Engin., 34 (4), pp. 434-451; Sjøberg, D.I.K., Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanovic, A., Liborg, N., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE Trans. Softw. Engin., 31 (9), pp. 733-753; Vegas, S., Juristo, N., Moreno, A., Solari, M., Letelier, P., Analysis of the influence of communication between researchers on experiment replication (2006) Proceedings of the ACM/IEEE International Symposium on Empirical Software Engineering (ISESE'06), pp. 28-37. , ACM, New York; Verelst, J., The influence of the level of abstraction on the evolvability of conceptual models of information systems (2004) Proceedings of the International Symposium on Empirical Software Engineering (ISESE'04), pp. 17-26. , IEEE Computer Society; Vokac, M., Defect frequency and design patterns: An empirical study of industrial code (2004) IEEE Trans. Softw. Engin., 30 (12), pp. 904-917; Vokac, M., Tichy, W.F., Sjøberg, D.I.K., Arisholm, E., Aldrin, M., A controlled experiment comparing the maintainability of programs designed with and without design patterns-A replication in a real programming environment (2004) Empir. Softw. Engin., 9 (3), pp. 149-195; Wohlin, C., Runeson, P., Host, M., Ohlsson, M., Regnell, B., Wesslen, A., (2012) Experimentation in Software Engineering, , Springer; Zelkowitz, M.V., Shaw, A.C., Gannon, J.D., (1979) Principles of Software Engineering and Design, , Prentice-Hall},
  review                  = {{E C3 C6}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930177029&doi=10.1145%2f2699696&partnerID=40&md5=8bfd96b9f97ea77a7f731b311a7e19c1},
}

@Article{Scanniello2015311,
  author                  = {Scanniello, G. and Gravino, C. and Tortora, G. and Genero, M. and Risi, M. and Cruz-Lemus, J. and Dodero, G.},
  title                   = {Studying the effect of UML-based models on source-code comprehensibility: Results from a long-term investigation},
  journal                 = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year                    = {2015},
  volume                  = {9459},
  pages                   = {311-327},
  issn                    = {03029743},
  note                    = {cited By 0; Conference of 16th International Conference on Product-Focused Software Process Improvement, PROFES 2015 ; Conference Date: 2 December 2015 Through 4 December 2015; Conference Code:158369},
  abbrev_source_title     = {Lect. Notes Comput. Sci.},
  abstract                = {In this paper, we present final results of our long-term investigation whose goal was to study the contribution of software models on source-code comprehensibility. In this investigation we considered unified modeling language (UML) models produced in the analysis and design phases, and we conducted 12 controlled experiments in different contexts with different kinds of participants (e.g., PhD students and software practitioners). The total number of observations from these experiments was 333. We considered both source-code comprehensibility and the time to complete comprehension tasks. We use a meta-analysis to integrate gathered data and to obtain a global effect of analysis and design models on source-code comprehensibility. Results suggest that the use of UML models affects source-code comprehensibility, but in two opposite directions. In particular, models produced in the analysis phase reduce sourcecode comprehensibility and increase the time to complete comprehension tasks, while models produced in the design phase improve source-code comprehensibility and reduce the time to complete comprehension tasks. © Springer International Publishing Switzerland 2015.},
  affiliation             = {University of Basilicata, Potenza, Italy; University of Salerno, Fisciano, Italy; University of Castilla-La Mancha, Ciudad Real, Spain; Free University of Bozen, Bolzano, Italy},
  author_keywords         = {Controlled experiments; Empirical studies; Meta-analysis; Replications; Software models; UML},
  correspondence_address1 = {Gravino, C.; University of SalernoItaly; email: gravino@unisa.it},
  document_type           = {Conference Paper},
  doi                     = {10.1007/978-3-319-26844-6_23},
  editor                  = {Oivo M., Abrahamsson P., Corral L., Russo B.},
  isbn                    = {9783319268439},
  keywords                = {Codes (symbols); Computer programming languages; Modeling languages; Process engineering; Software design, Controlled experiment; Empirical studies; Meta analysis; Replications; Software model; UML, Unified Modeling Language},
  language                = {English},
  publisher               = {Springer Verlag},
  references              = {(2005) Unified Modeling Language (UML) Specification, , version 2.0. Technical report, Object Management Group; Erickson, J., Siau, K., Theoretical and practical complexity of modeling methods. (2007) Commun. ACM, 50 (8), pp. 46-51; Grossman, M., Aronson, J.E., McCarthy, R.V., Does UML make the grade? Insights from the software development community. (2005) Inf. Softw. Technol, 47 (6), pp. 383-397; Agarwal, R., Sinha, A.P., Object-oriented modeling with uml: A study of developers’ perceptions. (2003) Commun. ACM, 46 (9), pp. 248-256; Arisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance: An experimental evaluation (2006) IEEE Trans. Softw. Eng, 32 (6), pp. 365-381; Cohen, D., Lindvall, M., Costa, P., An introduction to Agile methods. Adv (2004) Comput, 62, pp. 1-66; Budgen, D., Burn, A.J., Brereton, O.P., Kitchenham, B.A., Pretorius, R., Empirical evidence about the UML: A systematic literature review. (2011) Softw. Pract. Experience, 41 (4), pp. 363-392; Anda, B., Hansen, K., Gullesen, I., Thorsen, H.K., Experiences from introducing UML-based development in a large safety-critical project. (2006) Empirical Softw. Eng, 11 (4), pp. 555-581; Scanniello, G., Gravino, C., Tortora, G., Investigating the role of UML in the software modeling and maintenance -a preliminary industrial survey (2010) Proceedings of International Conference on Enterprise Information Systems, pp. 141-148; Gravino, C., Tortora, G., Scanniello, G., An empirical investigation on the relation between analysis models and source code comprehension (2010) Proceeding of the International Symposium on Applied Computing, pp. 2365-2366; Scanniello, G., Gravino, C., Genero, M., Cruz-Lemus, J.A., Tortora, G., On the impact of UML analysis models on source code comprehensibility and modifiability. (2014) ACM Trans. Software Eng. Methodol, 23 (2), p. 13; Gravino, C., Scanniello, G., Tortora, G., Source-code comprehension tasks supported by UML design models: Results from a controlled experiment and a differentiated replication (2015) J. Vis. Lang. Comput, 28, pp. 23-38; Scanniello, G., Gravino, C., Risi, M., Tortora, G., A controlled experiment for assessing the contribution of design pattern documentation on software maintenance (2010) Proceeding of the Symposium on Empirical Software Engineering and Measurement. ACM; Scanniello, G., Gravino, C., Risi, M., Tortora, G., Dodero, G., Documenting designpattern instances: A family of experiments on source-code comprehensibility. (2015) ACM Trans. Softw. Eng. Methodol, 24 (3), p. 14; De Souza, S.C.B., Anquetil, N., De Oliveira, K.M., A study of the documentation essential to software maintenance (2005) Proc. of the International Conference on Design of Communication: Documenting & Designing for Pervasive Information, pp. 68-75. , ACM, New York; Tryggeseth, E., Report from an experiment: Impact of documentation on maintenance. (1997) Empirical Softw. Eng, 2 (2), pp. 201-207; Prechelt, L., Unger-Lamprecht, B., Philippsen, M., Tichy, W.F., Two controlled experiments assessing the usefulness of design pattern documentation in program maintenance (2002) IEEE Trans. Softw. Eng, 28 (6), pp. 595-606; Fernández-Saez, A., Genero, M., Nelson, J., Poels, G., Piattini, M., A systematic literature review on the quality of UML models (2012) J. Database Manag, 22 (3), pp. 46-70; Juristo, N., Moreno, A., (2001) Basics of Software Engineering Experimentation, , Kluwer Academic Publishers; Kitchenham, B., Pfleeger, S., Pickard, L., Jones, P., Hoaglin, D., El Emam, K., Rosenberg, J., Preliminary guidelines for empirical research in software engineering (2002) IEEE Trans. Softw. Eng, 28 (8), pp. 721-734; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M., Regnell, B., Wesslén, A., (2012) Experimentation in Software Engineering, , Springer, Heidelberg; Jedlitschka, A., Ciolkowski, M., Pfahl, D., Reporting experiments in software engineering (2008) Guide to Advanced Empirical Software Engineering, pp. 201-228. , In: Shull, F., Singer, J., Sjoberg, D. (eds.), Springer, London; Basili, V.R., Rombach, H.D., The TAME project: Towards improvement-oriented software environments (1988) IEEE Trans. Softw. Eng, 14 (6), pp. 758-773; Guéhéneuc, Y.G., P-MARt: Pattern-like micro architecture repository (2007) Proceeding of Europlop Focus Group on Pattern Repositories; (1991) Information Technology-Software Product Evaluation: Quality Characteristics and Guidelines for Their Use, , ISO/IEC IS 9126. ISO, Geneva; Pickard, L., Kitchenham, B.A., Jones, P., Combining empirical results in software engineering. (1998) Inf. Softw. Technol, 40 (14), pp. 811-821; Fu, R., Gartlehner, G., Grant, M., Shamliyan, T., Sedrakyan, A., Wilt, T.J., Griffith, L., Trikalinos, T.A., Conducting quantitative synthesis when comparing medical interventions: AHRQ and the effective health care program (2011) J. Clin. Epidemiol, 64 (11), pp. 1187-1197; Ried, K., Interpreting and understanding meta-analysis graphs -a practical guide (2008) Australian College of General Practitioners, 35; Basili, V.R., Green, S., Laitenberger, O., Lanubile, F., Shull, F., Sørumgård, L.S., Zelkowitz, M.V., The empirical investigation of perspective-based reading. (1996) Empirical Softw. Eng, 1 (2), pp. 133-164; Kitchenham, B., Al-Khilidar, H., Babar, M., Berry, M., Cox, K., Keung, J., Kurniawati, F., Zhu, L., Evaluating guidelines for reporting empirical software engineering studies. (2008) Empirical Softw. Eng, 13, pp. 97-121; Abrahão, S.M., Gravino, C., Pelozo, E.I., Scanniello, G., Tortora, G., Assessing the effectiveness of sequence diagrams in the comprehension of functional requirements: Results from a family of five experiments (2013) IEEE Trans. Softw. Eng, 39 (3), pp. 327-342; Sjøberg, D.I.K., Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanovic, A., Liborg, N., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE Trans. Softw. Eng, 31 (9), pp. 733-753; Mendonça, M.G., Maldonado, J.C., De Oliveira, M.C.F., Carver, J., Fabbri, S.C.P.F., Shull, F., Travassos, G.H., Basili, V.R., A framework for software engineering experimental replications (2008) Proceedings of International Conference on Engineering of Complex Computer Systems, pp. 203-212. , IEEE Computer Society; Oppenheim, A.N., (1992) Questionnaire Design, Interviewing and Attitude Measurement, , Pinter, London},
  review                  = {{E C2 C3}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952320771&doi=10.1007%2f978-3-319-26844-6_23&partnerID=40&md5=0429643b2106ef1c4a705abd41d743dd},
}

@Conference{Scanniello2014a,
  author              = {Scanniello, G. and Staron, M. and Burden, H. and Heldal, R.},
  title               = {On the effect of using SysML requirement diagrams to comprehend requirements: Results from two controlled experiments},
  year                = {2014},
  address             = {London},
  publisher           = {Association for Computing Machinery},
  note                = {cited By 0; Conference of 18th International Conference on Evaluation and Assessment in Software Engineering, EASE 2014 ; Conference Date: 12 May 2014 Through 14 May 2014; Conference Code:106611},
  abbrev_source_title = {ACM Int. Conf. Proc. Ser.},
  abstract            = {We carried out a controlled experiment and an external replication to investigate whether the use of requirement diagrams of the System Modeling Language (SysML) helps in the comprehensibility of requirements. The original experiment was conducted at the University of Basilicata in Italy with Bachelor students, while its replication was executed at the University of Gothenburg in Sweden with Bachelor and Master students. A total of 87 participants took part in the experiment and its replication. The achieved results indicated that the comprehension of requirements is statistically significant when requirements specification documents include requirement diagrams without any impact on the time to accomplish comprehension tasks. On the basis of our results, we also present and discuss possible implications from the practitioner and researcher perspectives. Copyright 2014 ACM.},
  affiliation         = {Dipartimento di Matematica, Informatica Ed Economia, University of Basilicata, Italy; Computer Science and Engineering, Chalmers University of Technology, Sweden; University of Gothenburg, Sweden},
  art_number          = {a49},
  author_keywords     = {Controlled experiment; Replication; Requirements comprehension; Software models; SysML; UML},
  document_type       = {Conference Paper},
  doi                 = {10.1145/2601248.2601259},
  isbn                = {9781450324762},
  journal             = {ACM International Conference Proceeding Series},
  keywords            = {Software engineering, Controlled experiment; Replication; Requirements comprehension; Software model; SysML; UML, Experiments},
  language            = {English},
  references          = {Abrahão, S.M., Gravino, C., Pelozo, E.I., Scanniello, G., Tortora, G., Assessing the effectiveness of sequence diagrams in the comprehension of functional requirements: Results from a family of five experiments (2013) IEEE Trans. on Soft. Eng, 39 (3); Aranda, J., Ernst, N., Horkoff, J., Easterbrook, S., A framework for empirical evaluation of model comprehensibility (2007) Proceedings of the International Workshop on Modeling in Software Engineering, , Washington, DC, USA, IEEE Computer Society; Arisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance: An experimental evaluation (2006) IEEE Trans. Softw. Eng, 32 (6), pp. 365-381; Baker, R., (1995) Modern Permutation Test Software, , E. Edgington, editor, Randomization Tests, Marcel Decker; Basili, V.R., Green, S., Laitenberger, O., Lanubile, F., Shull, F., Sørumgård, L.S., Zelkowitz, M.V., The empirical investigation of perspective-based reading (1996) Empirical Software Engineering, 1 (2), pp. 133-164; Basili, V.R., Rombach, H.D., The TAME project: Towards improvement-oriented software environments (1988) IEEE Trans. Software Eng, 14 (6), pp. 758-773; Briand, L.C., Falessi, D., Nejati, S., Sabetzadeh, M., Yue, T., Traceability and sysml design slices to support safety inspections: A controlled experiment (2014) ACM Trans. Softw. Eng. Methodol, 23 (1), p. 9; Bruegge, B., Dutoit, A.H., (2003) Object-Oriented Software Engineering: Using UML, , Patterns and Java, 2nd edition. Prentice-Hall; Budgen, D., Burn, A.J., Brereton, O.P., Kitchenham, B.A., Pretorius, R., Empirical evidence about the UML: A systematic literature review (2011) Software: Practice and Experience, 41 (4), pp. 363-392; Carver, J., Jaccheri, L., Morasca, S., Shull, F., Issues in using students in empirical studies in software engineering education (2003) Proc. of the International Symposium on Software Metrics, p. 239. , IEEE Computer Society; Cohen, J., (1988) Statistical Power Analysis for the Behavioral Sciences (2nd Ed.), , Lawrence Earlbaum Associates, Hillsdale, NJ; Conover, W.J., (1998) Practical Nonparametric Statistics, , Wiley, 3rd Edition; Devore, J.L., Farnum, N., (1999) Applied Statistics for Engineers and Scientists, , Duxbury; Dobing, B., Parsons, J., How UML is used (2006) Communications of the ACM, 49 (5), pp. 109-113; Ellis, P., The essential guide to effect sizes: Statistical power (2010) Meta-Analysis, and the Interpretation of Research Results, , Cambridge University Press; Falessi, D., Nejati, S., Sabetzadeh, M., Briand, L., Messina, A., SafeSlice: A model slicing and design safety inspection tool for SysML (2011) Proceedings of European Conference on Foundations of Software Engineering, pp. 460-463. , New York, NY, USA, ACM; Friedenthal, S., Moore, A., Steiner, R., (2008) A Practical Guide to SysML: Systems Modeling Language, , The MK/OMG Press. Elsevier Science; Omg Certified Systems Modeling Professional (Ocsmp), , O. M. Group; O. M. Group. SysML v1.3; Höst, M., Regnell, B., Wohlin, C., Using students as subjects: Comparative study of students and professionals in lead-time impact assessment (2000) Empirical Softw. Engg, 5 (3), pp. 201-214. , Nov; Jedlitschka, A., Ciolkowski, M., Pfahl, D., Reporting experiments in software engineering (2008) Guide to Advanced Empirical Software Engineering, pp. 201-228. , F. Shull, J. Singer, and D. I. K. Sjøberg, editors Springer London; Juristo, N., Moreno, A., (2001) Basics of Software Engineering Experimentation, , Kluwer Academic Publishers, Englewood Cliffs, NJ; Kampenes, V., Dyba, T., Hannay, J., Sjoberg, I., A systematic review of effect size in software engineering experiments (2006) Information & Software Technology, 49 (11-12), pp. 1073-1086; Kamsties, E., Von Knethen, A., Reussner, R., A controlled experiment to evaluate how styles affect the understandability of requirements specifications (2003) Information & Software Technology, 45 (14), pp. 955-965; Kitchenham, B., Al-Khilidar, H., Babar, M., Berry, M., Cox, K., Keung, J., Kurniawati, F., Zhu, L., Evaluating guidelines for reporting empirical software engineering studies (2008) Empirical Software Engineering, 13, pp. 97-121; Kitchenham, B., Peeger, S., Pickard, L., Jones, P., Hoaglin, D., El Emam, K., Rosenberg, J., Preliminary guidelines for empirical research in software engineering (2002) IEEE Trans. on Soft. Eng, 28 (8), pp. 721-734; Levene, H., Robust tests for equality of variances (1960) Contributions to Probability and Statistics, , I. Olkin, editor Stanford Univ. Press., Palo Alto, CA; Nejati, S., Sabetzadeh, M., Falessi, D., Briand, L.C., Coq, T., A SysML-based approach to traceability management and design slicing in support of safety certification: Framework, tool support, and case studies (2012) Information & Software Technology, 54 (6), pp. 569-590; (2005) OMG. Unified Modeling Language (UML) Specification, Version 2.0. Technical Report, , Object Management Group, July; Peeger, S.L., Menezes, W., Marketing technology to software practitioners (2000) IEEE Software, 17 (1), pp. 27-33; Ricca, F., Penta, M.D., Torchiano, M., Tonella, P., Ceccato, M., How developers' experience and ability inuence web application comprehension tasks supported by uml stereotypes: A series of four experiments (2010) IEEE Trans. Software Eng, 36 (1), pp. 96-118; Scaife, M., Rogers, Y., External cognition: How do graphical representations work? (1996) International Journal of Human-Computer Studies, 45 (2), pp. 185-213; Scanniello, G., Gravino, C., Genero, M., Cruz-Lemus, J.A., Tortora, G., On the impact of UML analysis models on source code comprehensibility and modifiability (2014) ACM Trans. on Soft. Eng. and Meth, 23 (2); Scanniello, G., Gravino, C., Tortora, G., Investigating the role of UML in the software modeling and maintenance - A preliminary industrial survey (2010) Proc. of the International Conference on Enterprise Information Systems, pp. 141-148. , SciTePress; Shapiro, S., Wilk, M., An analysis of variance test for normality (1965) Biometrika, 52 (3-4), pp. 591-611; Shull, F., Mendoncça, M.G., Basili, V., Carver, J., Maldonado, J.C., Fabbri, S., Travassos, G.H., Ferreira, M.C., Knowledge-sharing issues in experimental software engineering (2004) Empirical Software Engineering, 9 (1-2), pp. 111-137. , March; Sjøberg, D.I.K., Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanovic, A., Liborg, N., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE Trans. on Soft. Eng, 31 (9), pp. 733-753; Vegas, S., Juristo, N., Moreno, A., Solari, M., Letelier, P., Analysis of the inuence of communication between researchers on experiment replication (2006) Proc. of the International Symposium on Empirical Software Engineering, pp. 28-37. , New York, NY, USA, ACM; Verelst, J., The inuence of the level of abstraction on the evolvability of conceptual models of information systems (2004) Proc. of the International Symposium on Empirical Software Engineering, pp. 17-26. , Washington, DC, USA, IEEE Computer Society; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M., Regnell, B., Wesslén, A., (2012) Experimentation in Software Engineering, , Springer; Young, R., (2001) Effective Requirements Practice, , Addison-Wesley, Boston, MA},
  review              = {{E C2}},
  source              = {Scopus},
  sponsors            = {Brunel University},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905453600&doi=10.1145%2f2601248.2601259&partnerID=40&md5=5b5a7bef2c74137bd4852cd0e0df78ed},
}

@Article{Scanniello2014494,
  author                  = {Scanniello, G. and Erra, U.},
  title                   = {Distributed modeling of use case diagrams with a method based on think-pair-square: Results from two controlled experiments},
  journal                 = {Journal of Visual Languages and Computing},
  year                    = {2014},
  volume                  = {25},
  number                  = {4},
  pages                   = {494-517},
  issn                    = {1045926X},
  note                    = {cited By 6},
  abbrev_source_title     = {J. Vis. Lang. Comput.},
  abstract                = {Objective: In this paper, we present the results of two controlled experiments conducted to assess a new method based on think-pair-square in the distributed modeling of use case diagrams.Methods: This new method has been implemented within an integrated environment, which allows distributed synchronous modeling and communication among team members. To study the effect of the participants' familiarity with the method and the integrated environment, the second experiment is a replication conducted with the same participants as the original experiment. The results show a significant difference in favor of face-to-face (i.e., the chosen baseline) for the time to complete modeling tasks, with no significant impact on the quality of the produced models.Results: The results on participants' familiarity indicate a significant effect on the task completion time (i.e., more familiar participants spent less time), with no significant impact on quality.Practice: One of the most interesting practical implications of our study is - in case the time difference is not an issue, but moving people might be a problem, the new method and environment could represent a viable alternative to face-to-face. Another significant result is that also people not perfectly trained on our method and environment may benefit from their use: the training phase could be shortened or skipped. In addition, face-to-face is less prone to consolidate participants' working style and to develop a shared working habit of participants.Implications: This work is in the direction of the media-effect theories applied to requirements engineering. The results indicate that the participants in the experiments significantly spent less time when modeling use case diagrams using face-to-face. Conversely, no significant difference was observed on the quality of the artifacts produced by the participants in the these tasks. © 2014 Elsevier Ltd.},
  affiliation             = {Dipartimento di Matematica, Informatica ed Economia, University of Basilicata, Viale dell'Ateneo, I-85100, Italy},
  author_keywords         = {Distributed Software Development; Experiments; Requirements Modeling},
  coden                   = {JVLCE},
  correspondence_address1 = {Erra, U.; Dipartimento di Matematica, Informatica ed Economia, University of Basilicata, Viale dell'Ateneo, I-85100, Italy; email: ugo.erra@unibas.it},
  document_type           = {Article},
  doi                     = {10.1016/j.jvlc.2014.03.002},
  language                = {English},
  publisher               = {Academic Press},
  references              = {Herbsleb, J.D., Mockus, A., An empirical study of speed and communication in globally distributed software development (2003) IEEE Trans. Softw. Eng., 29, pp. 481-494; Šmite, D., Wohlin, C., Gorschek, T., Feldt, R., Empirical evidence in global software engineering. a systematic review (2010) Empir. Softw. Eng., 15, pp. 91-118; Sengupta, B., Chandra, S., Sinha, V., A research agenda for distributed software development (2006), pp. 731-740. , in: Proceedings of the International conference on Software engineering, ACM, New York, NY, USAŠmite, D., Wohlin, C., Galviņa, Z., Prikladnicki, R., An empirically based terminology and taxonomy for global software engineering (2012) Empir. Softw. Eng., pp. 1-49; Dutoit, A.H., Johnstone, J., Brügge, B., Knowledge scouts: reducing communication barriers in a distributed software development project (2001), pp. 427-430. , in: Proceedings of the Asia-Pacific Software Engineering Conference, IEEE Computer SocietyNuseibeh, B., Easterbrook, S., (2000), pp. 35-46. , Requirements engineering: a roadmap, in: Proceedings of International Workshop on The Future of Software Engineering at ICSE, ACM Press, Limerick, IrelandBruegge, B., Dutoit, A.H., (2003) Object-Oriented Software Engineering: Using UML, Patterns and Java, , Prentice Hall; Lauesen, S., (2002) Software Requirements: Styles and Techniques, , Addison-Wesley, Boston, USA; Calefato, F., Damian, D., Lanubile, F., Computer-mediated communication to support distributed requirements elicitations and negotiations tasks (2012) Empir. Softw. Eng., 17, pp. 640-674; Damian, D., Eberlein, A., Shaw, M.L.G., Gaines, B.R., Using different communication media in requirements negotiation (2000) IEEE Softw., 17, pp. 28-36; Calefato, F., Damian, D., Lanubile, F., (2007), pp. 3-11. , An empirical investigation on text-based communication in distributed requirements workshops, in: Proceedings of the International Conference on Global Software Engineering, IEEE Computer Society, Washington, DC, USAErra, U., Scanniello, G., Assessing communication media richness in requirements negotiation (2010) IET Softw., 4, pp. 134-148; Damian, D., Lanubile, F., Mallardo, T., On the need for mixed media in distributed requirements negotiations (2008) IEEE Trans. Softw. Eng., 34, pp. 116-132; Erra, U., Portnova, A., Scanniello, G., (2010), 53, pp. 1-53. , Comparing two communication media in use case modeling: results from a controlled experiment, in: International Symposium on Empirical Software Engineering and Measurement, ACMPfleeger, S.L., Menezes, W., Marketing technology to software practitioners (2000) IEEE Softw., 17, pp. 27-33; Basili, V.R., Selby, R.W., Hutchens, D.H., Experimentation in software engineering (1986) IEEE Trans. Softw. Eng., 12, pp. 733-743; Budgen, D., Burn, A.J., Brereton, O.P., Kitchenham, B.A., Pretorius, R., Empirical evidence about the UML. a systematic literature review (2011) Software: Pract. Exp., 41, pp. 363-392; Kitchenham, B., Pretorius, R., Budgen, D., Pearl Brereton, O., Turner, M., Niazi, M., Linkman, S., Systematic literature reviews in software engineering-a tertiary study (2010) Inf. Softw. Technol., 52, pp. 792-805; Erra, U., Scanniello, G., Assessing think-pair-square in distributed modeling of use case diagrams, in: Proceedings of International Workshop on Empirical Requirements Engineering. (2005), OMG, Unified Modeling Language (UML) Specification, version 2.0, Technical Report, Object Management GroupLyman, F.T., The responsive classroom discussion. the inclusion of all students (1981) Mainstreaming Digest, pp. 109-113. , University of Maryland Press, College Park, MD, A. Anderson (Ed.); Millis, B.J., Cottell, P.G., (1998) Cooperative Learning for Higher Education Faculty, , Oryx Press, Phoenix, Ariz; Jackson, M., (1995) Software Requirements and Specifications: A Lexicon of Practice, Principles and Prejudices, , Addison Wesley, Boston, USA; Cockburn, A., (2001) Writing Effective use Cases, Agile Software Development Series, , Addison-Wesley, Boston, USA; Scanniello, G., Gravino, C., Tortora, G., Investigating the role of UML in the software modeling and maintenance-a preliminary industrial survey, in: Proceedings of the International Conference on Enterprise Information Systems, pp. 141-148Fowler, M., (2003) UML Distilled: A Brief Guide to the Standard Object Modeling Language, , Addison-Wesley Longman Publishing Co., Inc., Boston, MA, USA; Ricca, F., Scanniello, G., Torchiano, M., Reggio, G., Astesiano, E., (2010), 40, pp. 1-40. , On the effort of augmenting use cases with screen mockups: results from a preliminary empirical study, in: Proceedings of the International Symposium on Empirical Software Engineering and Measurement, ACMDe Chiara, R., Di Matteo, A., Manno, I., Coffee, S.V., (2007) IEEE Computer Society, pp. 243-252. , Cooperative face2face educational environment, in: CollaborateCom; Basili, V.R., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) IEEE Trans. Softw. Eng., 25, pp. 456-473; Juristo, N., Moreno, A., (2001) Basics of Software Engineering Experimentation, , Kluwer Academic Publishers, Dordrecht, the Netherlands; B. Kitchenham, S.L. Pfleeger, L. Pickard, P. Jones, D.C. Hoaglin, K.E. Emam, J. Rosenberg, Preliminary guidelines for empirical research in software engineering, IEEE Trans. Softw. Eng. 28 (2002) 721-734Wohlin, C., Runeson, P., Höst, M., Ohlsson, M.C., Regnell, B., Wesslén, A., (2000) Experimentation in Software Engineering-An Introduction, , Kluwer Academic Publishers, Dordrecht, the Netherlands; Basili, V., Caldiera, G., Rombach, D.H., (1994) The Goal Question Metric Paradigm, Encyclopedia of Software Engineering, , John Wiley & Sons, Hoboken, NJ, USA; Ricca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M., How developers' experience and ability influence web application comprehension tasks supported by UML stereotypes. a series of four experiments (2010) IEEE Trans. Softw. Eng., 36, pp. 96-118; Abrahão, S., Gravino, C., Pelozo, E.I., Scanniello, G., Tortora, G., Assessing the effectiveness of sequence diagrams in the comprehension of functional requirements. results from a family of five experiments (2012) IEEE Trans. Softw. Eng., 39, pp. 327-342; Johansen, R., (1988) GroupWare: Computer Support for Business Teams, , The Free Press, New York, NY, USA; Olson, J.S., Olson, G.M., Culture surprises in remote software development teams (2004) Queue, 1, pp. 52-59; Frakes, W.B., Baeza-Yates, R., (1992) Information Retrieval: Data Structures and Algorithms, , Prentice-Hall, Inc., Upper Saddle River, New Jersey, USA; Oppenheim, A.N., (1992) Questionnaire Design, Interviewing and Attitude Measurement, , Pinter Publishers, United Kingdom; Shapiro, S., Wilk, M., An analysis of variance test for normality (1965) Biometrika, 52, pp. 591-611; Cohen, J., (1988) Statistical Power Analysis for the Behavioral Sciences, , Lawrence Earlbaum Associates, Hillsdale, NJ; Kampenes, V.B., Dybå, T., Hannay, J.E., Sjøberg, D.I.K., A systematic review of effect size in software engineering experiments (2007) Inf. Softw. Technol., 49, pp. 1073-1086; Ellis, P., (2010) The Essential Guide to Effect Sizes: Statistical Power, Meta-Analysis, and the Interpretation of Research Results, , Cambridge University Press, Cambridge, England; Devore, J.L., Farnum, N., (1999) Applied Statistics for Engineers and Scientists, , Duxbury, Cengage Learning, Stamford, Connecticut, USA; Ehsan, M.A.N., Mirza, E., Impact of computer-mediated communication on virtual teams' performance. an empirical study (2008) World Acad. Sci. Eng. Technol., 18, pp. 694-703; Ricca, F., Scanniello, G., Torchiano, R.E., (2010), 17:1-17:10. Astesiano, On the effectiveness of screen mockups in requirements engineering: results from an internal replication, in: Proceedings of the International Symposium on Empirical Software Engineering and Measurement, ACMBasili, V.R., Green, S., Laitenberger, O., Lanubile, F., Shull, F., Sørumgård, L.S., Zelkowitz, M.V., The empirical investigation of perspective-based reading (1996) Empir. Softw. Eng., 1, pp. 133-164; Kitchenham, B., Al-Khilidar, H., Babar, M., Berry, M., Cox, K., Keung, J., Kurniawati, F., Zhu, L., Evaluating guidelines for reporting empirical software engineering studies (2008) Empir. Softw. Eng., 13, pp. 97-121; Forsyth, D.R., (2006) Group Dynamics, , Thomson Wadsworth, Belmont, CA; Hannay, J., Jørgensen, M., The role of deliberate artificial design elements in software engineering experiments (2008) IEEE Trans. Softw. Eng., 34, pp. 242-259; Bos, N., Olson, J.S., Gergle, D., Olson, G.M., Wright, Z., (2002), pp. 135-140. , Effects of four computer-mediated communications channels on trust development, in: Proceedings of International Conference on Human Factors in Computing Systems, ACMDavidson, E.J., Joint application design (JAD) in practice (1999) J. Syst. Softw., 45, pp. 215-223; Brügge, B., De Lucia, A., Fasano, F., Tortora, G., (2006), pp. 213-222. , Supporting distributed software development with fine-grained artefact management, in: Proceedings of International Conference on Global Software Engineering, IEEE Computer SocietyEbert, C., Practice: Requirements Engineering in Global Teams , pp. 257-267. , John Wiley & Sons, Inc., Hoboken, NJ, USAGrudin, J., Computer-supported cooperative work. history and focus (1994) Computer, 27, pp. 19-26; Dewan, P., Riedl, J., Toward computer-supported concurrent software engineering (1993) IEEE Comput., 26, pp. 17-27; Grundy, J.C., Venable, J.R., Hosking, J.G., Mugridge, W.B., (1996), Supporting Collaborative Work in Integrated Information Systems Engineering EnvironmentsChen, Q., Grundy, J., Hosking, J., An e-whiteboard application to support early design-stage sketching of UML diagrams (2003), pp. 219-226. , in: Proceedings of the International Symposium on Human Centric Computing Languages and Environments, IEEE Computer Society, Washington, DC, USADe Lucia, A., Fasano, F., Scanniello, G., Tortora, G., Enhancing collaborative synchronous UML modelling with fine-grained versioning of software artefacts (2007) J. Vis. Lang. Comput., 18, pp. 492-503; De Lucia, A., Fasano, F., Tortora, S.G., (2009), pp. 89-98. , Concurrent fine-grained versioning of UML models, in: Proceedings of Conference on Software Maintenance and Reengineering, IEEE Computer SocietyBoulila, N., (2004), pp. 422-425. , Group support for distributed collaborative concurrent software modeling, in: Proceedings of the International conference on Automated Software Engineering, IEEE Computer SocietyGrundy, J.C., Mugridge, W.B., Hosking, J.G., Amor, R.W., (1995), pp. 84-94. , Support for collaborative, integrated software development, in: Proceedings of Software Engineering Environment Conferences, IEEE Computer SocietyBoulila, N., Computer supported cooperative software engineering: a framework for supporting distributed concurrent group modeling of software, in: Proceedings of the International Conference on Applied ComputingDamm, C., Hansen, K., Thomsen, M., Tool support for object-oriented cooperative design. gesture-based modeling on an electronic whiteboard (2000) Proc. Int. Conf. Hum. Factors Comput. Syst., 2, pp. 518-525; Salger, F., Engels, G., Hofmann, A., (2010), pp. 29-38. , Assessments in global software development: a tailorable framework for industrial projects, in: Proceedings of the International Conference on Software Engineering, ACMFassbinder, P., Henz, V., Improving global system development and collaboration across functions: Experiences from industry (2009), pp. 262-266. , in: Proceedings of the International Conference on Global Software Engineering, IEEE Computer SocietyBoehm, B., Egyed, A., (1998), pp. 503-507. , Software requirements negotiation: some lessons learned, in: Proceedings of the International Conference on Software Engineering, IEEE Computer SocietyDennis, A.R., Valacich, J.S., (1999), pp. 1017-1027. , Rethinking media richness: towards a theory of media synchronicity, in: Proceedings of the Thirty-Second Annual Hawaii International Conference on System Sciences, IEEE Computer SocietyDennis, A.R., Kinney, S.T., Testing media richness theory in the new media. the effects of cues,and task equivocality (1998) Inf. Syst. Res., 9, pp. 256-274; Scanniello, G., Risi, M., (2013), pp. 190-199. , Dealing with faults in source code: abbreviated vs. full-word identifier names, in: International Conference on Software Maintenance, IEEE Computer SocietyArisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance. an experimental evaluation (2006) IEEE Trans. Softw. Eng., 32, pp. 365-381; Colosimo, M., De Lucia, A., Scanniello, G., Tortora, G., Evaluating legacy system migration technologies through empirical studies (2009) Inf. Softw. Technol., 51, pp. 433-447},
  review                  = {{E C2 C8}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904755482&doi=10.1016%2fj.jvlc.2014.03.002&partnerID=40&md5=6a929222e2207b259bcb9e34260d6066},
}

@Article{Scanniello2014,
  author                  = {Scanniello, G. and Gravino, C. and Genero, M. and Cruz-Lemus, J.A. and Tortora, G.},
  title                   = {On the impact of UML analysis models on source-code comprehensibility and modifiability},
  journal                 = {ACM Transactions on Software Engineering and Methodology},
  year                    = {2014},
  volume                  = {23},
  number                  = {2},
  issn                    = {1049331X},
  note                    = {cited By 15},
  abbrev_source_title     = {ACM Trans. Software Eng. Methodol.},
  abstract                = {We carried out a family of experiments to investigate whether the use of UML models produced in the requirements analysis process helps in the comprehensibility and modifiability of source code. The family consists of a controlled experiment and 3 external replications carried out with students and professionals from Italy and Spain. 86 participants with different abilities and levels of experience with UML took part. The results of the experiments were integrated through the use of meta-analysis. The results of both the individual experiments and meta-analysis indicate that UML models produced in the requirements analysis process influence neither the comprehensibility of source code nor its modifiability. © 2014 ACM.},
  affiliation             = {University of Basilicata, Italy; University of Salerno, Italy; University of Castilla-La Mancha, Spain},
  art_number              = {13},
  author_keywords         = {Analysis models; Comprehensibility; Controlled experiment; Family of experiments; Maintenance; Modifiability; Replicated experiments; UML},
  coden                   = {ATSME},
  correspondence_address1 = {Scanniello, G.; University of BasilicataItaly; email: giuseppe.scanniello@unibas.it},
  document_type           = {Article},
  doi                     = {10.1145/2491912},
  keywords                = {Maintenance; Requirements engineering; Unified Modeling Language, Analysis models; Comprehensibility; Controlled experiment; Modifiability; Replicated experiment; UML, Experiments},
  language                = {English},
  publisher               = {Association for Computing Machinery},
  references              = {Abbes, M., Khomh, F., Gueheneuc, Y.-G., Antoniol, G., An empirical study of the impact of two antipatterns, blob and spaghetti code, on program comprehension (2011) Proceedings of the European Conference on Software Maintenance and Reengineering., pp. 181-190. , IEEE Computer Society, Los Alamitos, CA; Abrahão, S.M., Gravino, C., Pelozo, E.I., Scanniello, G., Tortora, G., Assessing the effectiveness of sequence diagrams in the comprehension of functional requirements: Results from a family of five experiments (2012) IEEE Trans. Softw. Eng; Agarwal, R., Sinha, A.P., Object-oriented modeling with UML: A study of developers' perceptions (2003) Commun. ACM, 46 (9), pp. 248-256; Anda, B., Hansen, K., Gullesen, I., Thorsen, H.K., Experiences from introducing UML-based development in a large safety-critical project (2006) Empirical Softw. Eng., 11 (4), pp. 555-581; Arisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance: An experimental evaluation (2006) IEEE Transactions on Software Engineering, 32 (6), pp. 365-381. , DOI 10.1109/TSE.2006.59; Asuncion, H.U., François, F., Taylor, R.N., An end-to-end industrial software traceability tool (2007) Proceedings of the 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, pp. 115-124; Baeza-Yates, R.A., Ribeiro-Neto, B., (1999) Modern Information Retrieval, , Addison-Wesley Longman Publishing Co., Inc., Boston, MA; Baker, R., Modern permutation test software (1995) Randomization Tests, , 3rd Ed., E. Edgington, Ed. Marcel Dekker, Inc., New York, NY; Basili Victor, R., Shull Forrest, Lanubile Filippo, Building knowledge through families of experiments (1999) IEEE Transactions on Software Engineering, 25 (4), pp. 456-473; Basili, V.R., Green, S., Laitenberger, O., Lanubile, F., Shull, F., Sorumgard, S., Zelkowitz, M.V., The empirical investigation of perspective-based reading (1996) Empirical Software Engineering, 1 (2), pp. 133-164; Basili Victor, R., Rombach H.Dieter, Tame project: Towards improvement-oriented software environments (1988) IEEE Transactions on Software Engineering, 14 (6), pp. 758-773. , DOI 10.1109/32.6156; Comprehensive meta-analysis v. 2 (2006) Biostat Manual, , Biostat, Englewood, NJ; Booch, G., Rumbaugh, J., Jacobson, I., (2005) Unified Modeling Language User Guide, , 2nd Ed. Addison-Wesley Professional; Bruegge, B., Dutoit, A.H., (2003) Object-Oriented Software Engineering: Using UML, Patterns and Java, , 2nd Ed. Prentice-Hall; Budgen, D., Burn, A.J., Pearl Brereton, O., Kitchenham, B.A., Pretorius, R., Empirical evidence about the UML: A systematic literature review (2011) Softw. Pract. Exp., 41 (4), pp. 363-392; Carver, J., Jaccheri, L., Morasca, S., Shull, F., Issues in using students in empirical studies in software engineering education (2003) Proceedings of the International Symposium on Software Metrics, 239. , IEEE Computer Society; Cohen, D., Lindvall, M., Costa, P., An introduction to agile methods (2004) Adv. Comput., 62, pp. 1-66; Colosimo, M., De Lucia, A., Scanniello, G., Tortora, G., Evaluating legacy system migration technologies through empirical studies (2009) Inf. Softw. Technol., 51 (12), pp. 433-447; Conover, W.J., (1998) Practical Nonparametric Statistics, , 3rd Ed. Wiley; De Souza, S.C.B., Anquetil, N., De Oliveira, K.M., A study of the documentation essential to software maintenance (2005) Proceedings of the 23rd International Conference on Design of Communication - Documenting and Designing for Pervasive Information, pp. 68-75. , DOI 10.1145/1085313.1085331, Proceedings of the 23rd International Conference on Design of Communication - Documenting and Designing for Pervasive Information; Devore, J.L., Farnum, N., (1999) Applied Statistics for Engineers and Scientists, , Duxbury; Dobing, B., Parsons, J., How UML is used (2006) Communications of the ACM, 49 (5), pp. 109-113. , http://delivery.acm.org/10.1145/1130000/1125949/p109-dobing.pdf?key1= 1125949&key2=5621052511&coll=ACM&dl=ACM&CFID= 1144325&CFTOKEN=73813730, Two Decades of the Language-action Perspective; Dzidek, W.J., Arisholm, E., Briand, L.C., A realistic empirical evaluation of the costs and benefits of UML in software maintenance (2008) IEEE Trans. Softw. Eng., 34, pp. 407-432; Ellis, P., (2010) The Essential Guide to Effect Sizes: Statistical Power, Meta-Analysis, and the Interpretation of Research Results, , Cambridge University Press; Erickson, J., Siau, K., Theoretical and practical complexity of modeling methods (2007) Communications of the ACM, 50 (8), pp. 46-51. , DOI 10.1145/1278201.1278205; Fernández-Saez, A., Genero, M., Nelson, J., Poels, G., Piattini, M., A systematic literature review on the quality of UML models (2012) J. Data. Manage., 22 (3), pp. 46-70; Gravino, C., Risi, M., Scanniello, G., Tortora, G., Does the documentation of design pattern instances impact on source code comprehension? Results from two controlled experiments (2011) Proceeding of the Working Conference on Reverse Engineering, pp. 67-76. , IEEE Computer Society, Los Alamitos, CA; Gravino, C., Risi, M., Scanniello, G., Tortora, G., Do professional developers benefit from design pattern documentation? A replication in the context of source code comprehension (2012) Proceedings of the International Conference on Model Driven Engineering Languages and Systems, pp. 185-201. , Springer-Verlag, Berlin; Gravino, C., Tortora, G., Scanniello, G., An empirical investigation on the relation between analysis models and source code comprehension (2010) Proceedings of the ACM Symposium on Applied Computing, pp. 2365-2366. , ACM; Grossman, M., Aronson, J.E., McCarthy, R.V., Does UML make the grade? Insights from the software development community (2005) Information and Software Technology, 47 (6), pp. 383-397. , DOI 10.1016/j.infsof.2004.09.005, PII S095058490400134X; Hedges, L., Olkin, I., (1985) Statistical Methods for Meta-Analysis, , Academia Press; Host, M., Regnell, B., Wohlin, C., Using students as subjects - a comparative study of students and professionals in lead-time impact assessment (2000) Empirical Software Engineering, 5 (3), pp. 201-214. , DOI 10.1023/A:1026586415054; Jedlitschka, A., Ciolkowski, M., Pfahl, D., Reporting experiments in software engineering (2008) Guide to Advanced Empirical Software Engineering, pp. 201-228. , Forrest Shull, Janice Singer, and Dag I. K. Sjøberg, Eds., Springer; Juristo, N., Moreno, A., (2001) Basics of Software Engineering Experimentation, , Kluwer Academic Publishers, Englewood Cliffs, NJ; Kampenes, V.B., Dyba, T., Hannay, J.E., Sjoberg, D.I.K., A systematic review of effect size in software engineering experiments (2007) Information and Software Technology, 49 (11-12), pp. 1073-1086. , DOI 10.1016/j.infsof.2007.02.015, PII S0950584907000195; Kitchenham, B., Al-Khilidar, H., Babar, M., Berry, M., Cox, K., Keung, J., Kurniawati, F., Zhu, L., Evaluating guidelines for reporting empirical software engineering studies (2008) Empirical Softw. Eng., 13, pp. 97-121; Kitchenham, B., Pfleeger, S., Pickard, L., Jones, P., Hoaglin, D., El Emam, K., Rosenberg, J., Preliminary guidelines for empirical research in software engineering (2002) IEEE Trans. Softw. Eng., 28 (8), pp. 721-734; Lauesen, S., (2002) Software Requirements: Styles and Techniques, , Addison-Wesley; Levene, H., Robust tests for equality of variances (1960) Contributions to Probability and Statistics, , I. Olkin Ed., Stanford University Press., Palo Alto, CA; Lindvall, M., Sandahl, K., Practical implications of traceability (1996) Software - Practice and Experience, 26 (10), pp. 1161-1180; Lubars, M., Potts, C., Richter, C., A review of the state of the practice in requirements modeling (1993) Proceedings of the International Symposium on Requirements Engineering, pp. 2-14. , IEEE Computer Society Press; McDermid, J., (1991) Software Engineer's Reference Book, , Butterworth-Heinemann, Ltd., Oxford, U.K; Mendonca, M.G., Maldonado, J.C., De Oliveira, M.C.F., Carver, J., Fabbri, S.C.P.F., Shull, F., Travassos, G.H., Basili, V.R., A framework for software engineering experimental replications (2008) Proceedings of the IEEE International Conference on Engineering of Complex Computer Systems, ICECCS, pp. 203-212. , DOI 10.1109/ICECCS.2008.38, 4492893, Proceedings - Thirteenth IEEE International Conference on the Engineering of Complex Computer Systems, ICECCS 2008; (2010) Unified Modeling Language (TM) URL, , http://www.uml.org, OMG. Tech. Rep. Object Management Group; Oppenheim, A.N., (1992) Questionnaire Design, Interviewing and Attitude Measurement, , Pinter, London; Prechelt, L., Unger-Lamprecht, B., Philippsen, M., Tichy, W.F., Two controlled experiments assessing the usefulness of design pattern documentation in program maintenance (2002) IEEE Transactions on Software Engineering, 28 (6), pp. 595-606. , DOI 10.1109/TSE.2002.1010061; Ricca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M., How Developers' experience and ability influence web application comprehension tasks supported by UML stereotypes: A series of four experiments (2010) IEEE Trans. Softw. Eng., 36 (1), pp. 96-118; Scanniello, G., Gravino, C., Tortora, G., Investigating the role of UML in the software modeling and maintenance - A preliminary industrial survey (2010) Proceedings of the International Conference on Enterprise Information Systems, pp. 141-148. , SciTePress; Scanniello, G., Gravino, C., Tortora, G., Does the combined use of class and sequence diagrams improve the source code comprehension?: Results from a controlled experiment (2012) Proceedings of the International Workshop on Experiences and Empirical Studies in Software Modelling, pp. 25-30. , ACM, New York, NY; Scanniello, G., Ricca, F., Torchiano, M., On the effectiveness of the UMLobject diagrams: A replicated experiment (2011) Proceedings of the International Conference on Evaluation and Assessment in Software Engineering, pp. 76-85. , IET Digital Library; Shapiro, S., Wilk, M., An analysis of variance test for normality (1965) Biometrika, 52 (3-4), pp. 591-611; Shull, F., Carver, J.C., Vegas, S., Juzgado, N.J., The role of replications in empirical software engineering (2008) Empirical Softw. Eng., 13 (2), pp. 211-218; Shull, F., Mendoncça, M.G., Basili, V., Carver, J., Maldonado, J.C., Fabbri, S., Travassos, G.H., Ferreira, M.C., Knowledge-sharing issues in experimental software engineering (2004) Empirical Softw. Eng., 9 (1-2), pp. 111-137; Sjoberg, D.I.K., Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanovic, A., Liborg, N.-K., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE Transactions on Software Engineering, 31 (9), pp. 733-753. , DOI 10.1109/TSE.2005.97; Tilley, S., Huang, S., A qualitative assessment of the efficacy of UML diagrams as a form of graphical documentation in aiding program understanding (2003) ACM Special Interest Group for Design. of Commun.; SIGDOC 2003: Finding Real-World Solutions for Doc.: How Theory Informs Pract. and Pract. Informs Theory. Proc. of the 21st Annu. Int. Conf. on Doc., pp. 184-191. , ACM Special Interest Group for Design of Commun.; SIGDOC 2003: Finding Real-World Solutions for Doc.: How Theory Informs Pract. and Pract. Informs Theory. Proc. of the 21st Annu. Int. Conf. on Doc; Tryggeseth, E., Report from an Experiment: Impact of Documentation on Maintenance (1997) Empirical Software Engineering, 2 (2), pp. 201-207; Vegas, S., Juristo, N., Moreno, A., Solari, M., Letelier, P., Analysis of the influence of communication between researchers on experiment replication (2006) ISCE'06 - Proceedings of the 5th ACM-IEEE International Symposium on Empirical Software Engineering, 2006, pp. 28-37. , DOI 10.1145/1159733.1159741, ISCE'06 - Proceedings of the 5th ACM-IEEE International Symposium on Empirical Software Engineering; Verelst, J., The influence of the level of abstraction on the evolvability of conceptual models of information systems (2004) Proceedings - 2004 International Symposium on Empirical Software Engineering, ISESE 2004, pp. 17-26. , Proceedings - 2004 International Symposium on Empirical Software Engineering, ISESE 2004; Klaus, W., Pohl, K., Jarke, M., Haumer, P., Scenarios in system development: Current practice (1998) IEEE Software, 15 (2), pp. 34-45; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M., Regnell, B., Wesslén, A., (2000) Experimentation in Software Engineering - An Introduction, , Kluwer},
  review                  = {{E C2 C4}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897988356&doi=10.1145%2f2491912&partnerID=40&md5=9420803c0b797396523f364fb36f4767},
}

@Conference{Siebra2015376,
  author              = {Siebra, C.A. and Mello, M.A.B.},
  title               = {The importance of replications in software engineering - A case study in defect prediction},
  year                = {2015},
  pages               = {376-381},
  publisher           = {Association for Computing Machinery, Inc},
  note                = {cited By 0; Conference of Research in Adaptive and Convergent Systems, RACS 2015 ; Conference Date: 9 October 2015 Through 12 October 2015; Conference Code:118350},
  abbrev_source_title = {Proc. Res. Adapt. Convergent Syst., RACS 2015},
  abstract            = {Prediction of defects in software is an important investigation area in software engineering, since such technique is able to return indications of parts of the code that are prone to contain problems. Thus, test teams can optimize the allocation of their resources by directing them to modules that are more defect-prone. The use of supervised learning is one of the approaches to support the design of prediction models. However, the erroneous use of training datasets can lead to poor models and, consequently, false results regarding accuracy. This work replicates important experiments of the area and shows how they could provide reliable results via the use of simple techniques of pre-processing. Based on the results, we discuss the importance of replications as method to find problems in current results and how this method is being motivated inside the software engineering area. © 2015 ACM.},
  affiliation         = {LIAA - Laboratory of Applied Artificial Intelligence, Center of Informatics, Federal University of Paraiba, Joao Pessoa - PB, Brazil},
  author_keywords     = {Defect prediction; Replication; Supervised learning},
  document_type       = {Conference Paper},
  doi                 = {10.1145/2811411.2811544},
  isbn                = {9781450337380},
  journal             = {Proceeding of the 2015 Research in Adaptive and Convergent Systems, RACS 2015},
  keywords            = {Defects; Software engineering; Supervised learning, Defect prediction; Pre-processing; Prediction model; Reliable results; Replication; Training data sets, Forecasting},
  language            = {English},
  references          = {Kamei, Y., Matsumoto, S., Monden, A., Matsumoto, K., Adams, B., Hassan, A., Revisiting common bug prediction findings using effort-aware models (2010) Proceedings of the IEEE International Conference on Software Maintenance, pp. 1-10; Jiang, T., Tan, L., Kim, S., Personalized defect prediction (2013) IEEE/ACM 28th International Conference on Automated Software Engineering, pp. 279-289; Li, M., Zhang, H., Wu, R., Zhou, Z., Sample-based software defect prediction with active and semi-supervised learning (2012) Automated Software Engineering, 19 (2), pp. 201-230; Wang, Y., Cotofana, S., A novel virtual age reliability model for Time-to-Failure prediction (2010) IEEE International Integrated Reliability Workshop, pp. 102-105. , Final Report; Nakajo, T., Kume, H., A case history analysis of software error cause-effect relationships (1991) IEEE Trans. Software Engineering, 17 (8), pp. 830-838; Singh, M., Salaria, D., Software defect prediction tool based on neural network (2013) International Journal of Computer Applications, 70 (22), pp. 0975-8887; He, Z., Shu, F., Yang, Y., Li, M., Wang, Q., An investigation on the feasibility of cross-project defect prediction (2012) Automated Software Engineering, 19 (2), pp. 167-199; Fenton, N., Neil, M., Marsh, W., Hearty, P., Radliski, L., Krause, P., On the effectiveness of early life cycle defect prediction with Bayesian nets (2008) Empirical Software Engineering, 13 (5), pp. 499-537; Caruana, R., Niculescu-Mizil, A., An empirical comparison of supervised learning algorithms (2006) Proceedings of the 23rd International Conference on Machine Learning, pp. 161-168; Hassan, A., Predicting faults using the complexity of code changes (2009) Proceedings of the 31st International Conference on Software Engineering, pp. 78-88; Emam, E.K., Melo, W., Machado, J., The prediction of faulty classes using object-oriented design metrics (2001) Journal of Systems and Software, 56 (1), pp. 63-75; Lee, T., Nam, J., Han, D., Kim, S., Hoh, I., Micro interaction metrics for defect prediction (2011) SIGSOFT'11/FSE-19: Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of Software Engineering; Rahman, R., Devanbu, P., How, and why, process metrics are better (2013) Proceedings of the 2013 International Conference on Software Engineering, pp. 432-441; Emam, K., Melo, W., Machado, J., The prediction of faulty classes using object-oriented design metrics (2001) Journal of Systems and Software, 56, pp. 63-75; Kamiya, T., Kusumoto, S., Inoue, K., Prediction of faultproneness at early phase in object-oriented development (1999) Proceedings of the 2nd International Symposium on Object Oriented Real-time Distributed Computing, pp. 253-258; Neumann, R., Bibi, S., Building fault prediction models from abstract cognitive complexity metrics-analyzing and interpreting fault related influences (2004) Proceedings of the International Workshop on Software Measurement/Metrikon, pp. 575-587; Jindal, R., Malhotra, R., Jain, A., Software defect prediction using neural networks (2014) 3rd International Conference on Reliability, Infocom Technologies and Optimization (ICRITO) (Trends and Future Directions), p. 1. , 6, 8-10; Witten, I., Frank, E., (1999) Data Mining: Practical Machine Learning Tools with Java Implementations, , Morgan Kaufmann, San Francisco; Fenton, N., Neil, M., A critique of software defect prediction models (1999) IEEE Transactions on Software Engineering, 25 (5), pp. 675-689; Lanubile, F., Lonigro, A., Visaggio, G., Comparing models for identifying fault-prone software components (1995) Proceedings of the 7th International Conference on Software Engineering and Knowledge Engineering, pp. 312-319; Nam, J., (2009) Software Fault Prediction: A Literature Review and Current Trends. Survey on Software Defect Prediction, , Master's Thesis, Department of Computer Science and Engineering, The Hong Kong University of Science and Technology; Catal, C., Software fault prediction: A literature review and current trends (2011) Expert Systems with Applications, 38, pp. 4626-4636; Punitha, K., Chitra, S., Software defect prediction using software metrics - A survey (2013) International Conference on Information Communication and Embedded Systems, pp. 555-558; Challagulla, V., Bastani, F., Yen, I., Paul, R., Empirical assessment of machine learning based software defect prediction techniques (2005) 10th IEEE International Workshop on Object-oriented Real-time Dependable Systems, pp. 263-270; Juristo, N., Gomez, O., Replication of software engineering experiments (2012) Lecture Notes in Computer Science, 7007, pp. 60-88; Sjøberg, D., Hannay, J., Hansen, O., Kampenes, V., Karahasanovic, A., Liborg, N., Rekdal, A., A survey of controlled experiments in software engineering (2005) IEEE Transactions on Software Engineering, 31 (9), pp. 733-753; Premraj, R., Herzig, K., Network versus code metrics to predict defects: A replication study (2011) International Symposium on Empirical Software Engineering and Measurement, p. 215224},
  review              = {{CS C5}},
  source              = {Scopus},
  sponsors            = {ACM Special Interest Group on Applied Computing (SIGAPP); Association of Convergent Computing Technology (ACCT)},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960930498&doi=10.1145%2f2811411.2811544&partnerID=40&md5=b80e05c0e0188eaaf63af390106d6815},
}

@Conference{Solari2014106,
  author              = {Solari, M. and Matalonga, S.},
  title               = {A controlled experiment to explore potentially undetectable defects for testing techniques},
  year                = {2014},
  volume              = {2014-January},
  number              = {January},
  pages               = {106-109},
  publisher           = {Knowledge Systems Institute Graduate School},
  note                = {cited By 0; Conference of 26th International Conference on Software Engineering and Knowledge Engineering, SEKE 2014 ; Conference Date: 1 July 2014 Through 3 July 2014; Conference Code:112837},
  abbrev_source_title = {Proc. Int. Conf. Softw. Eng. Knowl. Eng., SEKE},
  abstract            = {Software testing practitioners have an array of testing techniques to choose from to test their software. Nevertheless, there is little empirical evidence about the capability of each technique to detect specific types of defects. As a result, when selecting and combining the testing techniques for a project, practitioners must rely on their own experience. This paper studies the behaviour of two specific techniques, equivalence partitioning and decision coverage, to determine which types of defect are potentially undetectable to either one. This paper presents a differentiated experiment replication based on a previous experimental design, but using different artifacts. The experiment confirms the hypothesis that some defect types are undetectable to each technique. Even with a correct application of each technique, some defects will only be detected by chance. This study adds new empirical evidence for constructing a classification of defects that takes into account technique detection capabilities. Copyright © 2014 by Knowledge Systems Institute Graduate School.},
  affiliation         = {Universidad ORT Uruguay, Uruguay},
  author_keywords     = {Defect detection; Experiment; Software testing},
  document_type       = {Conference Paper},
  issn                = {23259000},
  journal             = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  language            = {English},
  references          = {Juristo, N., Moreno, A.M., Vegas, S., Solari, M., In search of what We experimentally know about unit testing (2006) IEEE Softw., 23 (6), pp. 72-80. , Nov; Basili, V.R., Selby, R.W., Comparing the effectiveness of software testing strategies (1987) IEEE Trans. Softw. Eng., SE-13 (12), pp. 1278-1296; Kamsties, E., Lott, C.M., An empirical evaluation of three defect-detection techniques (1995) European Software Engineering Conference; Roper, M., Wood, M., Miller, J., An empirical evaluation of defect detection techniques (1997) Inf. Softw. Technol., 39, pp. 763-775; Juristo, N., Vegas, S., Functional testing, structural testing, and code reading: What fault type Do they each detect? (2003) Empirical Methods and Studies in Software Engineering - Experiences from ESERNET, pp. 208-232. , A. I. Wang, Ed. Springer; Juristo, N., Vegas, S., Solari, M., Abrahao, S., Ramos, I., Comparing the effectiveness of equivalence partitioning, branch testing and code reading by stepwise abstraction applied by subjects (2012) International Conference on Software Testing, Verification and Validation (ICST 2012); Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) 1st International Workshop on Replication in Empirical Software Engineering Research (RESER), , [Held during ICSE 2010]; Shull, F., Carver, J.C., Vegas, S., Juristo, N., The role of replications in empirical software engineering (2008) Empir. Softw. Eng., 13 (2), pp. 211-218; Juristo, N., Vegas, S., Solari, M., Abrahao, S., Ramos, I., A process for managing interaction between experimenters to get useful similar replications (2013) Inf. Softw. Technol., 55 (2), pp. 215-225},
  review              = {{E C5 C11}},
  source              = {Scopus},
  sponsors            = {Knowledge Systems Institute Graduate School},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938317414&partnerID=40&md5=0b9a4c0c8f41ba502079222a1f463fe3},
}

@Conference{Solari2013213,
  author                  = {Solari, M.},
  title                   = {Identifying experimental incidents in software engineering replications},
  year                    = {2013},
  pages                   = {213-222},
  address                 = {Baltimore, MD},
  note                    = {cited By 2; Conference of 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM 2013 ; Conference Date: 10 October 2013 Through 11 October 2013; Conference Code:102346},
  abbrev_source_title     = {Int. Symp. Empir. Softw. Eng. Meas.},
  abstract                = {The Empirical Software Engineering community is taking a growing interest in replicating experiments, but replications still pose a challenge for researchers. To be able to do better replications, we require detailed knowledge of what happens when a replication is performed. This article introduces a procedure for empirically evaluating replications designed to identify experimental incidents. The evaluation employs a qualitative method to analyze interviews with the principal investigator and other sources of information. We evaluated five replications of the same experiment run by different experimenters at different sites. We identified 49 incident types that occurred between 1 and 4 times across the evaluated replications. Although the replications were conducted within an experimentation network which was set up with collaborative instruments, we identified incidents in all the experimental activities. If experimenters know which incidents are likely to occur in replications, they will be able to focus on the identified problems and improve the replications that they perform. This report is a first step to create and improve experiment communication instruments such as laboratory packages. © 2013 IEEE.},
  affiliation             = {Universidad ORT Uruguay, Montevideo, Uruguay},
  art_number              = {6681354},
  author_keywords         = {Collaboration; Methodology; Replication},
  correspondence_address1 = {Solari, M.; Universidad ORT Uruguay, Montevideo, Uruguay; email: martin.solari@ort.edu.uy},
  document_type           = {Conference Paper},
  doi                     = {10.1109/ESEM.2013.26},
  issn                    = {19493770},
  journal                 = {International Symposium on Empirical Software Engineering and Measurement},
  keywords                = {Collaboration; Empirical Software Engineering; Experimental activities; Methodology; Principal investigators; Qualitative method; Replication; Sources of informations, Experiments, Software engineering},
  language                = {English},
  references              = {Shull, F., Carver, J.C., Vegas, S., Juristo, N., The role of replications in Empirical Software Engineering (2008) Empirical Software Engineering, 13 (2), pp. 211-218; Juristo, N., Vegas, S., The role of non-exact replications in software engineering experiments (2010) Empirical Software Engineering, 16 (3), pp. 295-324. , Aug; Knutson, C.D., Krein, J.L., Prechelt, L., Juristo, N., Report from the 1st international workshop on replication in empirical software engineering research (RESER 2010) (2010) ACM SIGSOFT Software Engineering Notes, 35 (5), p. 42. , Oct; Brooks, A., Daly, J., Miller, J., Roper, M., Wood, M., (1996) Replication of Experimental Results in Software Engineering, , ISERN Report; Basili, V.R., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) IEEE Transactions on Software Engineering, 25 (4), pp. 456-473; Shull, F., Basili, V.R., Carver, J.C., Maldonado, J.C., Travassos, G.H., Mendonça, M.G., Fabbri, S., Replicating software engineering experiments: Addressing the tacit knowledge problem (2002) International Symposium on Empirical Software Engineering; Almqvist, J.P.F., (2006) Replication of Controlled Experiments in Empirical Software Engineering-A Survey, , Lund University Thesis, LU-DV-EX:2006-75; Vegas, S., Juristo, N., Moreno, A.M., Solari, M., Letelier, P., Analysis of the influence of communication between researchers on experiment replication (2006) ACM/IEEE International Symposium on Empirical Software Engineering (ISESE2006), p. 28; Mendonça, M.G., Maldonado, J.C., De Oliveira, M.C.F., Carver, J.C., Fabbri, S., Shull, F., Travassos, G.H., Basili, V.R., A framework for software engineering experimental replications (2008) 13th IEEE International Conference on Engineering of Complex Computer Systems (ICECCS 2008), pp. 203-212; Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) 1st International Workshop on Replication in Empirical Software Engineering Research (RESER) [Held during ICSE 2010]; Seaman, C., Qualitative methods in empirical studies of software engineering (1999) IEEE Transactions on Software Engineering, 25 (4), pp. 557-572; Glaser, B.G., Strauss, A.L., (1967) The Discovery of Grounded Theory, , Aldine Transaction; Wolcott, H.F., (1994) Transforming Qualitative Data: Description, Analysis, and Interpretation, , Sage Publications, Inc; Kvale, S., (1996) InterViews: An Introduction to Qualitative Research Interviewing, , Sage Publications, Inc; Lott, C.M., Rombach, H.D., Repeatable software engineering experiments for comparing defect-detection techniques (1996) Empirical Software Engineering, 1 (3); Wood, M., Roper, M., Brooks, A., Miller, J., Comparing and combining software defect detection techniques: A replicated empirical study (1997) European Conference Held Jointly with the 5th ACM SIGSOFT International Symposium on Foundations of Software Engineering; Juristo, N., Vegas, S., Solari, M., Abrahao, S., Ramos, I., Comparing the effectiveness of equivalence partitioning, branch testing and code reading by stepwise abstraction applied by subjects (2012) International Conference on Software Testing, Verification and Validation (ICST 2012)},
  review                  = {{CS C12}},
  source                  = {Scopus},
  sponsors                = {Experimental Software Engi. Group at; COPPE/Federal University of Rio de Janeiro; Fraunhofer Center for Experimental Software Eng.; IEEE Software; Microsoft Research},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893318797&doi=10.1109%2fESEM.2013.26&partnerID=40&md5=29f55e22573db3bfda346c2584cc8869},
}

@Conference{Sun20168,
  author              = {Sun, P. and Stolee, K.T.},
  title               = {Exploring crowd consistency in a mechanical Turk survey},
  year                = {2016},
  pages               = {8-14},
  publisher           = {Association for Computing Machinery, Inc},
  note                = {cited By 0; Conference of 3rd International Workshop on CrowdSourcing in Software Engineering, CSI-SE 2016 ; Conference Date: 16 May 2016; Conference Code:121795},
  abbrev_source_title = {Proc. - Int. Workshop CrowdSourcing Softw. Eng., CSI-SE},
  abstract            = {Crowdsourcing can provide a platform for evaluating software engineering research. In this paper, we aim to explore characteristics of the worker population on Amazon's Mechanical Turk, a popular microtask crowdsourcing environment, and measure the percentage of workers who are potentially qualified to perform software-or computer science related tasks. Through a baseline survey and two replications, we measure workers' answer consistency as well as the consistency of sample characteristics. In the end, we deployed 1,200 total surveys that were completed by 1,064 unique workers. Our results show that 24% of the study participants have a computer science or IT background and most people are payment driven when choosing tasks. The sample characteristics can vary significantly, even on large samples with 300 participants. Additionally, we often observed inconsistency in workers' answers for those who completed two surveys; approximately 30% answered at least one question inconsistently between the two survey submissions. This implies a need for replication and quality controls in crowdsourced experiments. © 2016 ACM.},
  affiliation         = {Department of Computer Science, North Carolina State University, United States},
  document_type       = {Conference Paper},
  doi                 = {10.1145/2897659.2897662},
  isbn                = {9781450341585},
  journal             = {Proceedings - 3rd International Workshop on CrowdSourcing in Software Engineering, CSI-SE 2016},
  keywords            = {Crowdsourcing; Software engineering; Surveys, Amazon's mechanical turks; Evaluating software; Mechanical turks; Workers', Computer software},
  language            = {English},
  references          = {Cochran, R.A., D'Antoni, L., Livshits, B., Molnar, D., Veanes, M., Program boosting: Program synthesis via crowd-sourcing (2015) Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, POPL '15, pp. 677-688. , New York, NY, USA, ACM; Dolstra, E., Vliegendhart, R., Pouwelse, J., Crowdsourcing gui tests (2013) Software Testing, Verification and Validation (ICST), 2013 IEEE Sixth International Conference on, pp. 332-341. , March; Downs, J.S., Holbrook, M.B., Sheng, S., Cranor, L.F., Are your participants gaming the system?: Screening Mechanical Turk workers (2010) Proceedings of the 28th International Conference on Human Factors in Computing Systems; Finnerty, A., Kucherbaev, P., Tranquillini, S., Convertino, G., Keep it simple: Reward and task design in crowdsourcing (2013) Proceedings of the Biannual Conference of the Italian Chapter of SIGCHI, CHItaly '13, pp. 141-144. , New York, NY, USA, ACM; Fry, Z.P., Landau, B., Weimer, W., A human study of patch maintainability (2012) Proceedings of the 2012 International Symposium on Software Testing and Analysis, ISSTA 2012, pp. 177-187. , New York, NY, USA, ACM; Fry, Z.P., Weimer, W., A human study of fault localization accuracy (2010) Proceedings of the 2010 IEEE International Conference on Software Maintenance, ICSM '10, pp. 1-10. , Washington, DC, USA, IEEE Computer Society; Gãşmez, O.S., Juristo, N., Vegas, S., Understanding replication of experiments in software engineering: A classification (2014) Information and Software Technology, 56 (8), pp. 1033-1048; Kim, S.-H., Yun, H., Yi, J.S., How to filter out random clickers in a crowdsourcing-based study? (2012) Proceedings of the 2012 BELIV Workshop: Beyond Time and Errors-Novel Evaluation Methods for Visualization, BELIV '12, pp. 151-157. , New York, NY, USA. ACM; Kittur, A., Chi, E.H., Suh, B., Crowdsourcing user studies with mechanical turk (2008) Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, CHI '08, pp. 453-456. , New York, NY, USA, ACM; LaToza, T.D., Towne, W.B., Adriano, C.M., Van der Hoek, A., Microtask programming: Building software with a crowd (2014) Proceedings of the 27th Annual ACM Symposium on User Interface Software and Technology, UIST '14, pp. 43-54. , New York, NY, USA, ACM; Mason, W., Watts, D.J., Financial incentives and the performance of crowds (2010) ACM SigKDD Explorations Newsletter, 11 (2), pp. 100-108; Nebeling, M., Speicher, M., Norrie, M.C., Crowdstudy: General toolkit for crowdsourced evaluation of web interfaces (2013) Proceedings of the 5th ACM SIGCHI Symposium on Engineering Interactive Computing Systems, EICS '13, pp. 255-264. , New York, NY, USA, ACM; Paolacci, G., Chandler, J., Ipeirotis, P.G., Running experiments on amazon mechanical turk (2010) Judgment and Decision Making, 5 (5), pp. 411-419; Rogstadius, J., Kostakos, V., Kittur, A., Smus, B., Laredo, J., Vukovic, M., An assessment of intrinsic and extrinsic motivation on task performance in crowdsourcing markets (2011) ICWSM; Ross, J., Irani, L., Silberman, M.S., Zaldivar, A., Tomlinson, B., Who are the crowdworkers?: Shifting demographics in Mechanical Turk (2010) Proceedings of the 28th of the International Conference Extended Abstracts on Human Factors in Computing Systems; Schiller, T.W., Ernst, M.D., Reducing the barriers to writing verified specifications (2012) SIGPLAN Not, 47 (10), pp. 95-112. , Oct; Stewart, N., Ungemach, C., Harris, A.J., Bartels, D.M., Newell, B.R., Paolacci, G., Chandler, J., The average laboratory samples a population of 7,300 amazon mechanical turk workers (2015) Judgment and Decision Making, 10 (5), pp. 479-491; Stolee, K.T., Elbaum, S., Exploring the use of crowdsourcing to support empirical studies in software engineering (2010) International Symposium on Empirical Software Engineering and Measurement; Stolee, K.T., Elbaum, S., Refactoring pipe-like mashups for end-user programmers (2011) International Conference on Software Engineering; Stolee, K.T., Elbaum, S., Dobos, D., Solving the search for source code (2014) ACM Trans. Softw. Eng. Methodol, 23 (3), pp. 261-2645. , June; Yin, M., Chen, Y., Sun, Y.-A., Monetary interventions in crowdsourcing task switching (2014) Second AAAI Conference on Human Computation and Crowdsourcing},
  review              = {{S C12}},
  source              = {Scopus},
  sponsors            = {Association for Computing Machinery, Special Interest Group on Software Engineering (ACM SIGSOFT); IEEE Computer Society; IEEE Technical Council on Software Engineering (TCSE)},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84973497272&doi=10.1145%2f2897659.2897662&partnerID=40&md5=32dba211e03bdc68b1d4ffdaf8417510},
}

@Conference{Sun2015,
  author              = {Sun, W. and Aguirre-Urreta, M.I. and Marakas, G.M.},
  title               = {Effectiveness of pair and solo programming methods: A survey and an analytical approach},
  year                = {2015},
  publisher           = {Americas Conference on Information Systems},
  note                = {cited By 0; Conference of 21st Americas Conference on Information Systems, AMCIS 2015 ; Conference Date: 13 August 2015 Through 15 August 2015; Conference Code:118635},
  abbrev_source_title = {Am. Conf. Inf. Syst., AMCIS},
  abstract            = {We conducted two studies to further our understanding of the dynamics of the programming methods. One is a survey study. We surveyed software professionals in the industry to collect their views on the effectiveness of pair programming versus solo programming. In our second study, we adopted the analytical approach to compare the three modes of programming: solo only, pair only, and a mixture of solo and pair. The second study involves three steps. First, we replicated the study conducted by Dawande and colleagues (Dawande et al. 2008). Second, we applied the parameters collected from our survey to the same model. Third, we extended the analytical model to further study the effect of project complexity and pair composition on the effectiveness of the three different programming modes. Due to space limitations, in this paper, we only report: a) the survey research and its findings; b) partial results from step 2 and step 3 of the second study.},
  affiliation         = {Washburn University, United States; Texas Tech University, United States; Florida International University, United States},
  author_keywords     = {Effectiveness; Pair programming; Practitioner survey; Simulation; Solo programming},
  document_type       = {Conference Paper},
  isbn                = {9780996683104},
  journal             = {2015 Americas Conference on Information Systems, AMCIS 2015},
  keywords            = {Information systems, Analytical approach; Effectiveness; Pair-programming; Partial results; Practitioner surveys; Project complexity; Simulation; Space limitations, Surveys},
  language            = {English},
  references          = {Arisholm, E., Gallis, H., Dybå, T., Sjoberg, D.I.K., Evaluating pair programming with respect to system complexity and programmer expertise (2007) IEEE Transactions on Software Engineering, 33 (2), pp. 65-86; Beck, K., Andres, C., (2004) Extreme Programming Explained: Embrace Change, , Addison-Wesley Professional; Dawande, M., Johar, M., Kumar, S., Mookerjee, V.S., A comparison of pair versus solo programming under different objectives: An analytical approach (2008) Information Systems Research, 19 (1), pp. 71-92; Dybå, T., Arisholm, E., Sjoberg, D.I., Hannay, J.E., Shull, F., Are two heads better than one? On the effectiveness of pair programming (2007) IEEE Software, 24 (6), pp. 12-15; Sun, W., (2011) The True Cost of Pair Programming: Development of a Comprehensive Model and Test, , PhD Dissertation, University of Kansas; Williams, L., Jeffries, R., Kessler, R.R., Cunningham, W., Strengthening the case for pair programming (2000) IEEE Software, 17 (4), pp. 19-25},
  review              = {{S C4}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963594037&partnerID=40&md5=6b6ff7736326807b6e62e40bc8ae017e},
}

@Conference{Tramontana2014,
  author                  = {Tramontana, P. and Risi, M. and Scanniello, G.},
  title                   = {Studying abbreviated vs. full-word identifier names when dealing with faults: An external replication},
  year                    = {2014},
  publisher               = {IEEE Computer Society},
  note                    = {cited By 0; Conference of 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM 2014 ; Conference Date: 18 September 2014 Through 19 September 2014; Conference Code:108081},
  abbrev_source_title     = {Int. Symp. Empir. Softw. Eng. Meas.},
  abstract                = {Context: abbreviated and full-word identifier names in dealing with faults in source code. Goal: investigating whether the use of abbreviated identifier names affects the ability of novice professional software developers in identifying and fixing faults in Java code. Method: external replication. Results: the results of the original experiment (conducted on C code) were confirmed. Conclusions: the difference in using abbreviated and full-word identifiers is not statistically significant with respect to the time to complete a task and the number of faults identified and fixed. © 2014 Authors.},
  affiliation             = {Universitá di Napoli Federico II, Italy; Universitá di Salerno, Italy; Universitá della Basilicata, Italy},
  art_number              = {a64},
  author_keywords         = {fault identification; identifier names; replication},
  correspondence_address1 = {Tramontana, P.; Universitá di Napoli Federico IIItaly},
  document_type           = {Conference Paper},
  doi                     = {10.1145/2652524.2652593},
  isbn                    = {9781450327749},
  issn                    = {19493770},
  journal                 = {International Symposium on Empirical Software Engineering and Measurement},
  keywords                = {External replication; Fault identifications; identifier names; replication},
  language                = {English},
  references              = {Scanniello, G., Risi, M., Dealing with faults in source code: Abbreviated vs. Full-word identifier names (2013) International Conference on Software Maintenance, pp. 190-199. , IEEE CS Press},
  review                  = {{E C4 C5}},
  source                  = {Scopus},
  sponsors                = {IEEE Software; Microsoft Research; Politecnico di Torino; Telecom Italia JOL (Joint Open Lab); Telecom Italia Lab},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907812929&doi=10.1145%2f2652524.2652593&partnerID=40&md5=ea61a8a710b232fb422fe7ad88074279},
}

@Conference{Vetrò2015168,
  author              = {Vetrò, A. and Böhm, W. and Torchiano, M.},
  title               = {On the Benefits and Barriers When Adopting Software Modelling and Model Driven Techniques - An External, Differentiated Replication},
  year                = {2015},
  volume              = {2015-November},
  pages               = {168-171},
  publisher           = {IEEE Computer Society},
  note                = {cited By 0; Conference of ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM 2015 ; Conference Date: 22 October 2015 Through 23 October 2015; Conference Code:118866},
  abbrev_source_title = {Int. Symp. Empir. Softw. Eng. Meas.},
  abstract            = {Context: Applying model driven techniques can lead to several benefits, but their adoption entails also numerous issues. Goal: We aim at understanding the benefits and barriers on the adoption of the modelling techniques for embedded systems developed in a large German research project. Method: We replicate a survey conducted in the Italian industry about relevance, benefits, and problems of software modelling and model driven techniques. Results: With respect to the original study, we could confirm design support and quality of software as achieved benefits. On the side of the barriers, too much effort required, lack of competencies and lack of supporting tools were confirmed. Other barriers were confirmed as not having an impact: refusal from management, cost of supporting tool, fear of lock-in. Conclusions: We observed that even for the not mature modelling techniques in our context of study, a few benefits and a large number of barriers (or lack of) reported in the original study and in literature were confirmed. © 2015 IEEE.},
  affiliation         = {Technische Universität München, Germany; Politecnico di Torino, Italy},
  art_number          = {7321210},
  author_keywords     = {Model Driven Development; Model Driven Engineering; Technology Transfer},
  document_type       = {Conference Paper},
  doi                 = {10.1109/ESEM.2015.7321210},
  isbn                = {9781467378994},
  issn                = {19493770},
  journal             = {International Symposium on Empirical Software Engineering and Measurement},
  keywords            = {Software engineering; Technology transfer, Design support; Model driven development; Model-driven Engineering; Model-driven techniques; Modelling techniques; Quality of softwares; Software modelling; Supporting tool, Embedded systems},
  language            = {English},
  references          = {France, R.B., Rumpe, B., Editorial - Model engineering (2003) Software and System Modeling, 2 (2), pp. 73-75; Völter, M., Md∗ best practices (2009) Journal of Object Technology, 8 (6), pp. 79-102; Torchiano, M., Tomassetti, F.C.A., Ricca, F., Tiso, A., Reggio, G., Relevance, benefits, and problems of software modelling and model driven techniques-a survey in the Italian industry (2013) THE JOURNAL of SYSTEMS and SOFTWARE, 86 (8), pp. 2110-2126; Burden, H., Heldal, R., Whittle, J., Comparing and contrasting model-driven engineering at three large companies (2014) Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, Ser. ESEM '14, pp. 141-1410. , New York, NY, USA: ACM; Hutchinson, J., Whittle, J., Rouncefield, M., Kristoffersen, S., Empirical assessment of MDE in industry (2011) Proceedings of the 33rd International Conference on Software Engineering, ICSE 2011, pp. 471-480. , Waikiki, Honolulu, HI, USA, May 21-28, 2011; Whittle, J., Hutchinson, J., Rouncefield, M., The state of practice in model-driven engineering (2014) IEEE Software, 31 (3), pp. 79-85; Kuhn, A., Murphy, G.C., Thompson, C.A., An exploratory study of forces and frictions affecting large-scale model-driven development (2012) Model Driven Engineering Languages and Systems - 15th International Conference, pp. 352-367. , MODELS 2012, Innsbruck, Austria, September 30-October 5, 2012. Proceedings; Tomassetti, F., Torchiano, M., Tiso, A., Ricca, F., Reggio, G., Maturity of software modelling and model driven engineering: A survey in the Italian industry (2012) 16th International Conference on Evaluation & Assessment in Software Engineering, pp. 91-100. , EASE 2012, Ciudad Real, Spain, May 14-15, 2012. Proceedings; Bhm, W., Henkler, S., Houdek, F., Vogelsang, A., Weyer, T., Bridging the gap between systems and software engineering by using the {SPES} modeling framework as a general systems engineering philosophy (2014) Procedia Computer Science, 28, pp. 187-194. , 2014 Conference on Systems Engineering Research; Pohl, K., Hnninger, H., Achatz, R., Broy, M., (2012) Model-Based Engineering of Embedded Systems: The SPES 2020 Methodology, , Springer Publishing Company, Incorporated; Baldassarre, M.T., Carver, J., Dieste, O., Juristo, N., Replication types: Towards a shared taxonomy (2014) Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering, Ser. EASE '14, pp. 181-184. , New York, NY, USA: ACM; Kitchenham, B.A., Pfleeger, S.L., Personal opinion surveys (2008) Guide to Advanced Empirical Software Engineering, pp. 63-92. , F. Shull, J. Singer, and D. Sjberg, Eds. Springer London; Nugroho, A., Chaudron, M.R., A survey into the rigor of uml use and its perceived impact on quality and productivity (2008) Proceedings of the Second ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, Ser. ESEM '08, pp. 90-99. , New York, NY, USA: ACM; Heijstek, W., Chaudron, M.R.V., Empirical investigations of model size, complexity and effort in a large scale, distributed model driven development process (2009) 35th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2009, pp. 113-120. , Patras, Greece, August 27-29, 2009, Proceedings; Hutchinson, J., Rouncefield, M., Whittle, J., Model-driven engineering practices in industry (2011) Proceedings of the 33rd International Conference on Software Engineering, Ser. ICSE '11, pp. 633-642. , New York, NY, USA: ACM; Davies, I., Green, P., Rosemann, M., Indulska, M., Gallo, S., How do practitioners use conceptual modeling in practice? (2006) Data Knowl. Eng, 58 (3), pp. 358-380. , Sep; Mohagheghi, P., Gilani, W., Stefanescu, A., Fernández, M.A., An empirical study of the state of the practice and acceptance of model-driven engineering in four industrial cases (2013) Empirical Software Engineering, 18 (1), pp. 89-116; Forward, A., Badreddin, O., Lethbridge, T., (2010) Perceptions of Software Modeling: A Survey of Software Practitioners, , 5th workshop from code centric to model centric: evaluating the effectiveness of MDD (C2M: EEMDD); Mohagheghi, P., Fernandez, M.A., Martell, J.A., Fritzsche, M., Gilani, W., Models in Software Engineering, pp. 54-59. , M. R. Chaudron, Ed. Berlin, Heidelberg: Springer-Verlag, 2009, ch. MDE Adoption in Industry: Challenges and Success Criteria; Budgen, D., Burn, A.J., Brereton, O.P., Kitchenham, B.A., Pretorius, R., Empirical evidence about the UML: A systematic literature review (2011) Softw., Pract. Exper, 41 (4), pp. 363-392},
  review              = {{S C8 C3}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961613961&doi=10.1109%2fESEM.2015.7321210&partnerID=40&md5=a4cee8339b99d60a507a2f4065161502},
}

@Conference{Wohlin2014,
  author                  = {Wohlin, C.},
  title                   = {Guidelines for snowballing in systematic literature studies and a replication in software engineering},
  year                    = {2014},
  address                 = {London},
  publisher               = {Association for Computing Machinery},
  note                    = {cited By 2; Conference of 18th International Conference on Evaluation and Assessment in Software Engineering, EASE 2014 ; Conference Date: 12 May 2014 Through 14 May 2014; Conference Code:106611},
  abbrev_source_title     = {ACM Int. Conf. Proc. Ser.},
  abstract                = {Background: Systematic literature studies have become common in software engineering, and hence it is important to understand how to conduct them efficiently and reliably. Objective: This paper presents guidelines for conducting literature reviews using a snowballing approach, and they are illustrated and evaluated by replicating a published systematic literature review. Method: The guidelines are based on the experience from conducting several systematic literature reviews and experimenting with different approaches. Results: The guidelines for using snowballing as a way to search for relevant literature was successfully applied to a systematic literature review. Conclusions: It is concluded that using snowballing, as a first search strategy, may very well be a good alternative to the use of database searches. Copyright 2014 ACM.},
  affiliation             = {Blekinge Institute of Technology, SE - 371 79, Karlskrona, Sweden},
  art_number              = {a38},
  author_keywords         = {Replication; Snowball search; Snowballing; Systematic literature review; Systematic mapping studies},
  correspondence_address1 = {Wohlin, C.; Blekinge Institute of Technology, SE - 371 79, Karlskrona, Sweden; email: Claes.Wohlin@bth.se},
  document_type           = {Conference Paper},
  doi                     = {10.1145/2601248.2601268},
  isbn                    = {9781450324762},
  journal                 = {ACM International Conference Proceeding Series},
  keywords                = {Search engines, Replication; Snowball search; Snowballing; Systematic literature review; Systematic mapping studies, Software engineering},
  language                = {English},
  references              = {Kitchenham, B.A., Dybå, T., Jørgensen, M., Evidence-based software engineering (2004) Proceedings of 27th IEEE International Software Engineering Conference, pp. 273-281. , IEEE Computer Society, 2004; Webster, J., Watson, R.T., Analyzing the past to prepare for the future: Writing a literature review (2002) MIS Quarterly, 26 (2), pp. xiii-xxiii; Pickard, L., Kitchenham, B.A., Jones, P., Combining empirical results in software engineering (1998) Information & Software Technology, 40 (14), pp. 811-821; Miller, J., Can results from software engineering experiments be safely combined? (1999) Proceedings IEEE 6th International Symposium on Software Metrics, pp. 152-158; Hayes, W., Research synthesis in software engineering: A case for meta-analysis (1999) Proceedings 6th IEEE International Software Metrics Symposium, pp. 143-151; Basili, V.R., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) IEEE Transactions on Software Engineering, 25 (4), pp. 456-473; Kitchenham, B.A., Charters, S., (2007) Guidelines for Performing Systematic Literature Reviews in Software Engineering, , Version 2.3, EBSE Technical Report, EBSE-2007-01, Keele University; Petersen, K., Feldt, R., Mujtaba, S., Mattsson, M., Systematic mapping studies in software engineering (2008) Proceedings 12th International Conference on Evaluation and Assessment in Software Engineering; Kitchenham, B.A., Budgen, D., Brereton, O.P., Using mapping studies as the basis for further research - A participant-observer case study (2011) Information and Software Technology, 53 (6), pp. 638-651; Wohlin, C., Prikladnicki, R., Systematic literature reviews in software engineering (2013) Information and Software Technology, 55 (6), pp. 919-920; Macdonell, S., Shepperd, M., Kitchenham, B.A., Mendes, E., How reliable are systematic reviews in empirical software engineering? (2010) IEEE Transactions on Software Engineering, 36 (5), pp. 676-687; Wohlin, C., Runeson, P., Da Mota Silveira Neto, P.A., Engström, E., Do Carmo Machado, I., De Almeida, E.S., On the reliability of mapping studies in software engineering (2013) Journal of Systems and Software, 86 (10), pp. 2594-2610; Kitchenham, B.A., Brereton, O.P., Budgen, D., Turner, M., Bailey, J., Linkman, S., Systematic literature reviews in software engineering: A systematic literature review (2009) Information and Software Technology, 51 (1), pp. 7-15; Kitchenham, B.A., Pretorius, R., Budgen, D., Brereton, O.P., Turner, M., Niazi, M., Linkman, S., Systematic literature reviews in software engineering: A tertiary study (2010) Information and Software Technology, 52 (8), pp. 792-805; Greenhalgh, T., Peacock, R., Effectiveness and efficiency of search methods in systematic reviews of complex evidence: Audit of primary sources (2005) BMJ, 331 (7524), pp. 1064-1065; Skoglund, M., Runeson, P., Reference-based search strategies in systematic reviews (2009) Proceedings 13th Evaluation and Assessment in Software Engineering, pp. 31-40; Kitchenham, B.A., Brereton, O.P., Li, Z., Budgen, D., Burn, A., Repeatability of systematic literature reviews (2011) Proceedings of the 15th International Conference on Evaluation and Assessment in Software Engineering, pp. 46-55; Zhang, H., Babar, M.A., Tell, P., Identifying relevant studies in software engineering (2011) Information and Software Technology, 53 (6), pp. 625-637; Jalali, S., Wohlin, C., Systematic literature studies: Database searches vs backward snowballing (2012) Proceedings 6th International Symposium on Empirical Software Engineering and Measurement, pp. 29-38; Jalali, S., Wohlin, C., Global software engineering and agile practices: A systematic review (2012) Journal of Software: Evolution and Process, 24 (6), pp. 643-659; Smite, D., Wohlin, C., Galvina, Z., Prikladnicki, R., An empirically based terminology and taxonomy for global software engineering (2012) Empirical Software Engineering: An International Journal, 19 (1), pp. 105-153},
  review                  = {{E C12}},
  source                  = {Scopus},
  sponsors                = {Brunel University},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905448310&doi=10.1145%2f2601248.2601268&partnerID=40&md5=d59a5ab2784337be43046c866207ad8a},
}

@Article{Wu20131933,
  author                  = {Wu, F.},
  title                   = {Empirical tests of scale-free characteristic in open source software: A replicated case study},
  journal                 = {Advanced Materials Research},
  year                    = {2013},
  volume                  = {622},
  pages                   = {1933-1936},
  issn                    = {10226680},
  note                    = {cited By 0; Conference of 2012 3rd International Conference on Manufacturing Science and Technology, ICMST 2012 ; Conference Date: 18 August 2012 Through 19 August 2012; Conference Code:95057},
  abbrev_source_title     = {Adv. Mater. Res.},
  abstract                = {Open source software systems are becoming increasingly important these days and will grow stronger in the future. In order to gain more information about them, their structure characteristics and behavior characteristics need to be measured. This paper tests scale free characteristics on open source real-world software empirically. More specially, this paper checks whether Chidamber and Kemerer metrics suite follows power law or not through three versions of Weka. Our empirical results showed that the features of complex networks didn't exist in Weka. © (2013) Trans Tech Publications, Switzerland.},
  address                 = {New Delhi},
  affiliation             = {School of Information Technology, Jiangxi University of Finance and Economics, NanChang, 330013, China},
  author_keywords         = {Chidamber and kemerer metrics; Complex networks; Open source software; Power-laws; Scale free},
  correspondence_address1 = {Wu, F.; School of Information Technology, Jiangxi University of Finance and Economics, NanChang, 330013, China; email: wufangjun@jxufe.edu.cn},
  document_type           = {Conference Paper},
  doi                     = {10.4028/www.scientific.net/AMR.622-623.1933},
  isbn                    = {9783037855638},
  keywords                = {Chidamber and kemerer metrics; Complex networks; Open Source Software; Power-laws; Scale-free, Manufacture; Software testing; Technology, Open systems},
  language                = {English},
  references              = {Kemp, R., Current developments in open source software (2009) Computer Law & Security Report, 25, pp. 569-582; Vasa, R., (2010) Growth and Change Dynamics In Open Source Software Systems, , PhD thesis. Swinburne University of Technology; Aksulu, A., Wade, M., A comprehensive review and synthesis of open source research (2010) Journal of the Association For Information Systems, 11, pp. 576-656; Chidamber, S., Kemerer, C., A metrics suite for object-oriented design (1994) IEEE Transactions On Software Engineering, 20 (6), pp. 476-493; Xiaofan, W., Li, X., Guanrong, C., (2006) Complex Network Theory and Its Applications, , Beijing: Tsinghua University Press; He, K., Ma, Y., Jing, L., Li, B., Rong, P., (2008) Networked Software, , Beijing: Science Press; Tao, C., Qing, G., Shusen, W., Hen Daoxu. Research on complex networks-based code architecture and evolution of JDK (2007) ACTA ELECTRONICA SINICA, 35 (12 A), pp. 118-123; Raja, U., Tretter, M.J., Defining and evaluating a measure of open source project survivability (2012) IEEE Transactions On Software Engineering, 38 (1), pp. 163-174; Watts, D.J., Strogatz, S.H., Collective dynamics of small-world networks (1998) Nature, 393 (6684), pp. 440-442; Barabási, A.L., Albert, R., Emergence of scaling in random networks (1999) Science, 286 (5439), pp. 509-512},
  review                  = {{CS C5}},
  source                  = {Scopus},
  sponsors                = {IACSIT; Trans tech publications inc.; Engineering Village},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872738366&doi=10.4028%2fwww.scientific.net%2fAMR.622-623.1933&partnerID=40&md5=3b1da33497590a4ad7a1857d5c115b89},
}

@Article{Yang20141497,
  author                  = {Yang, H.},
  title                   = {Improved software cost estimation method based on COCOMO model and linear regression},
  journal                 = {Advanced Materials Research},
  year                    = {2014},
  volume                  = {989-994},
  pages                   = {1497-1500},
  issn                    = {10226680},
  note                    = {cited By 0; Conference of 4th International Conference on Materials Science and Information Technology, MSIT 2014 ; Conference Date: 14 June 2014 Through 15 June 2014; Conference Code:106909},
  abbrev_source_title     = {Adv. Mater. Res.},
  abstract                = {Software cost estimation is the key step to software development management. In order to make COCOMO model applicable to Chinese enterprises, an improved software cost estimation method based on COCOMO model and linear regression was proposed in this paper. Then the replication experiment was taken by using the historical software project data of given enterprises, and then compared experience estimation with the new improved method proposed in this paper about the forecasting accuracy. The results verified that the improved cost estimation method has more practical value to software development. © (2014) Trans Tech Publications, Switzerland.},
  address                 = {Tianjin},
  affiliation             = {College of Information Science and Electricity Engineering, Shandong Jiaotong University, Jinan, Shandong, 250023, China},
  author_keywords         = {COCOMO model; Estimation error; Linear regression; Software cost estimation},
  correspondence_address1 = {Yang, H.; College of Information Science and Electricity Engineering, Shandong Jiaotong University, Jinan, Shandong, 250023, China; email: yanghai_sdjtu@163.com},
  document_type           = {Conference Paper},
  doi                     = {10.4028/www.scientific.net/AMR.989-994.1497},
  isbn                    = {9783038351733},
  keywords                = {Cost estimating; Estimation; Linear regression; Software design, Chinese enterprise; COCOMO model; Cost estimation methods; Estimation errors; Forecasting accuracy; Software cost estimations; Software development management; Software project, Enterprise software},
  language                = {English},
  publisher               = {Trans Tech Publications Ltd},
  references              = {Hawkins, D.M., On the Investigation of Alternative Regressions by Principal Component Analysis (1973) Journal of the Royal Statistical Society, 22 (3), pp. 275-286. , Series C; Boehm, B., Software Engineering Economics (1981) Englewood Cliffs, , NJ: Prentice-Hall, ISBN 0-13-822122-7; Hemmstra, F., Kusters, R., Function point analysis: Evaluation of a software cost estimation model (1991) European Journal of Information Systems, 1 (4), pp. 229-237; Kemerer, C.F., An Empirical Validation of Software Cost Estimation Models (1987) Communications of the ACM, 30 (5), pp. 416-421; Hale, J., Enhancing the Cocomo Estimation Models [J] (2000) IEEE Software, (6), pp. 45-49; Boehm, B., (2000) Software Cost Estimation With COCOMO II (with CD-ROM), , Englewood Cliffs, NJ: Prentice-Hall, ISBN 0-13-026692-2; Chen, Z., Finding the Right Data for Software Cost Modeling [J] (2005) IEEE Software, (5), pp. 38-46},
  review                  = {{E C8 C3}},
  source                  = {Scopus},
  sponsors                = {Computer Science and Electronic Technology; Inst. of Mechatronics Eng., Tianjin Univ. of Technol. and Educ.; Trans Tech Publications inc.},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905842815&doi=10.4028%2fwww.scientific.net%2fAMR.989-994.1497&partnerID=40&md5=a583582e19d449209d0e6e972ccef02f},
}

@Conference{Vegas20153,
  author              = {Vegas, S. and Dieste, O. and Juristo, N.},
  title               = {Difficulties in Running Experiments in the Software Industry: Experiences from the Trenches},
  year                = {2015},
  pages               = {3-9},
  publisher           = {Institute of Electrical and Electronics Engineers Inc.},
  note                = {cited By 3; Conference of 3rd International Workshop on Conducting Empirical Studies in Industry, CESI 2015 ; Conference Date: 18 May 2015; Conference Code:115696},
  abbrev_source_title = {Proc. - Int. Workshop Conduct. Empir. Stud. Ind., CESI},
  abstract            = {Controlled experiments in laboratory settings are relatively commonplace in software engineering, but experiments in industry are thin on the ground. Of the few existing cases, most are 1-1 (running one experiment at one company), just a few are n-1 (running n experiments at one company) and still fewer are 1-n (running one and the same experiment at n companies). In this paper we report the difficulties that we experienced running the same experiment at several companies. We ran the same experiment in five different settings at three companies, and the results were transferred to each company so that they could exploit the resulting evidence in their decision-making process. We have found that: 1) it was relatively easy to get companies involved; 2) they did not cooperate as much as they had agreed to in the project proposal; 3) our industrial environments imposed many more constraints on the experimental design than laboratory environments; 4) professionals were less motivated than students; 5) the reliability of the results could be compromised by subject characteristics and behaviour; and 6) experiment findings could not be transferred using just the standard reporting guidelines that are used for scientific articles. © 2015 IEEE.},
  affiliation         = {Escuela Técnica Superior de Ingenieros Informáticos, Universidad Politécnica de Madrid, Madrid, Spain; Department of Information Processing Science, University of Oulu, Oulu, Finland},
  art_number          = {7167419},
  author_keywords     = {experimentation; experimentation in industry; replication of experiments},
  document_type       = {Conference Paper},
  doi                 = {10.1109/CESI.2015.8},
  isbn                = {9781479919345},
  journal             = {Proceedings - 3rd International Workshop on Conducting Empirical Studies in Industry, CESI 2015},
  keywords            = {Decision making; Software engineering, Controlled experiment; Decision making process; experimentation; Industrial environments; Laboratory environment; Scientific articles; Software industry, Design of experiments},
  language            = {English},
  references          = {Anda, B., Sjøberg, D.I.K., Mockus, A., Variability and reproducibility in software engineering: A study of four companies that developed the same system (2009) IEEE Transactions on Software Engineering, 35 (3), pp. 407-429; Basili, V.R., McGarry, F.E., Pajerski, R., Zelkowitz, M.V., Lessons learned from 25 years of process improvement: The rise and fall of the nasa software engineering laboratory (2002) Proceedings of the International Conference on Software Engineering (ICSE'02), pp. 69-79. , Orlando, Florida; Dieste, O., Juristo, N., Martinez, D., Software industry experiments: A systematic literature review (2013) Proceedings of the 1st International Workshop on Conducting Empirical Studies in Industry (CESI 2013), pp. 2-8. , San Francisco, USA; Höfer, A., Tichy, W.F., Status of empirical research in software engineering (2007) Empirical Software Engineering Issues: Critical Assessment and Future Directions, 1996, pp. 10-19. , H.D. Rombach, V.R. Basili, R.W. Selby editors. Springer-Verlag; Houdek, F., Schneider, K., Wieser, E., Establishing experience factories at daimler-benz an experience report Proceedings of the International Conference on Software Engineering (ICSE'98), pp. 443-447. , Kyoto, Japan; Jedlitschka, A., Juristo, N., Rombach, D., Reporting experiments to satisfy professionals' information needs (2014) Empirical Software Engineering, 19, pp. 1921-1955; Juristo, N., Moreno, A.M., (2001) Basics of Software Engineering Experimentation, , Kluwer; Sjoeberg, D.I.K., Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanovic, A., Liborg, N.K., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE Transactions on Software Engineering., 31 (9), pp. 733-753},
  review              = {{E C12}},
  source              = {Scopus},
  sponsors            = {Association for Computing Machinery (ACM); IEEE Computer Society; Special Interest Group on Software Engineering (SIGSOFT); Technical Council on Software Engineering (TCSE)},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945940693&doi=10.1109%2fCESI.2015.8&partnerID=40&md5=aea2eae466579042d27829185384b98d},
}

@Conference{Chen201432,
  author                  = {Chen, X. and Zhang, W. and Liang, P. and He, K.},
  title                   = {A replicated experiment on architecture pattern recommendation based on quality requirements},
  year                    = {2014},
  editor                  = {Wenzheng L., Tsui E., Prasad Babu M.S.},
  pages                   = {32-36},
  publisher               = {IEEE Computer Society},
  note                    = {cited By 0; Conference of 2014 5th IEEE International Conference on Software Engineering and Service Science, ICSESS 2014 ; Conference Date: 27 June 2014 Through 29 June 2014; Conference Code:108800},
  abbrev_source_title     = {Proc.IEEE Int. Conf. Software Eng. Serv. Sci., ICSESS},
  abstract                = {Applying software architecture patterns in architecture design is an important way to construct high quality design of software architecture. Meanwhile, the selection of architecture patterns has a close relationship to the quality requirements of software systems to be developed. Applying a specific architecture pattern can usually address several quality requirements, and further optimize architecture design. In this paper, we review existing recommendation methods of architecture patterns based on quality requirements, then analyze and verify the validity of a recommendation method through a replicated experiment in software engineering. The result of this work provides architects a verified method to select suitable architecture patterns based on quality requirements. © 2014 IEEE.},
  affiliation             = {State Key Lab of Software Engineering, Computer School, Wuhan University, Wuhan, China},
  art_number              = {6933508},
  author_keywords         = {architecture pattern; architecture tactic; experimental replication; quality requirement; software architecture},
  correspondence_address1 = {Chen, X.; State Key Lab of Software Engineering, Computer School, Wuhan UniversityChina},
  document_type           = {Conference Paper},
  doi                     = {10.1109/ICSESS.2014.6933508},
  isbn                    = {9781479932788},
  issn                    = {23270586},
  journal                 = {Proceedings of the IEEE International Conference on Software Engineering and Service Sciences, ICSESS},
  keywords                = {Architecture patterns; Experimental replications; Quality requirements; Replicated experiment, Software architecture},
  language                = {English},
  references              = {Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-Oriented Software Architecture: A System of Patterns, , England: John. Wiley & Sons Ltd; Ameller, D., Franch, X., How do software architects consider nonfunctional requirements: A survey (2010) Proceedings of the 16th International Working Conference on Requirements Engineering: Foundation for Software Quality (REFSQ), pp. 276-277; Muller, M., Kersten, B., Goedicke, M., A question-based method for deriving software architectures (2011) Proceedings of the 5th European Conference on Software Architecture (ECSA), pp. 35-42; Berntsson, S.R., Gorschek, T., Regnell, B., Torkar, R., Shahrokni, A., Feldt, R., Quality requirements in industrial practice-an extended interview study at eleven companies (2012) IEEE Transactions on Software Engineering, 38 (4), pp. 923-935; Stol, K., Avgeriou, P., Ali Babar, M., Design and evaluation of a process for identifying architecture patterns in open source software (2011) Proceedings of the 5th European Conference on Software Architecture (ECSA), pp. 147-163; Bass, L., Clements, P., Kazman, R., (2012) Software Architecture in Practice, , Third Edition. Boston: Addison Wesley; Harrison, N.B., Avgeriou, P., (2008) Assessing Quality Requirements Through Pattern-based Architecture Reviews, , University of Groningen, Technical Report; Bode, S., Riebisch, M., Impact evaluation for quality-orientedarchitectural decisions regarding evolvability (2010) Proceedings of the 4th European Conference on Software Architecture (ECSA), pp. 182-197; Kassab, M., Ei-Boussaidi, G., Mili, H., A quantitative evaluation of the impact of architectural patterns on quality requirements (2011) Proceedings of the 9th International Conference on Software Engineering Research (SERA), pp. 173-184; Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) Proceedings of the 1st International Workshop on Replication in Empirical Software Engineering Research (RESER), pp. 2-5; Xu, Y., Liang, P., Automated software architectural synthesis using patterns: A cooperative coevolution approach (2014) Proceedings of the 26th International Conference on Software Engineering and Knowledge Engineering (SEKE)},
  review                  = {{E C3 C2 C11}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910037382&doi=10.1109%2fICSESS.2014.6933508&partnerID=40&md5=2b1f464114d96dad4aa2d4b8c2d21bcf},
}

@Article{DaSilva20131316,
  author                  = {Da Silva, F.Q.B. and França, A.C.C. and Suassuna, M. and De Sousa Mariz, L.M.R. and Rossiley, I. and De Miranda, R.C.G. and Gouveia, T.B. and Monteiro, C.V.F. and Lucena, E. and Cardozo, E.S.F. and Espindola, E.},
  title                   = {Team building criteria in software projects: A mix-method replicated study},
  journal                 = {Information and Software Technology},
  year                    = {2013},
  volume                  = {55},
  number                  = {7},
  pages                   = {1316-1340},
  issn                    = {09505849},
  note                    = {cited By 12},
  abbrev_source_title     = {Inf Software Technol},
  abstract                = {Context: The internal composition of a work team is an important antecedent of team performance and the criteria used to select team members play an important role in determining team composition. However, there are only a handful of empirical studies about the use of team building criteria in the software industry. Objective: The goal of this article is to identify criteria used in industrial practice to select members of a software project team, and to look for relationships between the use of these criteria and project success. In addition, we expect to contribute with findings about the use of replication in empirical studies involving human factors in software engineering. Method: Our research was based on an iterative mix-method, replication strategy. In the first iteration, we used qualitative research to identify team-building criteria interviewing software project managers from industry. Then, we performed a cross-sectional survey to assess the correlations of the use of these criteria and project success. In the second iteration, we used the results of a systematic mapping study to complement the set of team building criteria. Finally, we performed a replication of the survey research with variations to verify and improve the results. Results: Our results showed that the consistent use team building criteria correlated significantly with project success, and the criteria related to human factors, such as personality and behavior, presented the strongest correlations. The results of the replication did not reproduce the results of the original survey with respect to the correlations between criteria and success goals. Nevertheless, the variations in the design and the difference in the sample of projects allowed us to conclude that the two results were compatible, increasing our confidence on the existence of the correlations. Conclusion: Our findings indicated that carefully selecting team member for software teams is likely to positively influence the projects in which these teams participate. Besides, it seems that the type of development method used can moderate (increase or decrease) this influence. In addition, our study showed that the choice of sampling technique is not straightforward given the many interacting factors affecting this type of investigation. © 2013 Elsevier B.V. All rights reserved.},
  affiliation             = {Centre for Informatics, UFPE, Cidade Universitária, 50.540-740, Recife, PE, Brazil},
  author_keywords         = {People management; Software engineering; Software teams; Team building criteria; Team effectiveness},
  coden                   = {ISOTE},
  correspondence_address1 = {Da Silva, F.Q.B.; Centre for Informatics, UFPE, Cidade Universitária, 50.540-740, Recife, PE, Brazil; email: fabio@cin.ufpe.br},
  document_type           = {Conference Paper},
  doi                     = {10.1016/j.infsof.2012.11.006},
  keywords                = {Cross-sectional surveys; People management; Qualitative research; Replication strategies; Software teams; Systematic mapping studies; Team building criterion; Team effectiveness, Human engineering; Iterative methods; Research; Software engineering; Surveys, Project management},
  language                = {English},
  references              = {Acuña, S.T., Juristo, N., Assigning people to roles in software projects (2004) Software: Practice and Experience, 34, pp. 675-696; Acuña, S.T., Juristo, N., Moreno, A.M., Emphasizing human capabilities in software development (2006) IEEE Software, 23 (2), pp. 94-101; Acuña, S.T., Gómez, M., Juristo, N., Towards understanding the relationship between team climate and software quality: A quasi-experimental study (2008) Empirical Software Engineering, 13, pp. 401-434; Acuña, S.T., Gómez, M., Juristo, N., How do personality, team processes and task characteristics relate to job satisfaction and software quality? (2009) Information and Software Technology, 51 (3), pp. 627-639. , 10.1016/j.infsof.2008.08.006; (2000) Diagnostic and Statistical Manual of Mental Disorders (DSM-IV-TR), , American Psychiatric Association fourth ed., Amer. Psychiatric Pub; Anderson, N., Ones, D.S., Sinangil, H.K., Viswesvaran, C., (2001) Handbook of Industrial, Work and Organizational Psychology, 1. , Personal Psychology Sage Publications Ltd. Thousand Oaks, CA; Anderson, N., Ones, D.S., Sinangil, H.K., Viswesvaran, C., (2001) Handbook of Industrial, Work and Organizational Psychology, 2. , Organizational Psychology Sage Publications Ltd. Thousand Oaks, CA; Aycan, Z., Kanungo, R., Cross-cultural industrial and organizational psychology: A critical appraisal of the field and future directions (2001) Handbook of Industrial Work & Organizational Psychology, 1. , N. Anderson, D.S. Ones, H.K. Sinangil, C. Viswesvaran, SAGE London; Baker, F., Chief programmer team management of production programming (1972) IBM Systems Journal, 11 (1), pp. 56-73; Bartol, K., Martin, D., Matthews, G., Tein, M., (1998) Management: A Pacific Rim Focus, , The McGraw Hill Companies Australia; Beecham, S., Baddoo, N., Hall, T., Robinson, H., Sharp, H., Motivation in software engineering: A systematic literature review (2008) Information and Software Technology, 50 (910), pp. 860-878; Belbin, M.R., (1981) Management Teams: Why They Succeed or Fail?, , Butterworth- Heinemann Ltd. ISBN: 0750626763; Boehm, B.W., (1981) Software Engineering Economics, , Prentice-Hall, Inc. Englewood Cliffs; Bradley, J.H., Hebert, F.J., The effect of personality type on team performance (1997) Journal of Management Development, 16 (5), pp. 337-353; Brightman, H.J., (1998) Group Problem Solving: An Improved Managerial Approach, , Georgia State University Business Publishing Division Atlanta; Brooks, A., Roper, M., Wood, M., Daly, J., Miller, J., Replication's role in software engineering (2008) Guide to Advanced Empirical Software Engineering, pp. 365-379. , F. Shull, J. Singer, D.I.K. Sjøberg, Springer (Chapter 14); Brooks, F., (1975) The Mythical Man-Month, , Addison-Wesley ISBN: 201-00650-2; Campion, M.A., Medsker, G.J., Higgs, A.C., Relations between work group characteristics and effectiveness: Implications for designing effective work groups (1993) Personnel Psychology, 46 (4), pp. 823-847. , 10.1111/j.1744-6570.1993.tb01571.x; Carron, A.V., Brawley, L.R., Cohesion: Conceptual and measurement issues (2000) Small Group Research, 31, pp. 89-106; Carver, J.C., Towards reporting guidelines for experimental replications: A proposal (2010) RESEŔ2010: Proceedings of the 1st International Workshop on Replication in Empirical Software Engineering Research, , Cape Town, South Africa; Cohen, S.G., Designing effective self-managing work teams (1993) Advances in Interdisciplinary Studies of Work Teams, Series of Self-Managed Work Teams, 1. , M. Beyerlein, JAI Press Greenwich, Connecticut; Cohen, S.G., Bailey, D.E., What makes team work: Group effectiveness research from the shop floor to the executive suite (1997) Journal of Management, 23, pp. 239-290; Constantine, L., (2001) Peopleware Papers: The Notes on the Human Side of Software, , Prentice Hall; Cruz, S.J.O., Da Silva, F.Q.B., Monteiro, C.V.F., Santos, P.C.F., Dos Santos, I.R.M., Personality in software engineering: Preliminary findings from a systematic review (2011) Proceedings of the 15th Annual Conference on Evaluation and Assessment in Software Engineering (EASE 2011), , Durham. doi:10.1049/ic.2011.0001; Curtis, B., Hefley, W.E., Miller, S.A., People Capability Model (P-CMM), , Version 2.0, Tech. Report CMU/SEI-2001-MM-001, Software Eng. Inst., Carnegie Mellon Univ., 2001; Da Silva, F.Q.B., Cesar, A.C.F., An experimental research on the relationships between preferences for technical activities and behavioural profile in software development (2009) Proceedings of the XXIII Brazilian Symposium on Software Engineering, pp. 126-135. , doi:10.1109/SBES.2009.16; Da Silva, F.Q.B., França, A.C.C., Gouveia, T.B., Monteiro, C.V.F., Cardozo, E.S.F., Suassuna, M., An empirical study on the use of team building criteria in software projects (2011) Proceeding of the International Symposium on Empirical Software Engineering and Measurement (ESEM), pp. 58-67. , doi:10.1109/ESEM.2011.14; Da Silva, F.Q.B., Suassuna, M., Lopes, R.F., Gouveia, T.B., França, A.C.C., De Oliveira, J.P.N., De Oliveira, L.M.F., Santos, A.L.M., Replication of empirical studies in software engineering: Preliminary findings from a systematic mapping study (2011) Proceedings of the 2nd International Workshop on Replication of Empirical Software Engineering Research (RESER), , Banff, AL; Da Silva, F.Q.B., Suassuna, M., França, A.C.C., Grubb, A.M., Gouveia, T.B., Monteiro, C.V.F., Dos Santos, I.E., Replication of empirical studies in software engineering research: A systematic mapping study (2012) Empirical Software Engineering Journal, , doi:10.1007/s10664-012-9227-7; De Miranda, R.C.G., (2011) A Systematic Review about Software Development Teams: Typology, Characteristics, and Building Criteria, Master Dissertation, , Centre for Informatics, Federal University of Pernambuco; De Vasconcelos, A.P.L.F., (2012) Cohesion in Software Engineering Teams: A Systematic Mapping Study, , Master dissertation, Centre for Informatics, Federal University of Pernambuco; Demarco, T., Lister, T., (1999) Peopleware: Productive Projects and Teams, , Dorset House Publishing Co. New York; Drescher, S., Burlingame, G., Fuhriman, A., Cohesion: An odyssey in empirical understanding (1985) Small Group Research, 16, pp. 3-30; Dyba, T., Dingsoyr, T., Empirical studies of agile software development: A systematic review (2008) Information and Software Technology, 50 (910), pp. 833-859; Easterbrook, S.M., Singer, J., Storey, M., Damian, D., Selecting empirical methods for software engineering research (2008) Guide to Advanced Empirical Software Engineering, pp. 285-311. , F. Shull, J. Singer, D.I.K. Sjøberg, Springer Chap. 11; Franca, A.C.C., Gouveia, T.B., Santos, P.C.F., Santana, C.A., Da Silva, F.Q.B., Motivation in software engineering: A systematic review update (2011) Proceedings of 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), pp. 154-163. , Durham, UK; Cummings, L.L., Staw, B.M., (1987) Understanding Groups in Organizations, 9, pp. 121-173. , P.S. Goodman, E. Ravlin, M. Schminke, Research in Organizational Behavior; Gorla, N., Lam, Y.W., Who should work with whom? Building effective software project teams (2004) Communications of the ACM, 47 (6), pp. 79-82; Gorsuch, R.L., (1983) Factor Analysis, , Erlbaum Hillsdale, NJ; Gravetter, F.J., Forzano, L.B., (2011) Research Methods for the Behavioral Sciences, , fourth ed., Cengage, Learning; Gross, N., Martin, W.E., (1952) American Journal of Sociology, 57 (6), pp. 546-564; Guinan, P.J., Cooprider, J.G., Faraj, S., Enabling software development team performance during requirements definition: A behavioral versus technical approach (1998) Information System Research, 9 (2), pp. 101-125; Guion, R.M., (1998) Assessment, Measurement, and Prediction for Personnel Decision, , Lawrence Erlbaum Associates Mahwah, NJ; Guzzo, R.A., Dickson, M.W., Teams in organizations: Recent research on performance and effectiveness (1996) Annual Review of Psychology, 47, pp. 307-338. , doi:0.1146/annurev.psych.47.1.307; Guzzo, R.A., Salas, E., (1995) Team Effectiveness and Decision Making in Organizations, , Jossey-Bass San Francisco; Hackman, J.R., (1990) Groups That Work, , Jossey Bass San Francisco; Hackman, J.R., The design of work teams (1987) Handbook of Organizational Behavior, pp. 315-342. , J.W. Lorsch, Prentice-Hall Englewood Cliffs, NJ; Hackmam, J.R., Oldham, G.R., (1980) Work Redesign, , Addison-Wesley Reading, MA; Haggerty, N., Understanding the link between IT project manager skills and project success research in progress (2000) Proceedings of the 2000 ACM SIGCPR Conference on Computer Personnel Research, pp. 192-195. , Chicago, Illinois, United States; Hallows, J., (1998) Information Systems Project Management, , AMACOM New York; Ivancevich, J., Matteson, M., (2002) Organisational Behaviour and Management, , McGraw Hill Irwin, New York; Juristo, N., Vegas, S., Using differences among replications of software engineering experiments to gain knowledge (2009) Proceedings of the ACM/IEEE 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), pp. 356-366. , IEEE Computer Society Washington, DC, USA; Katzenbach, J., Smith, D., (2001) The Discipline of Teams: A Mindbook-Workbook for Delivering Small Group Performance, , John Wiley & Sons New York; Kitchenham, B.A., Pfleeger, S.L., Personal opinion surveys (2008) Guide to Advanced Empirical Software Engineering, pp. 63-92. , F. Shull, J. Singer, D.I.K. Sjøberg, Springer (Chapter 3); Kitchenham, B., Charters, S., (2007) Guidelines for Performing Systematic Literature Reviews in Software Engineering, , Technical Report EBSE-2007-01, School of Computer Science and Mathematics, Keele University; Klimoski, R., Zukin, L.N., Selection and staffing for team effectiveness (1999) Supporting Work Team Effectiveness, pp. 63-91. , E. Sundstrom, Jossey-Bass San Francisco; Lettice, F., McCracken, M., Team performance management: A review and look forward (2007) Team Performance Management, 13 (5-6), pp. 148-159; Mathieu, J., Maynard, M.T., Rapp, T., Gilson, L., Team effectiveness 1997-2007: A review of recent advancements and a glimpse into the future (2008) Journal of Management, 34 (3), pp. 410-476. , 10.1177/0149206308316061; McConnell, S., Problem programmers (1998) IEEE Software, 15 (2), pp. 126-128; McDonald, S., Edwards, H.M., Who should test whom? Examining the use and abuse of personality tests in software engineering (2007) Communications of the ACM, 50 (1), pp. 67-71; McGrath, J.E., (1984) Groups: Interaction and Performance, , Prentice-Hall Englewood Cliffs, New Jersey; Maznevski, M.L., Understanding our differences: Performance in decision-making groups with diverse members (1994) Human Relations, 47 (5), pp. 531-552; Merriam, S.B., (2009) Qualitative Research: A Guide to Design and Implementation, , Jossey-Bass San Francisco; Miller, J., Yin, Z., A cognitive-based mechanism for constructing software inspection teams (2004) IEEE Transactions on Software Engineering, 30 (11), pp. 811-825; Moe, N.B., Dingsoyr, T., Scrum and team effectiveness: Theory and practice (2008) Proceeding of the 9th Agile Processes in Software Engineering and Extreme Programming International Conference, pp. 11-20. , Limerick, Springer; Myers, I.B., (1962) The Myers-Briggs Type Indicator, , Consulting Psychologists Press Palo Alto, CA; Petticrew, M., Roberts, H., (2006) Systematic Reviews in the Social Sciences, , Blackwell Publishing; Peslak, A., The impact of personality on information technology team projects (2006) Proceedings of the ACM SIGMIS CPR Conference on Computer Personnel Research, pp. 273-279. , Forty Four Years of Computer Personnel Research: Achievements, Challenges & the Future ACM; Rajendran, M., Analysis of team effectiveness in software development teams working on hardware and software environments using Belbin self-perception inventory (2005) Journal of Management Development, 24 (8), pp. 738-753. , 10.1108/02621710510613753; Ryckman, R., (2004) Theories of Personality, , Thomson/Wadsworth Belmont, CA; Robinson, H., Segal, J., Sharp, H., Ethnographically-informed empirical studies of software practice (2007) Information and Software Technology, 49 (6), pp. 540-551. , 10.1016/j.infsof.2007.02.007; Salgado, J.F., Viswesvaran, C., Ones, D.S., Predictors used for personnel selection: An overview of constructs, methods, and techniques (2001) Handbook of Industrial Work & Organizational Psychology, 1. , N. Anderson, D.S. Ones, H.K. Sinangil, C. Viswesvaran, SAGE London; Seaman, C.B., Qualitative methods (2008) Guide to Advanced Empirical Software Engineering, , F. Shull, J. Singer, D.I.K. Sjøberg, Springer (Chapter 2); Shneiderman, B., (1980) Software Psychology: Human Factors in Computer and Information Systems, , Winthrop Publishers; Stevens, M.J., Campion, M.A., Knowledge, skills, and abilities for teamwork: Implications for human resources management (1994) Journal of Management, 20 (2), pp. 503-530; Weinberg, G.M., (1971) The Psychology of Computer Programming, Silver Anniversary Ed, , first ed. Dorset House Publishing; White, K., A preliminary investigation of information systems team structures (1984) Information & Management, 7, pp. 331-335; Yeatts, D.E., Hyten, C., (1998) High-Performing Self-Managed Work Teams, , Sage Publications Inc; Yin, R.K., (2003) Case Study Research: Design and Methods, , third ed. Sage London},
  review                  = {{CS C8 C12}},
  source                  = {Scopus},
  url                     = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877925082&doi=10.1016%2fj.infsof.2012.11.006&partnerID=40&md5=57ca4eff973620117cfb9d6419d45140},
}

@Conference{deMello2014364,
  author              = {de Mello, R.M. and da Silva, P.C. and Travassos, G.H.},
  title               = {Investigating probabilistic sampling approaches for large-scale surveys in software engineering},
  year                = {2014},
  pages               = {364-377},
  address             = {Pucon},
  publisher           = {Universidad de la Frontera},
  note                = {cited By 0; Conference of 17th Ibero-American Conference on Software Engineering, CIBSE 2014 ; Conference Date: 23 April 2014 Through 25 April 2014; Conference Code:106930},
  abbrev_source_title = {Proc. Ibero-Amer. Conf. Software Eng.},
  abstract            = {Surveys and quasi-experiments in software engineering are typically conducted over small populations defined by convenience, which hampers the generalization of observed evidence. In this sense, we argue that a strategy to support the systematic establishment of large population and correspondingly samples can contribute to reduce these threats. However, besides just proposing additional enlargement sampling alternatives, it is necessary to evaluate their use in actual Software Engineering studies. Therefore, this paper describes an experience regarding the recruitment of subjects concerned with the replication of a large scale survey on software processes agility characteristics through a professional social network (a.k.a. LinkedIn). By doing so, it was possible to deal with a sampling frame with more than 110,000 members distributed over 19 interest groups. Next, using similarity levels observed among the groups, eight strata were organized from which a sample with more than 7,700 subjects was able to be used to randomly recruit the participants. So far this replication obtained more participants and higher confidence level when compared with the two previous survey's trials with subjects recruited by convenience. Therefore, we believe the results from this experience, including the instruments and sampling plan can be useful for those researchers interested on executing large scale surveys in Software Engineering.},
  affiliation         = {Universidade Federal do Rio de Janeiro, PESC/COPPE, Brazil},
  author_keywords     = {Clustering; Experimental software engineering; Graph; Multivariate analysis; Random sampling; Stratified sampling; Strongly connected components; Survey},
  document_type       = {Conference Paper},
  isbn                = {9789562362474},
  journal             = {CIBSE 2014: Proceedings of the 17th Ibero-American Conference Software Engineering},
  keywords            = {Social networking (online); Social sciences computing; Surveying; Surveys, Clustering; Experimental software engineering; Graph; Multi variate analysis; Random sampling; Stratified sampling; Strongly connected component, Software engineering},
  language            = {English},
  references          = {Sjøberg, D.I., A survey of controlled experiments in software engineering (2005) IEEE Transactions On Software Engineering, 31 (9), pp. 733-753; Dybå, T., Kampenes, V.B., Sjøberg, D.I.K., A systematic review of statistical power in software engineering experiments, Inf. and Soft (2007) Tech, 48, pp. 745-755; Pickard, L.M., Kitchenham, B.A., Jones, P.W., Combining empirical results in software Engineering (1998) Information and Software Technology, 40, pp. 811-821; Kitchenham, B.A., Systematic literature reviews in software engineering - A tertiary study (2010) Information and Software Technology, 52, pp. 792-805; de Mello, R.M., Travassos, G.H., An Ecological Perspective Towards the Evolution of Quantitative Studies in Software Engineering (2013) Proc. of 17th EASE, pp. 216-219; Santos, G., MPS. BR Program and MPS Model: Main Results, Benefits and Beneficiaries of Software Process Improvement in Brazil (2012) Proc. of Intl. Conf. On Quality of Information and Communications Technology (QUATIC), pp. 137-142. , IEEE; de Mello, R.M., Travassos, G.H., Would Sociable Software Engineers Observe Better?" (2013) Proc. of 7th ESEM; Abrantes, J.F., Travassos, G.H., Towards Pertinent Characteristics of Agility and Agile Practices for Software Processes (2013) CLEI Electronic Journal, 16 (1); Fernández-Sáez, A.M., Are forward designed or reverse-engineered UML diagrams more helpful for code maintenance?: A controlled experiment," (2013) Proc. of the 17th EASE, , ACM; Raffo, D.M., Kelner, M.I., Empirical analysis in software process simulation modeling (2000) The Journal of Systems and Software, 53, pp. 31-41; Garcia, R.E., de Oliveira, M.C., Maldonado, J.C., Genetic algorithms to support software engineering experimentation (2005) Proc. of Intl. Symp. On Empirical Soft. Eng; Stolee, K.T., Elbaum, S., Exploring the Use of Crowdsourcing to Support Empirical Studies in Software Engineering (2010) Proc. of 4th ESEM; Stolee, K.T., Elbaum, S., On the Use of Input/Output Queries for Code Search" (2013) Proc. of 7th ESEM; Thompson, S.K., (2012) Sampling," 3rd Edition, , John Wiley & Sons; Bennett, S., A simplified general method for cluster-sample surveys of health in developing countries (1991) World Health Stat Q, 44 (3), pp. 98-106; Roberts, L., Mortality before and after the 2003 invasion of Iraq: Cluster sample survey (2004) The Lancet, 364 (9448), pp. 1857-1864; Eldridge, S.M., Ashby, D., Kerry, S., Sample size for cluster randomized trials: Effect of coefficient of variation of cluster size and analysis method (2006) International Journal of Epidemiology, 35 (5), pp. 1292-1300},
  review              = {{S C12}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906061727&partnerID=40&md5=141ab3ce01f39125bbe4ff311ca65960},
}

@Article{Reynares201483,
  author              = {Reynares, E. and Caliusco, M.L. and Galli, M.R.},
  title               = {Empirical evaluation of business rules mappings for ontology development [Evaluación empírica del mapeo de reglas de negocio para el desarrollo de ontologías]},
  journal             = {RISTI - Revista Iberica de Sistemas e Tecnologias de Informacao},
  year                = {2014},
  volume              = {2014},
  number              = {14},
  pages               = {83-99},
  issn                = {16469895},
  note                = {cited By 8},
  abbrev_source_title = {Rev. Iberica Sist. Tecnol. Inf.},
  abstract            = {The methodologies for the development of ontologies aimed to be used as software artifacts remain to be an open research area. Although the most widely recognized are rooted on UML given the acceptance of that language in the community of software engineering, none of them are fully mature. Recent works propose the mapping of SBVR expressions to ontology statements as a building technique, but just an empirical study comparing SBVR and UML-rooted techniques has been performed until now. This work analyzes the technical feasibility of SBVR to OWL 2 mappings by depicting a first differentiated replication of the original experiment varying the treatments, the size and composition of the experimental units, and comparing the performance of SBVR and ODM-based techniques. The findings allow sustaining the technical feasibility of the SBVR to OWL 2 mappings as an ontology development technique able to be applied by the software engineering community.},
  affiliation         = {CIDISI Research Center, UTN Santa Fe, B. Lavaysse 610, Santa Fe, Argentina; INGAR-UTN-CONICET, Avellaneda 3657, Santa Fe, Argentina},
  author_keywords     = {Business rule; Empirical evaluation; Experiment; Mappings; Ontology development},
  document_type       = {Article},
  doi                 = {10.17013/risti.14.83-99},
  keywords            = {Birds; Experiments; Semantic Web; Software engineering, Building techniques; Business rules; Empirical evaluations; Empirical studies; Engineering community; Ontology development; Software artifacts, Mapping},
  language            = {Spanish},
  publisher           = {Associacao Iberica de Sistemas e Tecnologias de Informacao},
  references          = {Alberts, R., Franconi, E., An integrated method using conceptual modelling to generate an ontology-based query mechanism (2012) OWL: Experiences and Directions Workshop 2012 (OWLED), , P. Klinov,& M. Horridge (Eds.), Greece volume 849 of CEUR Workshop Proceedings; Beydoun, G., Low, G., Tran, N., Bogg, P., Development of a peer-to-peer information sharing system using ontologies (2011) Expert Systems with Applications, 38 (8), pp. 9352-9364; Calero, C., Ruiz, F., Piattini, M., (2006) Ontologies for Software Engineering and Software Technology, , Springer, Heidelberg; Ceravolo, P., Fugazza, C., Leida, M., Modeling semantics of business rules (2007) EcoSystems, Digital Technologies Conference. DEST, 7, pp. 171-176; Chen, R.C., Huang, Y.H., Bau, C.T., Chen, S.M., A recommendation system based on domain ontology and SWRL for anti-diabetic drugs selection (2012) Expert Systems with Applications, 39, pp. 3995-4006; Demuth, B., Liebau, H.B., An approach for bridging the gap between business rules and the semantic web (2007) Proceedings of the International Symposium on Advances in Rule Interchange and Applications. LNCS, 4824, pp. 119-133. , A. Paschke & Y. Biletskiy (Eds.); Duque-Ramos, A., Fernández-Breis, J.T., Iniesta, M., Dumontier, M., Aranguren, M.E., Schulz, S., Aussenac-Gilles, N., Stevens, R., Evaluation of the OQuaREframework for ontology quality (2013) Expert Systems with Applications, 40 (7), pp. 2696-2703; Duque-Ramos, A., Fernández-Breis, J.T., Stevens, R., Aussenac-Gilles, N., OQuaRE: A SQuaRE-based approach for evaluating the quality of ontologies (2011) Journal of Research and Practice in Information Technology, 43 (2), pp. 159-176; Fay, M., Proschan, M., Wilcoxon Mann Whitney or t-test? On assumptions for hypothesis tests and multiple interpretations of decision rules (2010) Statistics Surveys, 4, pp. 1-39; Franconi, E., Mosca, A., The formalisation of ORM2 and its encoding in OWL2 (2012) Technical Report KRDB Research Centre Technical Report KRDB, pp. 12-12. , Faculty of Computer Science, Free University of Bozen-Bolzano Italy; Gómez-Pérez, A., Fernández-López, M., Corcho, O., (2004) Ontological Engineering, , Springer/Heidelberg; Hoekstra, R., Ontology Representation -Design Patterns and Ontologies that Make Sense (2009) Frontiers in Artificial Intelligence and Applications, p. 197. , IOS Press; Software Engineering -Software Product Quality Requirements and Evaluation (SQuaRE) (2005)Iqbal, R., Murad, M.A.A., Mustapha, A., Sharef, Mohd, N., An analysis of ontology engineering methodologies: A literature review (2013) Research Journal of Applied Sciences, Engineering and Technology, 6, pp. 2993-3000; Karpovic, J., Nemuraite, L., Transforming SBVR business semantics into Web Ontology Language OWL 2: Main concepts (2011) Proceedings of 17th International Conference on Information and Software Technologies; Lindsay, R.M., Ehrenberg, A.S., The design of replicated studies (1993) The American Statistician, 47, pp. 217-228; Lozano-Tello, A., Gómez-Pérez, A., Ontometric: A method to choose the appropriate ontology (2004) Journal of Database Management, 15 (2), pp. 1-18; Mann, H.B., Whitney, D.R., On a test of whether one of two random variables is stochastically larger than the other (1947) Annals of Mathematical Statistics, 18, pp. 50-60; Myrgioti, E., Bassiliades, N., Miliou, A., Bridging the HASM: An OWL ontology for modeling the information pathways in haptic interfaces software (2013) Expert Systems with Applications, 40 (4), pp. 1358-1371; Nicola, A.D., Missikoff, M., Navigli, R., A software engineering approach to ontology building (2009) Information Systems, 34 (2), pp. 258-275; Semantics of Business Vocabulary and Business Rules (SBVR) (2008), Version 1.0: Formal SpecificationOntology Definition Metamodel (ODM) (2009), V. 1.0Meta Object Facility (MOF) (2011), Object Management Group (OMG), V. 2.4.1Unified Modeling Language (UML) (2011)Park, J., Oh, S., Ahn, J., Ontology selection ranking model for knowledge reuse (2011) Expert Systems with Applications, 38 (5), pp. 5133-5144; Pinker, S., (2007) The Stuff of Thought, , London, England. Allen Lane; Reynares, E., Caliusco, M.L., Galli, M.R., EDON: A method for building an ontology as software artefact (2012) 41st Argentine Conference on Informatics -13th Argentine Symposium on Software Engineering, , Bs As, Argentina; Reynares, E., Caliusco, M.L., Galli, M.R., An automatable approach for SBVR to OWL 2 mappings (2013) XVI Ibero-American Conference on Software Engineering (CIbSE 2013), , Montevideo, Uruguay; Reynares, E., Caliusco, M.L., Galli, M.R., Approaching the feasibility of SBVR as modeling language for ontology development: An exploratory experiment (2014) Expert Systems with Applications, 41 (2), pp. 1576-1583; Reynares, E., Caliusco, M.L., Galli, M.R., SBVR to OWL 2 mappings: An automatable and structural-rooted approach (2014) CLEI-EJ, p. 17; Ruotsalo, T., (2010) Methods and Applications for Ontology-Based Recommender Systems (PhD. Thesis), , Ph. D Thesis Alto University School of Science and Technology Finland; Saripalle, R.K., Demurjian, S.A., Algarín, A.D.L.R., Blechner, M., A software modeling approach to ontology design via extensions to ODM and OWL (2013) International Journal on Semantic Web and Information Systems (IJSWIS), 9 (2), pp. 62-97; Shue, L.Y., Chen, C.W., Shiue, W., The development of an ontology-based expert system for corporate financial rating (2009) Expert Systems with Applications, 36 (2), pp. 2130-2142; Sjøberg, D.I., Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanovic, A., Liborg, N.K., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE Transactions on Software Engineering, 31 (9), pp. 733-753; Stevens, R., Gobel, C., Lord, P., Application of ontologies in bioinformatics (2008) Handbook of Ontologies in Informations Systems, pp. 635-658. , S. Staab, & R. Studer (Eds.), Springer; Tichy, W.F., Hints for reviewing empirical work in software engineering (2000) Empirical Software Engineering, 5 (4), pp. 309-312; Vrandecic, D., Ontology Evaluation (2010), Ph. D thesis. University of KarlsruheOWL Web Ontology Language Overview (2004)RDF Vocabulary Description Language 1.0: RDF Schema (2004)OWL 2 Web Ontology Language. Document Overview (2009)OWL 2 Web Ontology Language (2009)},
  review              = {{E C2}},
  source              = {Scopus},
  url                 = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923018018&doi=10.17013%2fristi.14.83-99&partnerID=40&md5=35ea94ea6dfd9822ad86489b9b2395c3},
}

@Comment{jabref-meta: databaseType:bibtex;}
